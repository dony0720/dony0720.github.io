{"componentChunkName":"component---src-templates-blog-template-js","path":"/TodoList/list/","result":{"data":{"cur":{"id":"21af2138-65c1-5240-9231-fe6265131d4d","html":"<h1 id=\"list-작성하기-구현\" style=\"position:relative;\"><a href=\"#list-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0-%EA%B5%AC%ED%98%84\" aria-label=\"list 작성하기 구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>List 작성하기 구현</h1>\n<h2 id=\"소스코드\" style=\"position:relative;\"><a href=\"#%EC%86%8C%EC%8A%A4%EC%BD%94%EB%93%9C\" aria-label=\"소스코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소스코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> toDoForm <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".todo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> toDoList <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"todo-list\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> toDoInput <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".todo input\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">let</span> toDos <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> <span class=\"token constant\">TODOS_KEY</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"todos\"</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">handleToDoSubmit</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> \r\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">const</span> newToDo <span class=\"token operator\">=</span> toDoInput<span class=\"token punctuation\">.</span>value <span class=\"token punctuation\">;</span> \r\n  toDoInput<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span> \r\n  <span class=\"token keyword\">const</span> newTodoObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> newToDo<span class=\"token punctuation\">,</span>\r\n    <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  \r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n  toDos<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>newTodoObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token function\">paintToDo</span><span class=\"token punctuation\">(</span>newTodoObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token function\">saveToDos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n <span class=\"token punctuation\">}</span>\r\n \r\ntoDoForm<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"submit\"</span><span class=\"token punctuation\">,</span>handleToDoSubmit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">paintToDo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">newToDo</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n<span class=\"token keyword\">const</span> li <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"li\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \r\nli<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> newToDo<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span> \r\n<span class=\"token keyword\">const</span> span1 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"span\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\nspan1<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> newToDo<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> span2 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"span\"</span><span class=\"token punctuation\">)</span>\r\nspan2<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">\"material-symbols-outlined\"</span><span class=\"token punctuation\">;</span>\r\nspan2<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> <span class=\"token string\">\"delete\"</span>\r\nspan2<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span>deletToDo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\nli<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>span1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   \r\nli<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>span2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\ntoDoList<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>li<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \r\n\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">saveToDos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n    localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token constant\">TODOS_KEY</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>toDos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \r\n    <span class=\"token comment\">// JSON.stringify는 string으로 바꾸는 역할을 한다. </span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">deletToDo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> li <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>parentElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \r\n    <span class=\"token comment\">// target은 클릭된 HTML의 element, parentElement는 클릭된 element의 부모 </span>\r\n    li<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    toDos <span class=\"token operator\">=</span> toDos<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">todo</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> todo<span class=\"token punctuation\">.</span>id <span class=\"token operator\">!==</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>li<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \r\n    <span class=\"token comment\">//todo는 todos 각각의 object를 부르게 될 때 필요한 저장공간  </span>\r\n    <span class=\"token function\">saveToDos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">const</span> savedToDos <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token constant\">TODOS_KEY</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>savedToDos <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">//저장된 데이터가 있을경우에 실행 </span>\r\n  <span class=\"token keyword\">const</span> parsedToDos <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>savedToDos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \r\n  <span class=\"token comment\">//JSON.parse는 object로 바꾸는 역할을 한다 </span>\r\n\r\n  toDos <span class=\"token operator\">=</span> parsedToDos<span class=\"token punctuation\">;</span>\r\n  parsedToDos<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>paintToDo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \r\n  <span class=\"token comment\">// 각각의 item에 대해서 paintToDo를 실행시킨다 </span>\r\n  <span class=\"token comment\">// parsedToDos가 4개의 인덱스를 가지고 있는 배열이라면 console.log를 각각의 인덱스에 대해서 총 4번실행하게 된다. </span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"handletodosubmitevent-함수\" style=\"position:relative;\"><a href=\"#handletodosubmitevent-%ED%95%A8%EC%88%98\" aria-label=\"handletodosubmitevent 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>handleToDoSubmit(event) 함수</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">handleToDoSubmit</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> \r\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">const</span> newToDo <span class=\"token operator\">=</span> toDoInput<span class=\"token punctuation\">.</span>value <span class=\"token punctuation\">;</span>\r\n  toDoInput<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">const</span> newTodoObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> newToDo<span class=\"token punctuation\">,</span>\r\n    <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n  toDos<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>newTodoObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token function\">paintToDo</span><span class=\"token punctuation\">(</span>newTodoObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token function\">saveToDos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n <span class=\"token punctuation\">}</span></code></pre></div>\n<ol>\n<li>\n<p><code class=\"language-text\">function handleToDoSubmit(event)</code> javascript가 발생한 event를<br>\n함수의 첫번째 인자로 주게된다.</p>\n</li>\n<li>\n<p><code class=\"language-text\">event.preventDefault();</code> event의 기본 동작을 막는다</p>\n</li>\n<li>\n<p>newToDo에 input의 값을 저장하고 엔터를 누를때 input을 비우기 위해 <code class=\"language-text\">toDoInput.value = \"\"</code> 사용</p>\n</li>\n<li>\n<p>newTodoObj 객체를 생성하고 text 에는 <strong>newToDo</strong>를 각 리스트의<br>\n분별력을 주기 위해서 id 값을 <code class=\"language-text\">Date.now()</code> 리스트가 작성된 시간으로 반영</p>\n</li>\n<li>\n<p>할당된 객체는 <strong>toDos</strong> 배열에 채워넣는다</p>\n</li>\n</ol>\n<h2 id=\"painttodo함수\" style=\"position:relative;\"><a href=\"#painttodo%ED%95%A8%EC%88%98\" aria-label=\"painttodo함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>paintToDo()함수</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">paintToDo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">newToDoObj</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n<span class=\"token keyword\">const</span> li <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"li\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//li 태그 생성 </span>\r\nli<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> newToDoObj<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span> \r\n<span class=\"token keyword\">const</span> span1 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"span\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// span 태그 생성 </span>\r\nspan1<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> newToDoObj<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> span2 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"span\"</span><span class=\"token punctuation\">)</span>\r\nspan2<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">\"material-symbols-outlined\"</span><span class=\"token punctuation\">;</span>\r\nspan2<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> <span class=\"token string\">\"delete\"</span>\r\nspan2<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span>deletToDo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\nli<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>span1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// span이 li의 자식으로 들어가진다  </span>\r\nli<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>span2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\ntoDoList<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>li<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \r\n<span class=\"token comment\">/*span -> li -> #todo-list 의 순서로 appendChild를 사용해야 \r\n  역순으로 태그가 생성된다.*/</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol>\n<li>\n<p><code class=\"language-text\">const li = document.createElement(\"li\")</code></p>\n<ul>\n<li>li 태그 생성</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">li.id = newToDo.id</code></p>\n<ul>\n<li>생성된 li 태그의 id 값을 newTodoObj의 id로 할당</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">span1</code>도 <code class=\"language-text\">const li</code>와 동일한 원리로 할당</p>\n</li>\n<li>\n<p><strong>휴지통 아이콘을 클릭할때 마다 해당 list를 제거하기 위해서 <code class=\"language-text\">Google font</code>를 사용</strong></p>\n<ul>\n<li>\n<p><code class=\"language-text\">&lt;link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200\" /></code> 를 head에 작성</p>\n</li>\n<li>\n<p><code class=\"language-text\">const span2 = document.createElement(\"span\")1</code>\r\n-> span 태그를 생성</p>\n</li>\n<li>\n<p><code class=\"language-text\">span2.className = \"material-symbols-outlined\"</code>\r\n-> 생성된 span2의 class명을 할당</p>\n</li>\n<li>\n<p><code class=\"language-text\">span2.innerText = \"delete\"</code>\r\n-> 생성된 span2의 Text 값을 할당</p>\n</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">li.appendChild(span1)</code></p>\n<ul>\n<li><code class=\"language-text\">span1</code>이 <code class=\"language-text\">li</code>의 자식으로 들어가진다</li>\n</ul>\n<p><code class=\"language-text\">li.appendChild(span2)</code></p>\n<ul>\n<li><code class=\"language-text\">span1</code> 이 먼저 선언되었으므로 <strong>li의 첫번째 후손으로 들어가고</strong></li>\n<li><code class=\"language-text\">span2</code>가 <strong>두번째 후손으로 들어가게된다</strong></li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">toDoList.appendChild(li)</code></p>\n<ul>\n<li>생성된 li가 <strong><code class=\"language-text\">toDoList</code></strong> 의 자식으로 들어가게 된다.</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"savetodos-함수\" style=\"position:relative;\"><a href=\"#savetodos-%ED%95%A8%EC%88%98\" aria-label=\"savetodos 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>saveToDos() 함수</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">saveToDos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n    localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token constant\">TODOS_KEY</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>toDos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol>\n<li>\n<p>생성된 리스트를 <strong><code class=\"language-text\">localStorage.setItem</code></strong> 을 이용해<br>\nkey 값은 TODOS_KEY으로 Value는 <strong><code class=\"language-text\">JSON.stringify(toDos)</code></strong> 으로 저장한다</p>\n</li>\n<li>\n<p><strong><code class=\"language-text\">JSON.stringify</code></strong> 는 toDos 배열을 <strong>String</strong>으로 바꾼다</p>\n</li>\n</ol>\n<h2 id=\"delettodo-함수\" style=\"position:relative;\"><a href=\"#delettodo-%ED%95%A8%EC%88%98\" aria-label=\"delettodo 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>deletToDo() 함수</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">deletToDo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> li <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>parentElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \r\n    <span class=\"token comment\">// target은 클릭된 HTML의 element, parentElement는 클릭된 element의 부모 </span>\r\n\r\n    li<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    toDos <span class=\"token operator\">=</span> toDos<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">todo</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> todo<span class=\"token punctuation\">.</span>id <span class=\"token operator\">!==</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>li<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \r\n    <span class=\"token comment\">//todo는 todos 각각의 object를 부르게 될 때 필요한 저장공간  </span>\r\n    <span class=\"token function\">saveToDos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol>\n<li>\n<p><code class=\"language-text\">const li = (event.target.parentElement)</code>\r\n-> target은 클릭된 HTML의 element, parentElement는 클릭된 element의 부모</p>\n</li>\n<li>\n<p><code class=\"language-text\">li.remove();</code>\r\n-> 선택된 li태그를 제거한다</p>\n</li>\n<li>\n<p><code class=\"language-text\"> toDos = toDos.filter((todo) => todo.id !== parseInt(li.id))</code></p>\n<ul>\n<li>\n<p>todo는 todos 각각의 object를 부르게 될 때 필요한 저장공간</p>\n</li>\n<li>\n<p><strong><code class=\"language-text\">filter</code>함수의</strong> 참 조건은 <strong>toDos 배열안에 있는 각각의 id 값이</strong><br>\n<strong>li.id</strong> 값과 다를때이다</p>\n</li>\n<li>\n<p>두 값을 비교하기 위해서 문자열인 li.id를 숫자로 변환시켜야 하므로<br>\n<code class=\"language-text\">parseInt</code> 를 사용한다</p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"local-strage에-저장된-값이-있을-경우-리스트-출력-구현\" style=\"position:relative;\"><a href=\"#local-strage%EC%97%90-%EC%A0%80%EC%9E%A5%EB%90%9C-%EA%B0%92%EC%9D%B4-%EC%9E%88%EC%9D%84-%EA%B2%BD%EC%9A%B0-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%B6%9C%EB%A0%A5-%EA%B5%AC%ED%98%84\" aria-label=\"local strage에 저장된 값이 있을 경우 리스트 출력 구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Local Strage에 저장된 값이 있을 경우 리스트 출력 구현</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> savedToDos <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token constant\">TODOS_KEY</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>savedToDos <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">//저장된 데이터가 있을경우에 실행 </span>\r\n  <span class=\"token keyword\">const</span> parsedToDos <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>savedToDos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//JSON.parse는 object로 바꾸는 역할을 한다 </span>\r\n  toDos <span class=\"token operator\">=</span> parsedToDos<span class=\"token punctuation\">;</span>\r\n  parsedToDos<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>paintToDo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \r\n  <span class=\"token comment\">// 각각의 item에 대해서 paintToDo를 실행시킨다 </span>\r\n  <span class=\"token comment\">// parsedToDos가 4개의 인덱스를 가지고 있는 배열이라면 painToDo를 각각의 인덱스에 대해서 총 4번실행하게 된다. </span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol>\n<li>\n<p>savedToDos 변수를 만들고 <code class=\"language-text\">localStorage.getItem(TODOS_KEY)</code></p>\n<ul>\n<li>key값이 TODOS_KEY로부터 저장된 데이터를 가져온다</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">if (savedToDos !== null)</code></p>\n<ul>\n<li>저장된 데이터가 있을경우에만 실행된다</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">const parsedToDos = JSON.parse(savedToDos);</code></p>\n<ul>\n<li><code class=\"language-text\">JSON.parse</code>**는 object로 바꾸는 역할을 한다</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">parsedToDos.forEach(paintToDo);</code></p>\n<ul>\n<li>\n<p><strong>각각의 item에 대해서 paintToDo를 실행시킨다</strong></p>\n</li>\n<li>\n<p><strong>parsedToDos가 4개의 인덱스를 가지고 있는 배열이라면 paindToDo를 각각의 인덱스에 대해서 총 4번 실행하게 된다.</strong></p>\n</li>\n</ul>\n</li>\n</ol>","excerpt":"List 작성하기 구현 소스코드 handleToDoSubmit(event) 함수  javascript가 발생한 event를 함수의 첫번째 인자로 주게된다.  event의 기본 동작을 막는다 newToDo에 input의 값을 저장하고 엔터를 누를때 input을 비우기 위해  사용 newTodoObj 객체를 생성하고 text 에는 newToDo를 각 리스트의 분별력을 주기 위해서 id 값을  리스트가 작성된 시간으로 반영 할당된 객체는 toDos 배열에 채워넣는다 paintToDo()함수  li 태그 생성  생성된 li 태그의 id 값을 newTodoObj의 id로 할당 도 와 동일한 원리로 할당 휴지통 아이콘을 클릭할때 마다 해당 list를 제거하기 위해서 를 사용  를 head에 작성 \r\n-> span 태그를 생성 \r\n-> 생성된 span2의 class명을 할당 \r\n-> 생성된 span2의 Text 값을 할당  이 의 자식으로 들어가진다   이 먼저 선언되었으므로 li의 첫번째 후…","frontmatter":{"date":"March 28, 2023","title":"TodoList (9)  - List 작성","categories":"TodoList Js","author":"Js","emoji":"🧢"},"fields":{"slug":"/TodoList/list/"}},"next":{"id":"6bb20e84-aff0-5986-bc3d-a91f7a2daf9a","html":"<h1 id=\"quote-생성\" style=\"position:relative;\"><a href=\"#quote-%EC%83%9D%EC%84%B1\" aria-label=\"quote 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Quote 생성</h1>\n<h2 id=\"소스코드\" style=\"position:relative;\"><a href=\"#%EC%86%8C%EC%8A%A4%EC%BD%94%EB%93%9C\" aria-label=\"소스코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소스코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> quotes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\r\n  <span class=\"token punctuation\">{</span>\r\n    <span class=\"token literal-property property\">quote</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">The way to get started is to quit talking and begin doing.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token literal-property property\">author</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Walt Disney\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span>\r\n    <span class=\"token literal-property property\">quote</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Life is what happens when you're busy making other plans.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token literal-property property\">author</span><span class=\"token operator\">:</span> <span class=\"token string\">\"John Lennon\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span>\r\n    <span class=\"token literal-property property\">quote</span><span class=\"token operator\">:</span>\r\n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">The world is a book and those who do not travel read only one page.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token literal-property property\">author</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Saint Augustine\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span>\r\n    <span class=\"token literal-property property\">quote</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Life is either a daring adventure or nothing at all.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token literal-property property\">author</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Helen Keller\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span>\r\n    <span class=\"token literal-property property\">quote</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">To Travel is to Live</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token literal-property property\">author</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Hans Christian Andersen\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span>\r\n    <span class=\"token literal-property property\">quote</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Only a life lived for others is a life worthwhile.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token literal-property property\">author</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Albert Einstein\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span>\r\n    <span class=\"token literal-property property\">quote</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">You only live once, but if you do it right, once is enough.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token literal-property property\">author</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Mae West\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span>\r\n    <span class=\"token literal-property property\">quote</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Never go on trips with anyone you do ntot love.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token literal-property property\">author</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Hemmingway\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span>\r\n    <span class=\"token literal-property property\">quote</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">We wander for distraction, but we travel for fulfilment.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token literal-property property\">author</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Hilaire Belloc\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span>\r\n    <span class=\"token literal-property property\">quote</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Travel expands the mind and fills the gap.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token literal-property property\">author</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Sheda Savage\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> quote <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".quote-box div:nth-child(2)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \r\n<span class=\"token comment\">//element:nth-child(a) a에 원하는 순서(위->아래)의 번호를 넣어 자식을 선택 </span>\r\n\r\n<span class=\"token keyword\">const</span> author <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".quote-box div:last-child\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> quoteBox <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".quote-box\"</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">const</span> todaysQuote <span class=\"token operator\">=</span> quotes<span class=\"token punctuation\">[</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> quotes<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n\r\nquote<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> todaysQuote<span class=\"token punctuation\">.</span>quote<span class=\"token punctuation\">;</span>\r\nauthor<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>todaysQuote<span class=\"token punctuation\">.</span>author<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">-</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\r\n\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">changeQuoute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> todaysQuote <span class=\"token operator\">=</span> quotes<span class=\"token punctuation\">[</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> quotes<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n  quote<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> todaysQuote<span class=\"token punctuation\">.</span>quote<span class=\"token punctuation\">;</span>\r\n  author<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>todaysQuote<span class=\"token punctuation\">.</span>author<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">-</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\r\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\nquoteBox<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> changeQuoute<span class=\"token punctuation\">)</span>\r\n\r\n</code></pre></div>\n<h2 id=\"changequoute-함수\" style=\"position:relative;\"><a href=\"#changequoute-%ED%95%A8%EC%88%98\" aria-label=\"changequoute 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>changeQuoute 함수</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> todaysQuote <span class=\"token operator\">=</span> quotes<span class=\"token punctuation\">[</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> quotes<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\nquote<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> todaysQuote<span class=\"token punctuation\">.</span>quote<span class=\"token punctuation\">;</span>\r\nauthor<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>todaysQuote<span class=\"token punctuation\">.</span>author<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">-</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol>\n<li>\n<p><strong>const todaysQuote = quotes[Math.floor(Math.random() * quotes.length)]</strong></p>\n<ul>\n<li>\n<p>0~1사이에 난수를 생성는 <strong>Math.random</strong>을 사용</p>\n</li>\n<li>\n<p>발생한 난수를 quotes 배열의 길이 만큼 곱해 <strong>0 ~ quotes.length</strong> 사이에 난수를 생성</p>\n</li>\n<li>\n<p>Math.floor를 사용해 소수점 뒷자리를 반올림해 정수를 생성</p>\n</li>\n</ul>\n</li>\n</ol>","frontmatter":{"date":"March 28, 2023","title":"TodoList (10) - Quote 자동 생성기","categories":"TodoList Js","author":"Js","emoji":"🧢"},"fields":{"slug":"/TodoList/quote/"}},"prev":{"id":"35e6beee-6b77-57be-ba3e-c564a62934b0","html":"<h1 id=\"calendar-버튼-기능-구현\" style=\"position:relative;\"><a href=\"#calendar-%EB%B2%84%ED%8A%BC-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84\" aria-label=\"calendar 버튼 기능 구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Calendar 버튼 기능 구현</h1>\n<h2 id=\"소스코드\" style=\"position:relative;\"><a href=\"#%EC%86%8C%EC%8A%A4%EC%BD%94%EB%93%9C\" aria-label=\"소스코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소스코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> goPre <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".go-pre\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> goNext <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".go-next\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> goTd <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".go-today\"</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">preMonth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  dt<span class=\"token punctuation\">.</span><span class=\"token function\">setMonth</span><span class=\"token punctuation\">(</span>dt<span class=\"token punctuation\">.</span><span class=\"token function\">getMonth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token function\">renderCalendar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">nextMonth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  dt<span class=\"token punctuation\">.</span><span class=\"token function\">setMonth</span><span class=\"token punctuation\">(</span>dt<span class=\"token punctuation\">.</span><span class=\"token function\">getMonth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token function\">renderCalendar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token comment\">// element.setMonth(element.getMonth())는 12월이 넘어갈때 자동으로 연도가 바뀜  </span>\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">todaybtn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n  dt <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token function\">renderCalendar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token function\">renderCalendar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\ngoPre<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> preMonth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\ngoNext<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> nextMonth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\ngoTd<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> todaybtn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<h2 id=\"premonth-함수\" style=\"position:relative;\"><a href=\"#premonth-%ED%95%A8%EC%88%98\" aria-label=\"premonth 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>preMonth() 함수</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">preMonth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  dt<span class=\"token punctuation\">.</span><span class=\"token function\">setMonth</span><span class=\"token punctuation\">(</span>dt<span class=\"token punctuation\">.</span><span class=\"token function\">getMonth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token function\">renderCalendar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>\n<p><strong>’&#x3C;’ 버튼을</strong> 누를때 이전달로 넘어가야 하기 때문에</p>\n</li>\n<li>\n<p><code class=\"language-text\">dt.setMonth(dt.getMonth() - 1)</code> 를 이용해 현재 달에 -1 값으로 설정</p>\n</li>\n<li>\n<p>재할당된 dt.setMonth를 가지고 renderCalendar() 호출</p>\n</li>\n</ul>\n<br>\n<h2 id=\"nextmonth-함수\" style=\"position:relative;\"><a href=\"#nextmonth-%ED%95%A8%EC%88%98\" aria-label=\"nextmonth 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>nextMonth() 함수</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">nextMonth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  dt<span class=\"token punctuation\">.</span><span class=\"token function\">setMonth</span><span class=\"token punctuation\">(</span>dt<span class=\"token punctuation\">.</span><span class=\"token function\">getMonth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token function\">renderCalendar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>\n<p><strong>’>‘버튼을</strong> 누를때 다음달로 넘어가야 하기 때문에</p>\n</li>\n<li>\n<p><code class=\"language-text\">dt.setMonth(dt.getMonth() + 1)</code> 를 이용해 현재 달에 +1 값으로 설정</p>\n</li>\n<li>\n<p>재할당된 <code class=\"language-text\">dt.setMonth</code>를 가지고 <code class=\"language-text\">renderCalendar()</code> 호출</p>\n</li>\n</ul>\n<br>\n<h2 id=\"todaybtn-함수\" style=\"position:relative;\"><a href=\"#todaybtn-%ED%95%A8%EC%88%98\" aria-label=\"todaybtn 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>todaybtn() 함수</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">todaybtn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n  dt <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token function\">renderCalendar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>Today 버튼을 누를때 다시 현재 날짜로 돌아오기 위해 dt의 값을<br>\n<code class=\"language-text\">new Date()</code>로 할당해야기 때문에 <strong>초반에 dt 를 <code class=\"language-text\">const</code>가 아닌 <code class=\"language-text\">let</code>으로 설정한이유</strong></li>\n</ul>","frontmatter":{"date":"March 28, 2023","title":"TodoList (8) - Calendar 기능 구현(2)","categories":"TodoList Js","author":"Js","emoji":"🧢"},"fields":{"slug":"/TodoList/calendar(3)/"}},"site":{"siteMetadata":{"siteUrl":"https://www.zoomkoding.com","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/TodoList/list/","nextSlug":"/TodoList/quote/","prevSlug":"/TodoList/calendar(3)/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}