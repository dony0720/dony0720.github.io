{"componentChunkName":"component---src-templates-blog-template-js","path":"/React/React (3)/","result":{"data":{"cur":{"id":"120882d4-3847-51ed-801c-e56789d8bf2e","html":"<h1 id=\"props란\" style=\"position:relative;\"><a href=\"#props%EB%9E%80\" aria-label=\"props란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Props란?</h1>\n<ol>\n<li>부모 컴포넌트로부터 자식 컴포넌트에게 데이터를 보내주는 방법</li>\n<li>객체이다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"https://unpkg.com/react@17.0.2/umd/react.development.js \"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre></div>\n<p>어떤 prop들을 받는지 검사하게끔 도와주는 역할을 한다.</p>\n<h2 id=\"btn-컴포넌트-함수\" style=\"position:relative;\"><a href=\"#btn-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%ED%95%A8%EC%88%98\" aria-label=\"btn 컴포넌트 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Btn 컴포넌트 함수</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">Btn</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> text<span class=\"token punctuation\">,</span> fontSize <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n    <span class=\"token operator\">&lt;</span>button\r\n      style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> <span class=\"token string\">'tomato'</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'white'</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span> <span class=\"token string\">'10px 20px'</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token literal-property property\">border</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token literal-property property\">borderRadius</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\r\n        fontSize<span class=\"token punctuation\">,</span>\r\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\r\n    <span class=\"token operator\">></span>\r\n      <span class=\"token punctuation\">{</span>text<span class=\"token punctuation\">}</span>\r\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\r\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol>\n<li>props는 객체이기 때문에 { }열어 원하는 속성을 바로 받을 수 있음</li>\n<li>{ }를 사용하지 않게 되면 props.text, props.fontSize의 방식으로 값에 접근해야한다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">Btn<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> propTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">,</span>\r\n  <span class=\"token literal-property property\">fontSize</span><span class=\"token operator\">:</span> propTypes<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>text prop은 string 형태의 데이터, fontSize는 number 형태의 데이터가 아닐시 동작은 되지만<br>\n콘솔 창에 올바른 형태의 데이터가 아니라고 경고를 알려준다.</p>\n<h2 id=\"app-컴포넌트-함수\" style=\"position:relative;\"><a href=\"#app-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%ED%95%A8%EC%88%98\" aria-label=\"app 컴포넌트 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>App 컴포넌트 함수</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span>Btn text<span class=\"token operator\">=</span><span class=\"token string\">\"save\"</span> fontSize<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">18</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span>Btn text<span class=\"token operator\">=</span><span class=\"token string\">\"Continue\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\r\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> root<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol>\n<li>어떠한 것들을 컴포넌트 안에 넣든간에 HTML안에 영향을 주지 않고 prop이 된다.</li>\n<li>컴포넌트 함수에 해당 prop을 등록하고 작성해야만 한다.</li>\n<li>전달된 prop들은 하나의 오브젝트로 받게된다.</li>\n<li>prop을 전달할때의 이름과 받아서 사용할때의 이름은 동일해야한다.</li>\n</ol>\n<h2 id=\"props와-stata의-차이점\" style=\"position:relative;\"><a href=\"#props%EC%99%80-stata%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90\" aria-label=\"props와 stata의 차이점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>props와 stata의 차이점</h2>\n<ol>\n<li>props: 함수의 매개변수처럼 컴포넌트에 전달된다.</li>\n<li>state: 함수 내에 선언된 변수처럼 컴포넌트 안에서 관리된다.</li>\n</ol>","excerpt":"Props란? 부모 컴포넌트로부터 자식 컴포넌트에게 데이터를 보내주는 방법 객체이다. 어떤 prop들을 받는지 검사하게끔 도와주는 역할을 한다. Btn 컴포넌트 함수 props는 객체이기 때문에 { }열어 원하는 속성을 바로 받을 수 있음 { }를 사용하지 않게 되면 props.text, props.fontSize의 방식으로 값에 접근해야한다. text prop은 string 형태의 데이터, fontSize는 number 형태의 데이터가 아닐시 동작은 되지만 콘솔 창에 올바른 형태의 데이터가 아니라고 경고를 알려준다. App 컴포넌트 함수 어떠한 것들을 컴포넌트 안에 넣든간에 HTML안에 영향을 주지 않고 prop이 된다. 컴포넌트 함수에 해당 prop을 등록하고 작성해야만 한다. 전달된 prop들은 하나의 오브젝트로 받게된다. prop을 전달할때의 이름과 받아서 사용할때의 이름은 동일해야한다. props와 stata의 차이점 props: 함수의 매개변수처럼 컴포넌트에 전달된다. …","frontmatter":{"date":"December 26, 2023","title":"React (3)","categories":"React","author":"중석","emoji":"📝"},"fields":{"slug":"/React/React (3)/"}},"next":{"id":"864008bc-04cb-5274-8623-07c1c58d4185","html":"<h2 id=\"minutestohours-컴포넌트-함수\" style=\"position:relative;\"><a href=\"#minutestohours-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%ED%95%A8%EC%88%98\" aria-label=\"minutestohours 컴포넌트 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MinutesToHours 컴포넌트 함수</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token keyword\">function</span> <span class=\"token function\">MinutesToHours</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>amount<span class=\"token punctuation\">,</span> setAmount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>flipped<span class=\"token punctuation\">,</span> setFliped<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"배열-비구조화-할당\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4-%EB%B9%84%EA%B5%AC%EC%A1%B0%ED%99%94-%ED%95%A0%EB%8B%B9\" aria-label=\"배열 비구조화 할당 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열 비구조화 할당</h3>\n<ol>\n<li>amount는 React.useState(0)을 사용해 초기값을 0으로 설정,<br>\nflipped는 React.useState(false) 초기값을 false로 설정 하게된다.</li>\n<li>setAmount, setFliped 함수는 amount와 flipped의 값을 업데이트 할때 사용된다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token function\">setAmount</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">reset</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setAmount</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onFlip</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token function\">setFliped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">current</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token operator\">!</span>current<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol>\n<li>\n<p>setFliped(counter + 1)로 로직을 만들 경우 counter는 state를 할당한 값만 참조한다.<br>\n즉, setFliped를 여러번 호출하게 되면 값이 항상 2가 된다.</p>\n</li>\n<li>\n<p>하지만 setFliped((current) => !current)로 로직을 만들 경우 current에는 useStete의 state자체를 참조한다.<br>\n여러번 함수를 호출하게 되면 값을 업데이트해서 반영한다.</p>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n          <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\r\n              <span class=\"token operator\">&lt;</span>label htmlFor<span class=\"token operator\">=</span><span class=\"token string\">\"minutes\"</span><span class=\"token operator\">></span>Minutes<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>label<span class=\"token operator\">></span>\r\n              <span class=\"token operator\">&lt;</span>input\r\n                value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>flipped <span class=\"token operator\">?</span> amount <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">:</span> amount<span class=\"token punctuation\">}</span>\r\n                <span class=\"token comment\">/* \r\n                삼항 연산자를 사용해서 flipped가 true일때는 amount * 60의 값을 반영,    \r\n                false일때는 amount 의 값을 반영한다. \r\n                */</span>\r\n                id<span class=\"token operator\">=</span><span class=\"token string\">\"minutes\"</span>\r\n                placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"Minutes\"</span>\r\n                type<span class=\"token operator\">=</span><span class=\"token string\">\"number\"</span>\r\n                onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>onChange<span class=\"token punctuation\">}</span>\r\n                disabled<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>flipped<span class=\"token punctuation\">}</span>\r\n              <span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\r\n\r\n            <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\r\n              <span class=\"token operator\">&lt;</span>label htmlFor<span class=\"token operator\">=</span><span class=\"token string\">\"hours\"</span><span class=\"token operator\">></span>Hours<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>label<span class=\"token operator\">></span>\r\n              <span class=\"token operator\">&lt;</span>input\r\n                value <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>flipped <span class=\"token operator\">?</span> amount <span class=\"token operator\">:</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>amount <span class=\"token operator\">/</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\r\n                id<span class=\"token operator\">=</span><span class=\"token string\">\"hours\"</span>\r\n                placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"Hours\"</span>\r\n                type<span class=\"token operator\">=</span><span class=\"token string\">\"number\"</span>\r\n                onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>onChange<span class=\"token punctuation\">}</span>\r\n                disabled<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">!</span>flipped<span class=\"token punctuation\">}</span>\r\n              <span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>reset<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Reset<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>onFlip<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Flip<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\r\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\r\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token punctuation\">}</span></code></pre></div>\n<p>React에서는 Jsx문법을 Javascript로 변환하기 때문에 따로 Javascript를 쓰기 위해서는 {}를 사용해 주어야 한다.</p>\n<h2 id=\"app-컴포넌트-함수\" style=\"position:relative;\"><a href=\"#app-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%ED%95%A8%EC%88%98\" aria-label=\"app 컴포넌트 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>App 컴포넌트 함수</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">,</span> setIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onSelect</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token function\">setIndex</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">//setIndex 함수를 이용해서 해당 옵션의 value 값을 index의 값으로 업데이트 한다. </span>\r\n\r\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n          <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Super Converter<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>select onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>onSelect<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\r\n              <span class=\"token operator\">&lt;</span>option value<span class=\"token operator\">=</span><span class=\"token string\">\"xx\"</span><span class=\"token operator\">></span>Select your units<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>option<span class=\"token operator\">></span>\r\n              <span class=\"token operator\">&lt;</span>option value<span class=\"token operator\">=</span><span class=\"token string\">\"0\"</span><span class=\"token operator\">></span>Minutes <span class=\"token operator\">&amp;</span> Hours<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>option<span class=\"token operator\">></span>\r\n              <span class=\"token operator\">&lt;</span>option value<span class=\"token operator\">=</span><span class=\"token string\">\"1\"</span><span class=\"token operator\">></span>Km <span class=\"token operator\">&amp;</span> miles<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>option<span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">></span>\r\n            <span class=\"token punctuation\">{</span><span class=\"token comment\">/*옵션을 선택할때마다 변화를 감지해서 onSlelct 함수가 동작하게 된다.*/</span><span class=\"token punctuation\">}</span>\r\n            \r\n            <span class=\"token operator\">&lt;</span>hr <span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n            <span class=\"token punctuation\">{</span>index <span class=\"token operator\">===</span> <span class=\"token string\">\"xx\"</span> <span class=\"token operator\">?</span> <span class=\"token operator\">&lt;</span>h3<span class=\"token operator\">></span><span class=\"token string\">\"Please select your units\"</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h3<span class=\"token operator\">></span> <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">}</span>\r\n            <span class=\"token punctuation\">{</span>index <span class=\"token operator\">===</span> <span class=\"token string\">\"0\"</span> <span class=\"token operator\">?</span> <span class=\"token operator\">&lt;</span>MinutesToHours <span class=\"token operator\">/</span><span class=\"token operator\">></span> <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">}</span>\r\n            <span class=\"token punctuation\">{</span>index <span class=\"token operator\">===</span> <span class=\"token string\">\"1\"</span> <span class=\"token operator\">?</span> <span class=\"token operator\">&lt;</span>KmToMiles <span class=\"token operator\">/</span><span class=\"token operator\">></span> <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">}</span>\r\n            <span class=\"token punctuation\">{</span><span class=\"token comment\">/*index의 비교되는 값과 같을때 ? 뒤에 있는 텍스트나 컴포넌트를 렌더링한다.*/</span><span class=\"token punctuation\">}</span>\r\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\r\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"date":"December 26, 2023","title":"React (2)","categories":"React","author":"중석","emoji":"📝"},"fields":{"slug":"/React/React (2)/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://github.com/dony0720","comments":{"utterances":{"repo":"dony0720/dony0720.github.io"}}}}},"pageContext":{"slug":"/React/React (3)/","nextSlug":"/React/React (2)/","prevSlug":""}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}