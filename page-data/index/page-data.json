{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"4fc72788-3db4-5372-bba9-f5227b5db9d8","excerpt":"style 마무리 소스코드 login.css \nred, blue, green, opcity 순으로 값을 주어 배경 색 지정 \n배경색을 투명하게 지정 music.css volume.css  또는  속성을 통해\n기본 CSS 스타일을 사용하지 않겠다고 선언해야만 위와 같은 CSS 스타일링을 반영할 수 있습니다.\n그렇지 않으면 맨 기본적인  처럼 보이게 됩니다. clock.css todo.css backGround.css quote.css","frontmatter":{"categories":"TodoList CSS","title":"TodoList (11) - style.css 마무리","date":"March 29, 2023"},"fields":{"slug":"/TodoList/todoCss/"}}},{"node":{"id":"6bb20e84-aff0-5986-bc3d-a91f7a2daf9a","excerpt":"Quote 생성 소스코드 changeQuoute 함수 const todaysQuote = quotes[Math.floor(Math.random() * quotes.length)] 0~1사이에 난수를 생성는 Math.random을 사용 발생한 난수를 quotes 배열의 길이 만큼 곱해 0 ~ quotes.length 사이에 난수를 생성 Math.floor를 사용해 소수점 뒷자리를 반올림해 정수를 생성","frontmatter":{"categories":"TodoList Js","title":"TodoList (10) - Quote 자동 생성기","date":"March 29, 2023"},"fields":{"slug":"/TodoList/quote/"}}},{"node":{"id":"70d2182b-056b-5b9c-8dc2-1bf3ac9c6c2d","excerpt":"position 속성 CSS에서  속성은 HTML 문서 상에서 요소가 배치되는 방식을 결정한다.  속성은 요소의 정확한 위치 지정을 위해서 , , ,  속성과 함께 사용된다 position: static position 속성을 별도로 지정해주지 않으면 기본값인 static이 적용된다 요소들이 HTML에 작성된 순서대로 브라우저 화면에 표시가 된다. 따라서 , , ,  속성값은  속성이 ****일 때는 무시된다.  위 결과를 보면 작성된 순서대로 배치 되는걸 볼 수 있다. position: relative position 속성을 relative로 설정하게 되면, 요소를 원래 위치에서 벗어나게 배치할 수 있게 된다. 요소의 위치 지정은 , , ,  속성을 이용해서 요소가 원래 위치에 있을 때의 상하좌우로 부터 얼마나 떨어지게 할지를 지정할 수 있다.  position: absolute  속성이  일 때 해당 요소는 배치 기준을 자신이 아닌 상위 요소에서 찾는다. 부모 요소(가장 가까운…","frontmatter":{"categories":"CSS","title":"CSS-Position","date":"March 29, 2023"},"fields":{"slug":"/Position/position/"}}},{"node":{"id":"21af2138-65c1-5240-9231-fe6265131d4d","excerpt":"List 작성하기 구현 소스코드 handleToDoSubmit(event) 함수  javascript가 발생한 event를 함수의 첫번째 인자로 주게된다.  event의 기본 동작을 막는다 newToDo에 input의 값을 저장하고 엔터를 누를때 input을 비우기 위해  사용 newTodoObj 객체를 생성하고 text 에는 newToDo를 각 리스트의 분별력을 주기 위해서 id 값을  리스트가 작성된 시간으로 반영 할당된 객체는 toDos 배열에 채워넣는다 paintToDo()함수  li 태그 생성  생성된 li 태그의 id 값을 newTodoObj의 id로 할당 도 와 동일한 원리로 할당 휴지통 아이콘을 클릭할때 마다 해당 list를 제거하기 위해서 를 사용  를 head에 작성 \r\n-> span 태그를 생성 \r\n-> 생성된 span2의 class명을 할당 \r\n-> 생성된 span2의 Text 값을 할당  이 의 자식으로 들어가진다   이 먼저 선언되었으므로 li의 첫번째 후…","frontmatter":{"categories":"TodoList Js","title":"TodoList (9)  - List 작성","date":"March 28, 2023"},"fields":{"slug":"/TodoList/list/"}}},{"node":{"id":"65452a02-6d60-5c74-b575-e26d81166e7a","excerpt":"Calendar 기능 구현(1)  위 사진은 바로 우리가 만들 달력의 결과물입니다. 위와 같은 달력을 만들기 위해서 처음부터 천천히 진행해 봅시다!!! 소스 코드 renderCalendar 함수 날짜 구하기  연도를 가져오는 변수 설정  월을 가져오는 변수 설정 document.querySelector(“.year-month”).textContent =  dt.getMonth는 반환 값이 현지 시간 기준 월을 나타내는 0 에서 11 사이의 정수를 반환한다 0은 1월, 1은 2월 2은 3월…을 나타내므로 해당 월 출력하기 위해서 +1을 해줘야한다 매달 마지막 요일 날짜 수가 다르기 때문에 해당되는 월의 마지막 날짜와 요일을 얻는 코드를 작성해야 합니다  다음달 마지막 날짜  이번달 마지막 날짜 지난달 날짜의 일부분과 이번달 날짜를 출력하기 위해 변수 설정 새로운 Date객체를 생성할 때, date 파라미터에 0을 전달하게 되면 지난달의 마지막 날의 Date 객체가 생성됩니다 같은 원…","frontmatter":{"categories":"TodoList Js","title":"TodoList (6) - Calendar 기능 구현(1)","date":"March 28, 2023"},"fields":{"slug":"/TodoList/calendar(1)/"}}},{"node":{"id":"59746d1d-5757-5f76-abce-3a9dc3fba410","excerpt":"를 선택해 전체적인 태그들의 **margin과 padding을 없애준다 달력을 가운데 정렬하기위해서  좌우 가운데 정령을 위해  위아래 가운데 정렬을 위해서  캘린더의 크기를 설정 해 줍니다 header안에 있는 날짜와 버튼을 좌우 양쪽 정렬과 상하 가운데 정렬을 해주기 위해서  와 를 사용 그리고 버튼을 한줄로 정렬하기 위해서  사용  사용해 버튼의 선을 제거  사용해 배경색을 지정하지 않음 days 클래스에 있는 요일들을 한줄로 정렬하기 위해 사용 margin : 위 좌우 아래; 속성을 이용해서 margin 값을 줌 요일은 7개이므로 각 요일의 너비를 같게 하기위해서 100%/7의 값을 너비값으로 줌 각 날짜들의 정렬을 위해서  를 사용 아이템들의 자연스러운 줄바꿈을 위해서 을 사용 height를 고정할시 아이템의 갯수에 상관없이 주어진 픽셀에 맞춰 자연스운 줄 바꿈을 할 수 있다. 날짜도 한줄에 7개가 있어야 하므로 100%/7의 값을 너비값으로 줌  토요일과 일요일 colo…","frontmatter":{"categories":"TodoList Js","title":"TodoList (7) - Calendar 스타일 입히기","date":"March 28, 2023"},"fields":{"slug":"/TodoList/calendar(2)/"}}},{"node":{"id":"35e6beee-6b77-57be-ba3e-c564a62934b0","excerpt":"Calendar 버튼 기능 구현 소스코드 preMonth() 함수 ’<’ 버튼을 누를때 이전달로 넘어가야 하기 때문에  를 이용해 현재 달에 -1 값으로 설정 재할당된 dt.setMonth를 가지고 renderCalendar() 호출 nextMonth() 함수 ’>‘버튼을 누를때 다음달로 넘어가야 하기 때문에  를 이용해 현재 달에 +1 값으로 설정 재할당된 를 가지고  호출 todaybtn() 함수 Today 버튼을 누를때 다시 현재 날짜로 돌아오기 위해 dt의 값을 로 할당해야기 때문에 초반에 dt 를 가 아닌 으로 설정한이유","frontmatter":{"categories":"TodoList Js","title":"TodoList (8) - Calendar 기능 구현(2)","date":"March 28, 2023"},"fields":{"slug":"/TodoList/calendar(3)/"}}},{"node":{"id":"ac6de29c-b99d-5268-9019-293b604b225e","excerpt":"css box-model (1) box-model 이란? 모든 HTML의 요소는 box 모양으로 구성되어 있습니다. 박스모델은 content, padding, border, margin으로 구성되어 있습니다. 구성요소  : 텍스트나 이미지를 포함하는 실질적인 내용을 포함하는 부분  : content(내용)과 border(테두리) 사이에 위치하는 내부 여백 부분  : padding(패딩)과 margin(마진) 사이에 위치하는 테두리 부분  : 가장 바깥쪽에 위치한 외부 여백 부분 width와 height 속성 css에서 width와 height 속성을 설정할때에 가르키는 부분은 content(내용) 부분만을 가르킨다. 다른 부분인 padding, border, margin은 포함되지 않는다. width 속성 위의 코드를 실행해 보면 div태그의 길이가 body 전체의 길이를 갖는걸 볼 수 있다. width에 50%의 값을 할당하게 되면 div 태그의 길이가 절반이 되는걸 볼 수 있다…","frontmatter":{"categories":"CSS Box-model","title":"Box model(1) - content,padding","date":"March 28, 2023"},"fields":{"slug":"/Boxmodel/boxmodel(1)/"}}},{"node":{"id":"215bf111-6e21-529b-b759-9a4dc8799826","excerpt":"margin 속성 에 대해서 은 (테두리)와 이웃하는 요소 사이의 간격인 마진 영역의 크기를 결정한다 은 과 달리 속성으로 설정하는 배경색의 영향을 받지 않는다  를 사용해 영역의 크기를 방향별로 지정할 수 있다. 에서 제공하는 속성은 다음과 같습니다.      의 값을 음수로 지정해 해당 요소를 다른 요소의 위에 겹치게 할 수 있습니다. 위에 코드를 실행하게 되면 에 을 할당해서 서로 겹치는걸 볼 수 있다 inherit 속성 에  속성을 적용해 부모인 의 margin-left 속성을 물려받는다. margin의 개별 설정 속성이 4개일때 위 코드의 적용순서와 의미는 다음과 같다 margin-top: 10px margin-right: 20px margin-bottom: 30px margint-left: 40px 속성이 3개일때 위 코드의 적용순서와 의미는 다음과 같다 margin-top: 10px margin-right: 20px margin-bottom: 30px margint-l…","frontmatter":{"categories":"CSS Box-model","title":"Box model(3) - margin","date":"March 28, 2023"},"fields":{"slug":"/Boxmodel/boxmodel(3)/"}}},{"node":{"id":"20062a67-d638-5206-b923-14f8de34cd09","excerpt":"border 속성 css에서 border에 제공하는 속성은 다음과 같습니다 dotted: 테두리를 점선으로 설정합니다. dashed: 테두리를 약간 긴 점선으로 설정합니다. solid: 테두리를 실선으로 설정합니다. double: 테두리를 이중선으로 설정합니다. groove: 테두리를 3차원인 입체적인 선으로 border-color에 영향을 받습니다. ridge: 테두리를 3차원인 능선효과가 있는 선으로 설정하며 border-color에 영향을 받습니다. inset: 테두리를 3차원인 내지로 끼운 선으로 설정하며 border-color에 영향을 받습니다. outset: 테두리를 3차원인 외지로 끼운 선으로 설정하며 border-color에 영향을 받습니다. none: 테투리를 없앱니다. hidden: 테투리는 존재하지만 보이지 표현하지 않습니다. border-width 속성 테두리의 두께를 설정합니다 px, em, cm등과 같은 css 크기 단위를 이용해 두께를 직접 설정 할 수 …","frontmatter":{"categories":"CSS Box-model","title":"Box model(2) - border","date":"March 28, 2023"},"fields":{"slug":"/Boxmodel/boxmodel(2)/"}}},{"node":{"id":"ab6e990d-e406-51b0-8045-1f0dc1076dce","excerpt":"API를 이용해 날씨 정보 가져오기 소스코드  장치의 현재 위치를 가져오게 됩니다 위치를 얻는데 성공하면 onGeok() 함수를 실행하고 실패시 onGeoError() 함수를 실행 API 이용 google에 openWeather -> API -> Current weather data에 접속 로그인 진행 후 영문이름을 클릭하게 되면 MY API KEYS를 통해서 Key값을 확인 onGeoOk 함수 onGeoOk() 함수의 인자는 GeolocationPosition 객체를 가져온다 GeolocationPosition 객체의 position.coords 부분을 보게 되면 위도와 경도를 확인할 수 있다 API 호출 예시를 보게 되면 https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY} 되어 있다  부분을 추가하게 되면 섭씨로된 온도를 확인할 수 있다 fetch(url) 을 통해 반환받은 …","frontmatter":{"categories":"TodoList Js","title":"TodoList (5) -날씨 정보 가져오기","date":"March 28, 2023"},"fields":{"slug":"/TodoList/weather/"}}},{"node":{"id":"86fd065b-6cc0-575f-bf79-aec255509201","excerpt":"HTML구조 작성 소스코드 login login_form input의 유효성을 검사하기 위해서 form 태그를 사용 clock calendar dates  js로 날짜를 대입하기 위해서 만들어 둠 style.css 기본구조 작성 box-sizing: border-box  box-sizing 에 대한 설명  높이는 100vh를 너비는 100vw를 할당 ->  는 부모 태그와는 상관없이 보이는 Viewport Height의 100%를 다 쓰겠다는 의미입니다.  ->  는 부모 태그와는 상관없이 보이는 Viewport width의 100%를 다 쓰겠다는 의미입니다. 테두리된 영역을 좌우, 상하 가운데 정렬하기 위해  를 적용하고  와  사용 main의 영역을 보면  와  두개의 역역을 나눠진다.  와  영역을 보면  의 축이 column로 되어있다.\r\n 를 적용하고  를 사용해  축을  으로 설정 body의 영역과 마찬가지로 좌우,상하 가운데 정렬을 해준다 login.css music.…","frontmatter":{"categories":"TodoList Js","title":"TodoList (1) - HTML 구조 및 스타일","date":"March 28, 2023"},"fields":{"slug":"/TodoList/html/"}}},{"node":{"id":"3d166cc1-c978-5d41-aeb4-4041b09fb742","excerpt":"login 기능 구현 소스코드 JavaScript style.css document는 js가 html에 접근하기 위해서 사용되어짐 HTML 요소의 선택은 다음과 같습니다 document.getElementsByTagName(태그이름): \r\n-> 해당 태그 이름의 요소를 모두 선택함. document.getElementById(아이디): \r\n-> 해당 아이디의 요소를 선택함. document.getElementsByClassName(클래스이름): \r\n-> 해당 클래스에 속한 요소를 모두 선택함. document.getElementsByName(name속성값): \r\n-> 해당 name 속성값을 가지는 요소를 모두 선택함.. document.querySelectorAll(선택자): \r\n-> 해당 선택자로 선택되는 요소를 모두 선택함. onLogin 함수 event.preventDefault()\r\nlogin_input.value의 값을 가져오기 위해서 \r\nform태그의 자동으로 submi…","frontmatter":{"categories":"TodoList Js","title":"TodoList (2) - Login 기능 구현","date":"March 28, 2023"},"fields":{"slug":"/TodoList/login/"}}},{"node":{"id":"91e59c19-939f-50d3-baf6-e1d43170ba9b","excerpt":"mp3 player 기능 소스코드 play 함수 mp3.loop = true : 오디오를 반복 재생함 mp3.volume = soundBtn.value 음량은 0.0 ~ 1.0 사이 값으로 지정할 수 있고, 1.0이 가장 큰 음량 자주 쓰이는 Audio 객체의 속성  audio가 load 될 때 자동재생됨  audio의 재생시점을 5초로 설정함  audio의 길이를 초(seconds) 단위로 반환  audio를 반복 재생함  audio의 경로를 지정함(URL)  audio의 음량을 0.2로 지정함\r\n음량은 0.0 ~ 1.0 사이 값으로 지정할 수 있고, 1.0이 가장 큰 음량 자주 쓰이는 Audio 객체의 메소드  오디오를 재생시킴  오디오를 일시정지함  audio를 다시 load함\r\n주로 audio의 src나 설정이 바뀌었을 경우에 사용","frontmatter":{"categories":"TodoList Js","title":"TodoList (3) - MP3 기능 구현","date":"March 28, 2023"},"fields":{"slug":"/TodoList/music/"}}},{"node":{"id":"6f840373-ef03-5591-8218-b721858cad4a","excerpt":"배경화면 바꾸기 기능 구현 소스코드 배경이미지 랜덤 생성 이미지 태그를 생성하기 위해 document.createElement(“img”) 를 사용함 createElement()에 생성하고자 하는 태그를 입력 const chosenImage = images[Math.floor(Math.random() * images.length)] 배경 선택을 랜덤으로 하기 위해서 0~1사이에 난수를 생성는 Math.random을 사용 발생한 난수를 images 배열의 길이 만큼 곱해 0 ~ images.length 사이에 난수를 생성 Math.floor를 사용해 소수점 뒷자리를 반올림해 정수를 생성 암호학적으로 안전한 난수를 발생시키지 않아 보안과 관련해서는 사용하지 말아야 한다 그 대신 Web Crypto API의 window.crypto.getRandomValues() 메소드를 이용하여야 한다. bgImage.src = img/${chosenImage} 생성된 img태그의 src를 지정 do…","frontmatter":{"categories":"TodoList Js","title":"TodoList (4)  - 배경화면 바꾸기 기능 구현","date":"March 28, 2023"},"fields":{"slug":"/TodoList/background/"}}},{"node":{"id":"56a23521-bd95-5c00-bca6-f757c6a03954","excerpt":"제 블로그의 테마나 Gatsby의 다른 테마를 활용해서 Github Blog를 만들고 싶은 분들이 계실텐데요! 이런 분들에게 도움을 드리고자 이 글을 쓰게 되었습니다. 잘 안되는 부분이나 궁금한 점을 댓글로 남겨주면 확인해보고 답변 드리도록 하겠습니다! 1. Repository 생성하기 GitHub Blog를 만들려면 Github에 Repository를 생성해야 합니다.  GitHub에 로그인 한 뒤에 우측 상단에 있는 New Repository 버튼을 클릭하면 repository 생성 페이지로 이동하게 됩니다. 이 때 Import a repository 버튼을 클릭합니다.  아래 페이지에 도달하시면 두 가지 정보를 넣어주셔야 하는데, Your old repository’s clone URL에는 사용하고자 하는 gatsby 테마가 있는 repository의 주소를 넣어주시면 됩니다. 제 블로그 테마를 쓰고 싶으신 분들은 여기에 https://github.com/zoomKoding/…","frontmatter":{"categories":"블로그 featured","title":"Gatsby 테마로 GitHub Blog 만들기","date":"July 06, 2021"},"fields":{"slug":"/gatsby-github-blog/"}}},{"node":{"id":"bd3d6968-e3f1-5c62-97fe-f4012888d199","excerpt":"👋 소개 블로그를 직접 운영하면서 조금씩 그려봤던 이상적인 개발 블로그 테마를 Gatsby를 통해 만들어보게 되었습니다. 이 테마가 블로그를 운영하고자 하시는 분들에게 자신의 이야기를 잘 담을 수 있는 공간이 되었으면 좋겠습니다.🙌 블로그 테마가 맘에 드셨다면 아래 과정을 통해 자신의 블로그를 만들어보시길 바랍니다! 혹시 만드시는 과정에서 궁금하신 점이나 어려움이 있으시다면 이슈를 통해 문의 남겨주세요! 스타는 블로그 테마를 지속적으로 발전시키는데 큰 힘이 됩니다!⭐️ 🚀 시작하기 Github Page나 Netlify 중 원하시는 배포 환경에 따라 다음 과정을 진행하시면 빠르게 블로그를 만드실 수 있습니다. 🦖 GitHub Page로 만들기 깃헙 페이지를 통해 블로그를 만드시다면 아래 글을 참고해주세요! Gatsby 테마로 GitHub Blog 만들기 🔧 Netlify로 만들기 아래 버튼을 활용하면 개인 계정에 를 사용하고 있는 Repository 생성과 Netlify에 배포를 동시…","frontmatter":{"categories":"블로그 featured","title":"쉽고 빠르게 나만의 개츠비(Gatsby) 블로그 만들기","date":"March 22, 2021"},"fields":{"slug":"/gatsby-starter-zoomkoding-introduction/"}}}]},"site":{"siteMetadata":{"language":"ko","author":{"name":"신중석","bio":{"role":"개발자","description":["꾸준히 노력하는","새로운 것을 추구하는","현재에 안주하지 않는"],"thumbnail":"sample.png"},"social":{"github":"https://github.com/dony0720","linkedIn":"","email":"jsjb7164@naver.com"}}}}},"pageContext":{}},"staticQueryHashes":["1073350324","1956554647","2938748437","3350743975"]}