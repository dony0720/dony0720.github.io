{"componentChunkName":"component---src-templates-blog-template-js","path":"/Programmers/Day27/","result":{"data":{"cur":{"id":"4e77ce24-3732-5942-9fd1-6e12f3393dea","html":"<h1 id=\"타입-단언type-assertion--as\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%85-%EB%8B%A8%EC%96%B8type-assertion--as\" aria-label=\"타입 단언type assertion  as permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타입 단언(Type Assertion) = as</h1>\n<ol>\n<li>Type 단언은 Type 추론을 활용하지 않고 특정 값이 특정 타입임을 강제로 지정하는 방법이다.</li>\n<li>컴파일러의 타입 추론 결과가 무시하고, 개발자가 원하는 타입을 지정 하는 방식이다.</li>\n<li>단, 타입 단언은 컴파일 단계에서만 작동하고 런타임 환경에서는 영향을 미치지 않는다.</li>\n<li>즉, 잘못된 Type 단언을 통해 런타임 에러가 발생할 수도 있으니 사용에 주의 필요하다!</li>\n</ol>\n<h2 id=\"기본-문법\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8-%EB%AC%B8%EB%B2%95\" aria-label=\"기본 문법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본 문법</h2>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">let</span> value1<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Hello Typescript world!'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> value2<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> length1<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>value1 <span class=\"token keyword\">as</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token comment\">//23</span>\n<span class=\"token keyword\">let</span> length2<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>value2 <span class=\"token keyword\">as</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 5</span></code></pre></div>\n<h2 id=\"빈-객체를-user-type으로-단언하는-문법\" style=\"position:relative;\"><a href=\"#%EB%B9%88-%EA%B0%9D%EC%B2%B4%EB%A5%BC-user-type%EC%9C%BC%EB%A1%9C-%EB%8B%A8%EC%96%B8%ED%95%98%EB%8A%94-%EB%AC%B8%EB%B2%95\" aria-label=\"빈 객체를 user type으로 단언하는 문법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>빈 객체를 User Type으로 단언하는 문법</h2>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> user1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token keyword\">as</span> User<span class=\"token punctuation\">;</span> <span class=\"token comment\">// type 단언으로 빈객체 초기화</span>\nuser1<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'Tom'</span><span class=\"token punctuation\">;</span>\nuser1<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">25</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h1 id=\"타입-가드type-guard\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%85-%EA%B0%80%EB%93%9Ctype-guard\" aria-label=\"타입 가드type guard permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타입 가드(Type Guard)</h1>\n<ol>\n<li>런타임 시점에 특정 변수의 타입을 좁히거나 확정하기 위해 사용되는 기법이다.</li>\n<li>주로 Type에 대한 안정성을 확보하기 위해 활용 된다.</li>\n<li>type은 기본형 외의 객체의 Type인 interface, alias, class를 포함한다.</li>\n<li>typeOf, instanceOf, in, is 등의 연산자를 통해 타입 가드를 활용 할 수 있다.</li>\n<li>Type에 대한 안정성을 확보하기 위한 문법으로 특정 변수의 Type을 보장 받지 못한 경우에만 활용된다.</li>\n</ol>\n<h2 id=\"typeof를-활용한-타입-가드\" style=\"position:relative;\"><a href=\"#typeof%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-%ED%83%80%EC%9E%85-%EA%B0%80%EB%93%9C\" aria-label=\"typeof를 활용한 타입 가드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>typeOf를 활용한 타입 가드</h2>\n<ul>\n<li>원시 타입(primitive type)을 확인하는 방법</li>\n<li>특정 조건 내에서 변수의 타입을 좁혀(Type Narrowing) 타입을 추정하는 방법이다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">function</span> <span class=\"token function\">printValue</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> value <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> value <span class=\"token operator\">===</span> <span class=\"token string\">'number'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">printValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">'abc'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ABC</span>\n<span class=\"token function\">printValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">123.456</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 123</span>\n<span class=\"token function\">printValue</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre></div>\n<h2 id=\"instanceof를-활용한-타입-가드\" style=\"position:relative;\"><a href=\"#instanceof%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-%ED%83%80%EC%9E%85-%EA%B0%80%EB%93%9C\" aria-label=\"instanceof를 활용한 타입 가드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>instanceof를 활용한 타입 가드</h2>\n<ul>\n<li>런타임에 객체가 특정 클래스의 인스턴스인지 확인하는 구문</li>\n<li>Javascript의 활용과 같다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Dog</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">sayDog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'왕왕!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Cat</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">sayCat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'미야옹~'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">sayAnimal</span><span class=\"token punctuation\">(</span>animal<span class=\"token operator\">:</span> Dog <span class=\"token operator\">|</span> Cat<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>animal <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    animal<span class=\"token punctuation\">.</span><span class=\"token function\">sayDog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    animal<span class=\"token punctuation\">.</span><span class=\"token function\">sayCat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">sayAnimal</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">sayAnimal</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Cat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"in을-활용한-타입가드\" style=\"position:relative;\"><a href=\"#in%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%9C-%ED%83%80%EC%9E%85%EA%B0%80%EB%93%9C\" aria-label=\"in을 활용한 타입가드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>in을 활용한 타입가드</h2>\n<ul>\n<li>인터페이스와 type alias를 사용한 객체 타입을 구별 할 수 있는 방법</li>\n<li>속성값을 기준으로 구별한다.</li>\n<li>(단, 같은 구성의 type은 구조적 타이핑으로 인해 타입이 호환됨으로 같은 type으로 취급한다.)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Student</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  grade<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"A\", \"B\", \"C\"...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Employee</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  salary<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 8000000, 7000000 ....</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> people1<span class=\"token operator\">:</span> Student <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'Hong'</span><span class=\"token punctuation\">,</span> grade<span class=\"token operator\">:</span> <span class=\"token string\">'A'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> people2<span class=\"token operator\">:</span> Employee <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'Lee'</span><span class=\"token punctuation\">,</span> salary<span class=\"token operator\">:</span> <span class=\"token number\">4000000</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">printPeople</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">:</span> Student <span class=\"token operator\">|</span> Employee<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'grade'</span> <span class=\"token keyword\">in</span> p<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 학생으로 추론</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> <span class=\"token string\">'Student'</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>grade<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 직장인으로 추론</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> <span class=\"token string\">'Employee'</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>salary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"사용자-정의-타입-가드-함수-is-활용\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%A0%95%EC%9D%98-%ED%83%80%EC%9E%85-%EA%B0%80%EB%93%9C-%ED%95%A8%EC%88%98-is-%ED%99%9C%EC%9A%A9\" aria-label=\"사용자 정의 타입 가드 함수 is 활용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용자 정의 타입 가드 함수 (is 활용)</h2>\n<ul>\n<li>is 키워드를 통해 사용자 정의 타입 가드를 구현 가능</li>\n<li>이는 조건문 내에서 값의 타입을 좁혀주어, 해당 값이 특정 타입인지 확인할 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">function</span> <span class=\"token function\">isString</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> value <span class=\"token keyword\">is</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">typeof</span> value <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">isString</span><span class=\"token punctuation\">(</span><span class=\"token string\">'abc'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">isString</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isString</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 타입이 string으로 좁혀짐</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Not string'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 객체일 경우</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Member</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">isMember</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> value <span class=\"token keyword\">is</span> Member <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> value <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> value<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> value<span class=\"token punctuation\">.</span>age <span class=\"token operator\">===</span> <span class=\"token string\">'number'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> m1<span class=\"token operator\">:</span> Member <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'Hong'</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token number\">21</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> m2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'Hong'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">isMember</span><span class=\"token punctuation\">(</span>m1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">isMember</span><span class=\"token punctuation\">(</span>m2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span></code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EA%B8%B0%EB%B3%B8-%EB%AC%B8%EB%B2%95\">기본 문법</a></li>\n<li><a href=\"#%EB%B9%88-%EA%B0%9D%EC%B2%B4%EB%A5%BC-user-type%EC%9C%BC%EB%A1%9C-%EB%8B%A8%EC%96%B8%ED%95%98%EB%8A%94-%EB%AC%B8%EB%B2%95\">빈 객체를 User Type으로 단언하는 문법</a></li>\n<li><a href=\"#typeof%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-%ED%83%80%EC%9E%85-%EA%B0%80%EB%93%9C\">typeOf를 활용한 타입 가드</a></li>\n<li><a href=\"#instanceof%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-%ED%83%80%EC%9E%85-%EA%B0%80%EB%93%9C\">instanceof를 활용한 타입 가드</a></li>\n<li><a href=\"#in%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%9C-%ED%83%80%EC%9E%85%EA%B0%80%EB%93%9C\">in을 활용한 타입가드</a></li>\n<li><a href=\"#%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%A0%95%EC%9D%98-%ED%83%80%EC%9E%85-%EA%B0%80%EB%93%9C-%ED%95%A8%EC%88%98-is-%ED%99%9C%EC%9A%A9\">사용자 정의 타입 가드 함수 (is 활용)</a></li>\n</ul>\n</div>","excerpt":"타입 단언(Type Assertion) = as Type 단언은 Type 추론을 활용하지 않고 특정 값이 특정 타입임을 강제로 지정하는 방법이다. 컴파일러의 타입 추론 결과가 무시하고, 개발자가 원하는 타입을 지정 하는 방식이다. 단, 타입 단언은 컴파일 단계에서만 작동하고 런타임 환경에서는 영향을 미치지 않는다. 즉, 잘못된 Type 단언을 통해 런타임 에러가 발생할 수도 있으니 사용에 주의 필요하다! 기본 문법 빈 객체를 User Type으로 단언하는 문법 타입 가드(Type Guard) 런타임 시점에 특정 변수의 타입을 좁히거나 확정하기 위해 사용되는 기법이다. 주로 Type에 대한 안정성을 확보하기 위해 활용 된다. type은 기본형 외의 객체의 Type인 interface, alias, class를 포함한다. typeOf, instanceOf, in, is 등의 연산자를 통해 타입 가드를 활용 할 수 있다. Type에 대한 안정성을 확보하기 위한 문법으로 특정 변수의 Ty…","frontmatter":{"date":"January 02, 2025","title":"Day 27 타입 단언, 타입 가드","categories":"프로그래머스","author":"중석","emoji":"👨🏻‍💻"},"fields":{"slug":"/Programmers/Day27/"}},"next":{"id":"8f60a082-e337-51c7-8497-8051ed9ae495","html":"<h1 id=\"2024년-회고\" style=\"position:relative;\"><a href=\"#2024%EB%85%84-%ED%9A%8C%EA%B3%A0\" aria-label=\"2024년 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2024년 회고</h1>\n<p>기억보다는 기록으로 남기는 것이 더 의미가 있다고 생각이 들어 2024년부터는 회고를 작성하고자 한다.\n첫 회고라 조금 어색할 수 있다는 점 참고 부탁드립니다…ㅋㅋㅋ</p>\n<h2 id=\"부산-여행-️\" style=\"position:relative;\"><a href=\"#%EB%B6%80%EC%82%B0-%EC%97%AC%ED%96%89-%EF%B8%8F\" aria-label=\"부산 여행 ️ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>부산 여행 🏖️</h2>\n<p>5월의 모든 교회 행사를 마치고 여름수련회 준비 전 재충전의 의미로 올 해 5월말에 지혜누나, 구연이형, 이슬이누나와 함께 부산여행을 다녀왔다.\n처음에는 간단하게 1박2일 어디가지고 시작했던 것이 나의 부산 추천이 최종 낙찰 되어 2박 3일로 가게 되었다.\n많은걸 하지는 못했지만 최소 1일 1해운대 진행하고, 저녁에는 맛있는 음식과 함께 재미있는 추억을 남길 수 있어 좋았다.\n<strong>액티비티 중에서는 요트투어가 제일 좋았다!</strong></p>\n<h2 id=\"-첫-프로젝트---mcy-출석부\" style=\"position:relative;\"><a href=\"#-%EC%B2%AB-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8---mcy-%EC%B6%9C%EC%84%9D%EB%B6%80\" aria-label=\" 첫 프로젝트   mcy 출석부 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👨🏻‍💻 첫 프로젝트 - MCY 출석부</h2>\n<p>2월에 대현이형과 함께 React를 가지고 청년부 출석부를 만드는 프로젝트를 시작했다.\n프로젝트 사전회의 때 경상이형의 많은 도움으로 MUI, 파이어베이스, git &#x26; gitHub, 클린 코드 작성, PWA 적용과 같은 다양한 경험을 할 수 있었다.\nFigma를 가지고 출석부를 디자인했는데 미적 감각이 없어 정말 보기 민망했다…ㅋㅋㅋ\n프로젝트를 진행하고 있는 중간에 다행히 디자인을 전공하고 있는 채영이의 도움으로 출석부를 리뉴얼 할 수 있었다.\n채영이의 도움으로 보기 좋은 디자인이 나왔지만 개발자들의 게으름으로(?)인해 출석부 개발이 늦어 10월에 출시했고 현재 사용중에 있다.\n셀지 작성 페이지, 성경읽기 그래프와 같은 기능도 있으면 좋겠다는 피드백이 있어서 프로그래머스가 끝난후에 개발을 할려고 생각하고 있다.\n이번 첫 프로젝트를 통해서 내가 개발한 출석부가 실제로 사용이 되고 있다는 뿌듯함과 개발에 있어 게으름을 피우지 말아야겠다는 귀한 경험을 할 수 있었다.</p>\n<h2 id=\"프로그래머스-\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-\" aria-label=\"프로그래머스  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로그래머스 🏁</h2>\n<p>코테실력이 많이 부족한 내가 부트캠프를 들어가기 위해서는 비전공자를 대상으로 하는 테스트를 봐야했는데\nSSAFY에서 비전공자만을 대상으로하는 테스트가 있었다. 그래서 올해 하반기부터 싸피를 준비하게 되었다.\nSSAFY를 준비하는 과정에서 우연히 경상이형의 추천으로 프로그래머스를 알게 되어 찾아 보게 되었다.\n프로그래머스 모집 페이지 뿐만 아니라 유튜브에서도 부트캠프를 리뷰하는 영상을 찾아봤는데 프로그래머스도 커리큘럼이 잘 이루어져 있다고 해서 신청하게 되었다.\n그래서 프로그래머스에 자소서를 제출했고 제출 기간으로부터 3일 안에 원하는 시간대에 온라인으로 비전공자 테스트를 진행하면 됐다.\n나는 어떤 문제가 출제 될지 몰라 제일 마지막 날까지 최대한의 공부를 하고 보기로 계획을 세웠다.\n그런데 공부를 하는 첫째날에 뭔지 모를 자신감이 생겼고 둘째날 바로 테스트를 보기로 결정했다.\n다행히 문제는 싸피를 준비하면서 겹치는 부분이 많고 싸피 기출 문제집 보다는 쉬워서 모두 풀어 제출 할 수 있었다.\n그렇게 난 합격 소식과 함께 프로그래머스에 합류를 하게 되었다. ( ❌ 싸피는 1차 탈락..ㅎㅎ )</p>\n<h3 id=\"다짐-\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EC%A7%90-\" aria-label=\"다짐  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다짐 👊</h3>\n<p>프로그래머스를 통해서 꼭 협업하고 싶은 개발자로 성장했으면 한다고 다짐했다.\n프론트엔드에 관해서 공부하고 블로그에 글을 남기는것을 꾸준히 하지 못했는데 이 교육을 시작으로 <strong>1일 1커밋 이라는 개인적인 목표를 잡았다.</strong>\n글 쓰는 능력이 부족해 퀄리티가 떨어질 수 있겠지만 기록하는 것에 초점을 두고자 했다. (언제가는 퀄리티 좋은 글을 쓸 수 있기를…)</p>\n<h3 id=\"팀-활동-\" style=\"position:relative;\"><a href=\"#%ED%8C%80-%ED%99%9C%EB%8F%99-\" aria-label=\"팀 활동  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>팀 활동 🔎</h3>\n<p>프로젝트는 총 4번이 진행되는데 프로젝트가 새롭게 진행될 때마다 팀 멤버가 변경이 된다.\n나는 5팀에 배정이 되었고 첫 회의에서 어색한 공기와 함께 팀원들을 만났다.\n나를 제외한 모든 팀원이 I 였기에 1차 프로젝트 기간 동안 계속 어색해 있으면 어떡하지라는 걱정이 조금은 들었다.\n하지만 감사하게도 프로그래머스에는 좋은 팀 문화가 있다. 매일 아침 팀원들과 간단한 소통을 위한 동행 스크럼, 한주간 배웠던 내용중에서 공통 주제를 가지고\n발표하는 RBF, 자유주제를 가지고 발표하는 WTL이 있다. 다양한 활동들이 많아 팀원들과 친해질 수 밖에 없어서 너무 좋았다.\n다행히 우리는 너무 친해졌고 1차 프로젝트를 마침과 함께 성장해서 만나자는 말을 남기며 다른 팀으로 이동하게 되었다.</p>\n<h2 id=\"-신앙\" style=\"position:relative;\"><a href=\"#-%EC%8B%A0%EC%95%99\" aria-label=\" 신앙 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👏🏻 신앙</h2>\n<p>2024년 마지막 청년부 예배는 새로 부임하신 담임 목사님께서 말씀을 전해주셨다.\n셜교를 전해주시는 중에 ‘한 해를 되돌아 보아야 한다’ 라는\n말씀을 들으면서 올 해 송구영신 예배 때 받은 말씀 카드가 생각났다.</p>\n<blockquote>\n<p>각각 은사를 받은 대로 하나님의 여러 가지 은혜를 맡은 선한 청지기 같이 서로 봉사하라 ( 베드로전서 4:10 )</p>\n</blockquote>\n<p>말씀 카드를 뽑음과 동시에 솔직히 두려웠다…\n또 어떤 일을 맡게 하실지, 지금보다 더 육체적으로나 정신적으로 감당해야 할 것들이 생겨날지에 대한 걱정이 있었다.\n감사하게도 믿음의 동역자들을 붙여주셔서 맡은 곳에서 잘 섬길 수 있었다.\n부족한 팀장, 리더, 교사로 세워졌지만 같이 헌신해주는 믿음의 동역자들이 있어 너무 감사하다.\n그리고 내년에는 대표리더를 맡게 되었다 ㅋㅋㅋㅋㅋ 말씀 카드가 2024년 말씀 카드란걸 까먹었었다…\n대표리더는 임원활동도 같이 하기에 아마 나의 한계가 어디까지인지 경험해 볼 수 있는 좋은 기회가 될 수 있을거 같다..!</p>\n<p><strong>내년에도 섬김에 있어 힘 닿는데 까지 라는 초심을 잃지 않고 말씀과 기도를 가까이 하는 2025년이 되기를 바란다.</strong></p>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h2>\n<p>2024년은 게으름 반 성장 반 이라고 생각이 되는 것 같다. 좀 더 열심히 할 수 있는 순간들이 있었지만 그렇지 못해서 아쉬움도 많이 남는다.\n앞으로 2025년에 주어진 상황 가운데 다양한 경험을 통해 많은걸 배웠으면 좋겠다. 내년에는 성장의 비중이 좀 더 많았으면 하는 한 해가 되기를 바란다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EB%B6%80%EC%82%B0-%EC%97%AC%ED%96%89-%EF%B8%8F\">부산 여행 🏖️</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%B2%AB-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8---mcy-%EC%B6%9C%EC%84%9D%EB%B6%80\">👨🏻‍💻 첫 프로젝트 - MCY 출석부</a></p>\n</li>\n<li>\n<p><a href=\"#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-\">프로그래머스 🏁</a></p>\n<ul>\n<li><a href=\"#%EB%8B%A4%EC%A7%90-\">다짐 👊</a></li>\n<li><a href=\"#%ED%8C%80-%ED%99%9C%EB%8F%99-\">팀 활동 🔎</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%EC%8B%A0%EC%95%99\">👏🏻 신앙</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\">마무리</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"December 31, 2024","title":"2024 회고","categories":"회고","author":"중석","emoji":"⏳"},"fields":{"slug":"/Essay/essay2024/"}},"prev":{"id":"0670e61c-fdca-5692-a6b0-61dc427829bf","html":"<h1 id=\"유틸리티-타입--utility-types-\" style=\"position:relative;\"><a href=\"#%EC%9C%A0%ED%8B%B8%EB%A6%AC%ED%8B%B0-%ED%83%80%EC%9E%85--utility-types-\" aria-label=\"유틸리티 타입  utility types  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>유틸리티 타입 ( Utility Types )</h1>\n<p>TypeScript에서 제공하는 유틸리티 타입(Utility Types)은 기존 타입을 변형하거나 새로운 타입을 생성하기 위해 제공되는 내장 타입이다.\n이를 사용하면 유틸리티 타입의 기능에 따라 타입 정의를 간결하고 유연하게 활용 할 수 있다.</p>\n<h2 id=\"partialt\" style=\"position:relative;\"><a href=\"#partialt\" aria-label=\"partialt permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Partial<T></h2>\n<p>모든 속성 값이 선택적(optional)으로 변경됨 객체의 일부 속성만 필요 할 때 활용된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">User1</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  address<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">PartialUser</span> <span class=\"token operator\">=</span> Partial<span class=\"token operator\">&lt;</span>User1<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> user1<span class=\"token operator\">:</span> PartialUser <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'Hong'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// age나 주소가 옵셔널하게 변경됨</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"requiredt\" style=\"position:relative;\"><a href=\"#requiredt\" aria-label=\"requiredt permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Required<T></h2>\n<p>모든 속성 값이 필수(Required)로 변경됨 객체의 모든 속성이 필요 할 때 활용된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">User2</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  age<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  address<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">RequiredUser</span> <span class=\"token operator\">=</span> Required<span class=\"token operator\">&lt;</span>User2<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> user2<span class=\"token operator\">:</span> RequiredUser <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'hong'</span><span class=\"token punctuation\">,</span>\n  age<span class=\"token operator\">:</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span>\n  address<span class=\"token operator\">:</span> <span class=\"token string\">'강남구'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"readonlyt\" style=\"position:relative;\"><a href=\"#readonlyt\" aria-label=\"readonlyt permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Readonly<T></h2>\n<p>모든 속성 값을 읽기 전용(readonly)으로 변경함, 객체가 immutable 속성으로 변경된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">User3</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  address<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">ReadonlyUser</span> <span class=\"token operator\">=</span> Readonly<span class=\"token operator\">&lt;</span>User3<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> readOnlyUser<span class=\"token operator\">:</span> ReadonlyUser <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'Hong'</span><span class=\"token punctuation\">,</span>\n  age<span class=\"token operator\">:</span> <span class=\"token number\">31</span><span class=\"token punctuation\">,</span>\n  address<span class=\"token operator\">:</span> <span class=\"token string\">'서울시 강남구'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nreadOnlyUser<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'kim'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 에러 발생! => 값의 변경을 허용하지 않음</span></code></pre></div>\n<h2 id=\"pickt-k\" style=\"position:relative;\"><a href=\"#pickt-k\" aria-label=\"pickt k permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pick&#x3C;T, K></h2>\n<p>타입에서 특정 속성만 선택(Pick)하여 새로운 객체 타입을 생성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">User4</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  address<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">PickUser</span> <span class=\"token operator\">=</span> Pick<span class=\"token operator\">&lt;</span>User4<span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'address'</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> user4<span class=\"token operator\">:</span> PickUser <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'Hong'</span><span class=\"token punctuation\">,</span>\n  address<span class=\"token operator\">:</span> <span class=\"token string\">'서울시 강남구'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"omitt-k\" style=\"position:relative;\"><a href=\"#omitt-k\" aria-label=\"omitt k permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Omit&#x3C;T, K></h2>\n<p>타입에서 특정 속성값을 제외(Omit)하여 새로운 객체 타입을 생성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">User5</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  address<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">OmitUser</span> <span class=\"token operator\">=</span> Omit<span class=\"token operator\">&lt;</span>User5<span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'address'</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> omitUser<span class=\"token operator\">:</span> OmitUser <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  age<span class=\"token operator\">:</span> <span class=\"token number\">31</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// age만 필요!</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"recordk-t\" style=\"position:relative;\"><a href=\"#recordk-t\" aria-label=\"recordk t permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Record&#x3C;K, T></h2>\n<p>특정 키 집합(K)에 대해 값(T)의 모든 타입을 설정, 객체 타입을 생성할 때 활용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Roles</span> <span class=\"token operator\">=</span> <span class=\"token string\">'admin'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'editor'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'viewer'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">UserPermissions</span> <span class=\"token operator\">=</span> Record<span class=\"token operator\">&lt;</span>Roles<span class=\"token punctuation\">,</span> <span class=\"token builtin\">boolean</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> permissions<span class=\"token operator\">:</span> UserPermissions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  admin<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  editor<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  viewer<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"nonnullablet\" style=\"position:relative;\"><a href=\"#nonnullablet\" aria-label=\"nonnullablet permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NonNullable<T></h2>\n<p>타입에서 null과 undefined를 제거, 값이 반드시 존재할 때 활용</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">NullableType</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">NonNullableType</span> <span class=\"token operator\">=</span> NonNullable<span class=\"token operator\">&lt;</span>NullableType<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> nonNullableValue1<span class=\"token operator\">:</span> NonNullableType <span class=\"token operator\">=</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// const nonNullableValue2: NonNullableType = null; // 에러!!</span></code></pre></div>\n<h2 id=\"parameterst\" style=\"position:relative;\"><a href=\"#parameterst\" aria-label=\"parameterst permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Parameters<T></h2>\n<p>함수 타입 T의 매개변수(parameter)들의 타입을 튜플(tuple)로 반환</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">function</span> <span class=\"token function\">myFunc1</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Params</span> <span class=\"token operator\">=</span> Parameters<span class=\"token operator\">&lt;</span><span class=\"token keyword\">typeof</span> myFunc1<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> params<span class=\"token operator\">:</span> Params <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">42</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"returntypet\" style=\"position:relative;\"><a href=\"#returntypet\" aria-label=\"returntypet permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ReturnType<T></h2>\n<p>함수 타입 T의 반환값(return value) 타입을 추출한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">function</span> <span class=\"token function\">myFunc2</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">''</span> <span class=\"token operator\">+</span> a<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Returns</span> <span class=\"token operator\">=</span> ReturnType<span class=\"token operator\">&lt;</span><span class=\"token keyword\">typeof</span> myFunc2<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> returnValue<span class=\"token operator\">:</span> Returns <span class=\"token operator\">=</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>type Returns에는 myFunc2의 반환값 string 타입을 추출하고 returnValue에 string 타입을 선언해준다.</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#partialt\">Partial<T></a></li>\n<li><a href=\"#requiredt\">Required<T></a></li>\n<li><a href=\"#readonlyt\">Readonly<T></a></li>\n<li><a href=\"#pickt-k\">Pick&#x3C;T, K></a></li>\n<li><a href=\"#omitt-k\">Omit&#x3C;T, K></a></li>\n<li><a href=\"#recordk-t\">Record&#x3C;K, T></a></li>\n<li><a href=\"#nonnullablet\">NonNullable<T></a></li>\n<li><a href=\"#parameterst\">Parameters<T></a></li>\n<li><a href=\"#returntypet\">ReturnType<T></a></li>\n</ul>\n</div>","frontmatter":{"date":"January 03, 2025","title":"RBF 1회차 유틸리티 타입 - 2차 프로젝트 4팀","categories":"프로그래머스","author":"중석","emoji":"👨🏻‍💻"},"fields":{"slug":"/Programmers/RBF6/"}},"site":{"siteMetadata":{"siteUrl":"https://github.com/dony0720","comments":{"utterances":{"repo":"dony0720/dony0720.github.io"}}}}},"pageContext":{"slug":"/Programmers/Day27/","nextSlug":"/Essay/essay2024/","prevSlug":"/Programmers/RBF6/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}