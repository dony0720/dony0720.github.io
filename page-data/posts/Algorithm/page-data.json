{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/Algorithm","result":{"pageContext":{"currentCategory":"Algorithm","categories":["All","React","프로그래머스","회고","Algorithm","Js","Git","Book","CSS"],"edges":[{"node":{"id":"0ca6c846-f381-5e68-b902-ff5ed4b6693e","excerpt":"문제 설명 수많은 마라톤 선수들이 마라톤에 참여하였습니다. 단 한 명의 선수를 제외하고는 모든 선수가 마라톤을 완주하였습니다. 마라톤에 참여한 선수들의 이름이 담긴 배열 participant와 완주한 선수들의 이름이 담긴 배열 completion이 주어질 때,\n완주하지 못한 선수의 이름을 return 하도록 solution 함수를 작성해주세요. 제한사항 마라톤 경기에 참여한 선수의 수는 1명 이상 100,000명 이하입니다.\ncompletion의 길이는 participant의 길이보다 1 작습니다.\n참가자의 이름은 1개 이상 20개 이하의 알파벳 소문자로 이루어져 있습니다.\n참가자 중에는 동명이인이 있을 수 있습니다. 입출력 예 participant completion return [“leo”, “kiki”, “eden”] [“eden”, “kiki”] “leo” [“marina”, “josipa”, “nikola”, “vinko”, “filipa”] [“josipa”, “fili…","fields":{"slug":"/Algorithm/ProblemLv1(2)/"},"frontmatter":{"categories":"Algorithm","title":"프로그래머스 완주하지 못한 선수 Js","date":"January 15, 2025"}},"next":{"fields":{"slug":"/Algorithm/ProblemLv1(1)/"}},"previous":{"fields":{"slug":"/Programmers/Day36to52/"}}},{"node":{"id":"52bc095b-1f4d-54be-a959-277da632bb46","excerpt":"문제 설명 배열 arr가 주어집니다. 배열 arr의 각 원소는 숫자 0부터 9까지로 이루어져 있습니다.\n이때, 배열 arr에서 연속적으로 나타나는 숫자는 하나만 남기고 전부 제거하려고 합니다. 단, 제거된 후 남은 수들을 반환할 때는 배열 arr의 원소들의 순서를 유지해야 합니다.\n예를 들면, arr = [1, 1, 3, 3, 0, 1, 1] 이면 [1, 3, 0, 1] 을 return 합니다. arr = [4, 4, 4, 3, 3] 이면 [4, 3] 을 return 합니다.\n배열 arr에서 연속적으로 나타나는 숫자는 제거하고 남은 수들을 return 하는 solution 함수를 완성해 주세요. 제한사항 배열 arr의 크기 : 1,000,000 이하의 자연수 배열 arr의 원소의 크기 : 0보다 크거나 같고 9보다 작거나 같은 정수 입출력 예 arr answer [1,1,3,3,0,1,1] [1,3,0,1] [4,4,4,3,3] [4,3] mySolution BestSolution…","fields":{"slug":"/Algorithm/ProblemLv1(1)/"},"frontmatter":{"categories":"Algorithm","title":"프로그래머스 같은 숫자는 싫어 Js","date":"January 15, 2025"}},"next":{"fields":{"slug":"/Programmers/Day35/"}},"previous":{"fields":{"slug":"/Algorithm/ProblemLv1(2)/"}}},{"node":{"id":"622dd803-4def-5dbc-9e56-de87ee50cd6f","excerpt":"문제 설명 정수 start_num와 end_num가 주어질 때, start_num부터 end_num까지의 숫자를 차례로 담은 리스트를 return하도록 solution 함수를 완성해주세요. 제한사항 0 ≤ start_num ≤ end_num ≤ 50 입출력 예 start_num end_num result 3 10 [3, 4, 5, 6, 7, 8, 9, 10] 입출력 예 설명 입출력 예 #1 3부터 10까지의 숫자들을 담은 리스트 [3, 4, 5, 6, 7, 8, 9, 10]를 return합니다. solution.js 분석 Array.from() 메서드를 사용하여 새로운 배열을 생성합니다. 이 배열은 start부터 end까지의 연속된 숫자를 포함한다. 을 전달하여 새 배열의 길이를 설정한다. 두번째 인수로는 매핑 함수를 받아서 배열의 각 요소를 부터 시작하여 1씩 증가하는 값으로 반환한다. 문제 설명 제한사항 입출력 예 입출력 예 설명 solution.js 분석","fields":{"slug":"/Algorithm/problem기초(7-3)/"},"frontmatter":{"categories":"Algorithm","title":"프로그래머스 카운트 업 Js","date":"April 23, 2024"}},"next":{"fields":{"slug":"/Algorithm/problem(7-4)/"}},"previous":{"fields":{"slug":"/Programmers/Day1/"}}},{"node":{"id":"fa74bd66-e99c-5c75-8300-c2cf96245f4d","excerpt":"문제 설명 모든 자연수 x에 대해서 현재 값이 x이면 x가 짝수일 때는 2로 나누고, x가 홀수일 때는 3 * x + 1로 바꾸는 계산을 계속해서 반복하면 언젠가는 반드시 x가 1이 되는지 묻는 문제를 콜라츠 문제라고 부릅니다. 그리고 위 과정에서 거쳐간 모든 수를 기록한 수열을 콜라츠 수열이라고 부릅니다. 계산 결과 1,000 보다 작거나 같은 수에 대해서는 전부 언젠가 1에 도달한다는 것이 알려져 있습니다. 임의의 1,000 보다 작거나 같은 양의 정수 n이 주어질 때 초기값이 n인 콜라츠 수열을 return 하는 solution 함수를 완성해 주세요. 제한사항 1 ≤ n ≤ 1,000 입출력 예 n result 10 [10, 5, 16, 8, 4, 2, 1] 입출력 예 설명 입출력 예 #1 순서대로 연산한 결과를 표로 만들면 다음과 같습니다. 연산 횟수 x 홀짝 여부 0 10 짝수 1 5 홀수 2 16 짝수 3 8 짝수 4 4 짝수 5 2 짝수 6 1 홀수 My solutio…","fields":{"slug":"/Algorithm/problem(7-4)/"},"frontmatter":{"categories":"Algorithm","title":"프로그래머스 카운트 업 Js","date":"April 22, 2024"}},"next":{"fields":{"slug":"/Algorithm/problem기초(7-2)/"}},"previous":{"fields":{"slug":"/Algorithm/problem기초(7-3)/"}}},{"node":{"id":"27dfe1c4-f448-5bec-9893-a6a6a5591274","excerpt":"문제 설명 정수 l과 r이 주어졌을 때, l 이상 r이하의 정수 중에서 숫자 “0”과 “5”로만 이루어진 모든 정수를 오름차순으로 저장한 배열을 return 하는 solution 함수를 완성해 주세요. 만약 그러한 정수가 없다면, -1이 담긴 배열을 return 합니다. 제한사항 1 ≤ l ≤ r ≤ 1,000,000 입출력 예 1 r result 5 555 [5, 50, 55, 500, 505, 550, 555] 10 20 [-1] 입출력 예 설명 입출력 예 #1 5 이상 555 이하의 0과 5로만 이루어진 정수는 작은 수부터 5, 50, 55, 500, 505, 550, 555가 있습니다. 따라서 [5, 50, 55, 500, 505, 550, 555]를 return 합니다. 입출력 예 #2 10 이상 20 이하이면서 0과 5로만 이루어진 정수는 없습니다. 따라서 [-1]을 return 합니다. solution.js every() 모든 원소가 조건에 맞는지 검사하는 메서드이다.…","fields":{"slug":"/Algorithm/problem기초(7-2)/"},"frontmatter":{"categories":"Algorithm","title":"프로그래머스 배열 만들기 2 Js","date":"April 16, 2024"}},"next":{"fields":{"slug":"/Algorithm/problem기초(7-1)/"}},"previous":{"fields":{"slug":"/Algorithm/problem(7-4)/"}}},{"node":{"id":"66475720-f693-5f08-ab1c-bb06674b7590","excerpt":"문제 설명 정수 배열 arr와 2차원 정수 배열 queries이 주어집니다. queries의 원소는 각각 하나의 query를 나타내며, [s, e, k] 꼴입니다. 각 query마다 순서대로 s ≤ i ≤ e인 모든 i에 대해 i가 k의 배수이면 arr[i]에 1을 더합니다. 위 규칙에 따라 queries를 처리한 이후의 arr를 return 하는 solution 함수를 완성해 주세요. 제한사항 1 ≤ arr의 길이 ≤ 1,000 0 ≤ arr의 원소 ≤ 1,000,000 1 ≤ queries의 길이 ≤ 1,000 0 ≤ s ≤ e < arr의 길이 0 ≤ k ≤ 5 입출력 예 arr queries result [0, 1, 2, 4, 3] [[0, 4, 1],[0, 3, 2],[0, 3, 3]] [3, 2, 4, 6, 4] 입출력 예 설명  각 쿼리에 따라 arr가 다음과 같이 변합니다. arr [0, 1, 2, 4, 3] [1, 2, 3, 5, 4] [2, 2, 4, 5, 4] …","fields":{"slug":"/Algorithm/problem기초(7-1)/"},"frontmatter":{"categories":"Algorithm","title":"프로그래머스 수열과 구간 쿼리4 Js","date":"April 16, 2024"}},"next":{"fields":{"slug":"/Algorithm/problem기초(6-5)/"}},"previous":{"fields":{"slug":"/Algorithm/problem기초(7-2)/"}}},{"node":{"id":"6b01a2a3-9f79-5f2c-9080-06d1d4d42023","excerpt":"문제 설명 정수 배열 arr와 2차원 정수 배열 queries이 주어집니다. queries의 원소는 각각 하나의 query를 나타내며, [s, e, k] 꼴입니다. 각 query마다 순서대로 s ≤ i ≤ e인 모든 i에 대해 k보다 크면서 가장 작은 arr[i]를 찾습니다. 각 쿼리의 순서에 맞게 답을 저장한 배열을 반환하는 solution 함수를 완성해 주세요.\n단, 특정 쿼리의 답이 존재하지 않으면 -1을 저장합니다. 제한사항 1 ≤ arr의 길이 ≤ 1,000 0 ≤ arr의 원소 ≤ 1,000,000 1 ≤ queries의 길이 ≤ 1,000 0 ≤ s ≤ e < arr의 길이 0 ≤ k ≤ 1,000,000 입출력 예 arr queries result [0, 1, 2, 3, 4] [[0, 4, 2],[0, 3, 2],[0, 2, 2]] [3, 4, -1] 입출력 예 설명  첫 번째 쿼리의 범위에는 0, 1, 2, 4, 3이 있으며 이 중 2보다 크면서 가장 작은 값은 3…","fields":{"slug":"/Algorithm/problem기초(6-5)/"},"frontmatter":{"categories":"Algorithm","title":"프로그래머스 수열과 구간 쿼리2 Js","date":"April 03, 2024"}},"next":{"fields":{"slug":"/Algorithm/problem기초(6-4)/"}},"previous":{"fields":{"slug":"/Algorithm/problem기초(7-1)/"}}},{"node":{"id":"2e413196-f094-51f0-81bc-5bacdcd65635","excerpt":"문제 설명 정수 배열 arr와 2차원 정수 배열 queries이 주어집니다. queries의 원소는 각각 하나의 query를 나타내며, [i, j] 꼴입니다. 각 query마다 순서대로 arr[i]의 값과 arr[j]의 값을 서로 바꿉니다. 위 규칙에 따라 queries를 처리한 이후의 arr를 return 하는 solution 함수를 완성해 주세요. 제한사항 1 ≤ arr의 길이 ≤ 1,000 0 ≤ arr의 원소 ≤ 1,000,000 1 ≤ queries의 길이 ≤ 1,000 0 ≤ i < j < arr의 길이 입출력 예 arr queries result [0, 1, 2, 3, 4] [ [0, 3],[1, 2],[1, 4] ] [3, 4, 1, 0, 2] 입출력 예 설명  각 쿼리에 따라 arr가 다음과 같이 변합니다. arr [0, 1, 2, 3, 4] [3, 1, 2, 0, 4] [3, 2, 1, 0, 4] [3, 4, 1, 0, 2] 따라서 [3, 4, 1, 0, 2]를 …","fields":{"slug":"/Algorithm/problem기초(6-4)/"},"frontmatter":{"categories":"Algorithm","title":"프로그래머스 수열과 구간 쿼리3 Js","date":"April 03, 2024"}},"next":{"fields":{"slug":"/Algorithm/problem기초(6-3)/"}},"previous":{"fields":{"slug":"/Algorithm/problem기초(6-5)/"}}},{"node":{"id":"957074e3-62ca-5c40-aaf9-5c6ed0647970","excerpt":"문제 설명 정수 배열 numLog가 주어집니다. 처음에 numLog[0]에서 부터 시작해 “w”, “a”, “s”, “d”로 이루어진 문자열을 입력으로 받아 순서대로 다음과 같은 조작을 했다고 합시다. “w” : 수에 1을 더한다. “s” : 수에 1을 뺀다. “d” : 수에 10을 더한다. “a” : 수에 10을 뺀다. 그리고 매번 조작을 할 때마다 결괏값을 기록한 정수 배열이 numLog입니다. 즉, numLog[i]는 numLog[0]로부터 총 i번의 조작을 가한 결과가 저장되어 있습니다. 주어진 정수 배열 numLog에 대해 조작을 위해 입력받은 문자열을 return 하는 solution 함수를 완성해 주세요. 제한사항 2 ≤ numLog의 길이 ≤ 100,000 -100,000 ≤ numLog[0] ≤ 100,000 1 ≤ i ≤ numLog의 길이인 모든 i에 대해 |numLog[i] - numLog[i - 1]|의 값은 1 또는 10입니다. 입출력 예 numLog re…","fields":{"slug":"/Algorithm/problem기초(6-3)/"},"frontmatter":{"categories":"Algorithm","title":"프로그래머스 수 조작하기 2 Js","date":"April 01, 2024"}},"next":{"fields":{"slug":"/Algorithm/problem기초(6-1)/"}},"previous":{"fields":{"slug":"/Algorithm/problem기초(6-4)/"}}},{"node":{"id":"7edb0673-eda3-5ec8-af36-b86fe73e3ce7","excerpt":"문제 설명 정수 리스트 num_list가 주어질 때, 마지막 원소가 그전 원소보다 크면 마지막 원소에서 그전 원소를 뺀 값을 마지막 원소가 그전 원소보다 크지 않다면 마지막 원소를 두 배한 값을 추가하여 return하도록 solution 함수를 완성해주세요. 제한 사항 2 ≤ num_list의 길이 ≤ 10 1 ≤ num_list의 원소 ≤ 9 입출력 예 num_list result [2, 1, 6] [2, 1, 6, 5] [5, 2, 1, 7, 5] [5, 2, 1, 7, 5, 10] 입출력 예 설명  마지막 원소인 6이 그전 원소인 1보다 크기 때문에 6 - 1인 5를 추가해 return합니다.  마지막 원소인 5가 그전 원소인 7보다 크지 않기 때문에 5의 두 배인 10을 추가해 return합니다. My solution.js Best solution.js 내 풀이보다 더 깔끔한 풀이가 있길래 가져와봤다! 입력 예제 1번을 통해 설명하면 […num_list]를 통해서 원본 배열…","fields":{"slug":"/Algorithm/problem기초(6-1)/"},"frontmatter":{"categories":"Algorithm","title":"프로그래머스 마지막 두 원소 Js","date":"March 28, 2024"}},"next":{"fields":{"slug":"/Algorithm/problem기초(4-4)/"}},"previous":{"fields":{"slug":"/Algorithm/problem기초(6-3)/"}}},{"node":{"id":"a2d6e737-071f-590d-abdb-56b505c4859d","excerpt":"","fields":{"slug":"/Algorithm/problem기초(4-4)/"},"frontmatter":{"categories":"Algorithm","title":"프로그래머스 두 수의 연산값 비교하기 Js","date":"March 27, 2024"}},"next":{"fields":{"slug":"/Algorithm/problem기초(5-3)/"}},"previous":{"fields":{"slug":"/Algorithm/problem기초(6-1)/"}}},{"node":{"id":"2837a1a0-3be5-5aa8-9771-ed3711e9f99a","excerpt":"문제 설명 1부터 6까지 숫자가 적힌 주사위가 세 개 있습니다. 세 주사위를 굴렸을 때 나온 숫자를 각각 a, b, c라고 했을 때 얻는 점수는 다음과 같습니다. 세 숫자가 모두 다르다면 a + b + c 점을 얻습니다. 세 숫자 중 어느 두 숫자는 같고 나머지 다른 숫자는 다르다면 (a + b + c) × (a2 + b2 + c2 )점을 얻습니다. 세 숫자가 모두 같다면 (a + b + c) × (a2 + b2 + c2 ) × (a3 + b3 + c3 )점을 얻습니다. 세 정수 a, b, c가 매개변수로 주어질 때, 얻는 점수를 return 하는 solution 함수를 작성해 주세요. 제한사항 a, b, c는 1이상 6이하의 정수입니다. 입출력 예 a b c result 2 6 1 9 5 3 3 473 4 4 4 110592 입출력 예 설명  예제 1번에서 세 주사위 숫자가 모두 다르므로 2 + 6 + 1 = 9점을 얻습니다.\n따라서 9를 return 합니다.  예제 2번에서 두…","fields":{"slug":"/Algorithm/problem기초(5-3)/"},"frontmatter":{"categories":"Algorithm","title":"프로그래머스 주사위 게임2 Js","date":"March 27, 2024"}},"next":{"fields":{"slug":"/Algorithm/problem기초(6-2)/"}},"previous":{"fields":{"slug":"/Algorithm/problem기초(4-4)/"}}},{"node":{"id":"5f81890e-20f6-5f8c-b81b-c2b1e7c29ad1","excerpt":"문제 설명 정수 n과 문자열 control이 주어집니다. control은 “w”, “a”, “s”, “d”의 4개의 문자로 이루어져 있으며, control의 앞에서부터 순서대로 문자에 따라 n의 값을 바꿉니다. “w” : n이 1 커집니다. “s” : n이 1 작아집니다. “d” : n이 10 커집니다. “a” : n이 10 작아집니다. 위 규칙에 따라 n을 바꿨을 때 가장 마지막에 나오는 n의 값을 return 하는 solution 함수를 완성해 주세요. 제한사항 -100,000 ≤ n ≤ 100,000 1 ≤ control의 길이 ≤ 100,000 control은 알파벳 소문자 “w”, “a”, “s”, “d”로 이루어진 문자열입니다. 입출력 예 n control result 0 “wsdawsdassw” -1 입출력 예 설명  수 n은 control에 따라 다음과 같은 순서로 변하게 됩니다. 0 → 1 → 0 → 10 → 0 → 1 → 0 → 10 → 0 → -1 → -2 → …","fields":{"slug":"/Algorithm/problem기초(6-2)/"},"frontmatter":{"categories":"Algorithm","title":"프로그래머스 수 조작하기 1 Js","date":"March 27, 2024"}},"next":{"fields":{"slug":"/Git/git_checkout-t/"}},"previous":{"fields":{"slug":"/Algorithm/problem기초(5-3)/"}}},{"node":{"id":"e53c8a71-7c12-51e4-81e0-7ad397a155d7","excerpt":"문제 설명 두 정수 a, d와 길이가 n인 boolean 배열 included가 주어집니다. 첫째항이 a, 공차가 d인 등차수열에서 included[i]가 i + 1항을 의미할 때, 이 등차수열의 1항부터 n항까지 included가 true인 항들만 더한 값을 return 하는 solution 함수를 작성해 주세요. 제한사항 1 ≤ a ≤ 100 1 ≤ d ≤ 100 1 ≤ included의 길이 ≤ 100 included에는 true가 적어도 하나 존재합니다. 입출력 예 a b included result 3 4 [true, false, false, true, true] 37 7 1 [false, false, false, true, false, false, false] 10 입출력 예 설명  예제 1번은 a와 d가 각각 3, 4이고 included의 길이가 5입니다. 이를 표로 나타내면 다음과 같습니다.  1항 2항 3항 4항 5항 등차수열 3 7 11 15 19 included…","fields":{"slug":"/Algorithm/problem기초(5-2)/"},"frontmatter":{"categories":"Algorithm","title":"프로그래머스 등차수열의 특정한 항만 더하기 Js","date":"February 06, 2024"}},"next":{"fields":{"slug":"/Algorithm/problem기초(4-5)/"}},"previous":{"fields":{"slug":"/Js/axiox/"}}},{"node":{"id":"83d04890-2691-58cd-8732-e04c69e74392","excerpt":"문제 설명 두 정수 a, b와 boolean 변수 flag가 매개변수로 주어질 때, flag가 true면 a + b를 false면 a - b를 return 하는 solution 함수를 작성해 주세요. 제한사항 -1,000 ≤ a, b ≤ 1,000 입출력 예 a b flag result -4 7 true 3 -4 7 flase -11 입출력 예  예제 1번에서 flag가 true이므로 a + b = (-4) + 7 = 3을 return 합니다.  예제 2번에서 flag가 false이므로 a - b = (-4) - 7 = -11을 return 합니다. solution.js 문제 설명 제한사항 입출력 예 입출력 예 solution.js","fields":{"slug":"/Algorithm/problem기초(4-5)/"},"frontmatter":{"categories":"Algorithm","title":"프로그래머스 flag에 따라 다른 값 반환하기 Js","date":"February 06, 2024"}},"next":{"fields":{"slug":"/Algorithm/problem기초(5-1)/"}},"previous":{"fields":{"slug":"/Algorithm/problem기초(5-2)/"}}},{"node":{"id":"7add372d-7592-541d-a12d-90eb0953faf0","excerpt":"문제 설명 문자열 code가 주어집니다. code를 앞에서부터 읽으면서 만약 문자가 “1”이면 mode를 바꿉니다. mode에 따라 code를 읽어가면서 문자열 ret을 만들어냅니다. mode는 0과 1이 있으며, idx를 0 부터 code의 길이 - 1 까지 1씩 키워나가면서 code[idx]의 값에 따라 다음과 같이 행동합니다. mode가 0일 때 code[idx]가 “1”이 아니면 idx가 짝수일 때만 ret의 맨 뒤에 code[idx]를 추가합니다. code[idx]가 “1”이면 mode를 0에서 1로 바꿉니다. mode가 1일 때 code[idx]가 “1”이 아니면 idx가 홀수일 때만 ret의 맨 뒤에 code[idx]를 추가합니다. code[idx]가 “1”이면 mode를 1에서 0으로 바꿉니다. 문자열 code를 통해 만들어진 문자열 ret를 return 하는 solution 함수를 완성해 주세요. 단, 시작할 때 mode는 0이며, return 하려는 ret가 만약…","fields":{"slug":"/Algorithm/problem기초(5-1)/"},"frontmatter":{"categories":"Algorithm","title":"프로그래머스 코드 처리하기 Js","date":"February 06, 2024"}},"next":{"fields":{"slug":"/Algorithm/problem기초(4-3)/"}},"previous":{"fields":{"slug":"/Algorithm/problem기초(4-5)/"}}},{"node":{"id":"13f5ae7c-3647-53ab-ad90-d07785fa6d19","excerpt":"문제 설명 양의 정수 n이 매개변수로 주어질 때, n이 홀수라면 n 이하의 홀수인 모든 양의 정수의 합을 return 하고 n이 짝수라면 n 이하의 짝수인 모든 양의 정수의 제곱의 합을 return 하는 solution 함수를 작성해 주세요. 제한사항 1 ≤ n ≤ 100 입출력 예 n result 7 16 10 220 입출력 예 설명  예제 1번의 n은 7로 홀수입니다. 7 이하의 모든 양의 홀수는 1, 3, 5, 7이고 이들의 합인 1 + 3 + 5 + 7 = 16을 return 합니다.  예제 2번의 n은 10으로 짝수입니다. 10 이하의 모든 양의 짝수는 2, 4, 6, 8, 10이고 이들의 제곱의 합인 22 + 42 + 62 + 82 + 102 = 4 + 16 + 36 + 64 + 100 = 220을 return 합니다. solution.js 문제 설명 제한사항 입출력 예 입출력 예 설명 solution.js","fields":{"slug":"/Algorithm/problem기초(4-3)/"},"frontmatter":{"categories":"Algorithm","title":"프로그래머스 홀짝에 따라 다른 값 반환하기 Js","date":"February 06, 2024"}},"next":{"fields":{"slug":"/Algorithm/problem기초(4-2)/"}},"previous":{"fields":{"slug":"/Algorithm/problem기초(5-1)/"}}},{"node":{"id":"dac23395-be0a-503c-8bae-3755bf32b4dc","excerpt":"문제 설명 정수 number와 n, m이 주어집니다. number가 n의 배수이면서 m의 배수이면 1을 아니라면 0을 return하도록 solution 함수를 완성해주세요. 제한사항 10 ≤ number ≤ 100 2 ≤ n, m < 10 입출력 예 num n m result 98 2 1 1 34 3 0 0 입출력 예 설명  60은 2의 배수이면서 3의 배수이기 때문에 1을 return합니다.  55는 5의 배수이지만 10의 배수가 아니기 때문에 0을 return합니다. solution.js 분석 삼항 연산자를 이용해 numebr를 n과 m 으로 각각 나누었을때의 값이 0이면 조건문이 참이기 때문에 1을 return한다. 문제 설명 제한사항 입출력 예 입출력 예 설명 solution.js 분석","fields":{"slug":"/Algorithm/problem기초(4-2)/"},"frontmatter":{"categories":"Algorithm","title":"프로그래머스 공배수 Js","date":"February 06, 2024"}},"next":{"fields":{"slug":"/Algorithm/problem기초(4-1)/"}},"previous":{"fields":{"slug":"/Algorithm/problem기초(4-3)/"}}},{"node":{"id":"00d6d326-e9c4-537d-b365-3be7a8a6c378","excerpt":"문제 설명 정수 num과 n이 매개 변수로 주어질 때, num이 n의 배수이면 1을 return n의 배수가 아니라면 0을 return하도록 solution 함수를 완성해주세요. 제한사항 2 ≤ num ≤ 100 2 ≤ n ≤ 9 입출력 예 num n result 98 2 1 34 3 0 입출력 예 설명  98은 2의 배수이므로 1을 return합니다.  32는 3의 배수가 아니므로 0을 return합니다. solution.js 문제 설명 제한사항 입출력 예 입출력 예 설명 solution.js","fields":{"slug":"/Algorithm/problem기초(4-1)/"},"frontmatter":{"categories":"Algorithm","title":"프로그래머스 n의 배수 Js","date":"February 06, 2024"}},"next":{"fields":{"slug":"/Algorithm/problem기초(3-5)/"}},"previous":{"fields":{"slug":"/Algorithm/problem기초(4-2)/"}}},{"node":{"id":"f54da930-432f-5433-b728-20a508a1d2fa","excerpt":"문제 설명 연산 ⊕는 두 정수에 대한 연산으로 두 정수를 붙여서 쓴 값을 반환합니다. 예를 들면 다음과 같습니다. 12 ⊕ 3 = 123 3 ⊕ 12 = 312 양의 정수 a와 b가 주어졌을 때, a ⊕ b와 2 * a * b 중 더 큰 값을 return하는 solution 함수를 완성해 주세요. 단, a ⊕ b와 2 * a * b가 같으면 a ⊕ b를 return 합니다. 제한사항 1 ≤ a, b < 10,000 입출력 예 a b result 2 91 364 91 2 912 입출력 예 설명  a ⊕ b = 291 이고, 2 * a * b = 364 입니다. 둘 중 더 큰 값은 364 이므로 364를 return 합니다.  a ⊕ b = 912 이고, 2 * a * b = 364 입니다. 둘 중 더 큰 값은 912 이므로 912를 return 합니다. solution.js 분석 result1은 두 숫자를 “을 이용해 문자열로 붙여 type이 string이고 result2은 type…","fields":{"slug":"/Algorithm/problem기초(3-5)/"},"frontmatter":{"categories":"Algorithm","title":"프로그래머스 두 수의 연산값 비교하기 Js","date":"February 05, 2024"}},"next":{"fields":{"slug":"/Algorithm/problem기초(3-4)/"}},"previous":{"fields":{"slug":"/Algorithm/problem기초(4-1)/"}}},{"node":{"id":"d09e4b49-eaf1-5574-a1c5-f74c74d57ccd","excerpt":"문제 설명 연산 ⊕는 두 정수에 대한 연산으로 두 정수를 붙여서 쓴 값을 반환합니다. 예를 들면 다음과 같습니다. 12 ⊕ 3 = 123 3 ⊕ 12 = 312 양의 정수 a와 b가 주어졌을 때, a ⊕ b와 b ⊕ a 중 더 큰 값을 return 하는 solution 함수를 완성해 주세요. 단, a ⊕ b와 b ⊕ a가 같다면 a ⊕ b를 return 합니다. 제한사항 1 ≤ a, b < 10,000 입출력 예 a b result 9 91 991 89 8 898 입출력 예 설명  a ⊕ b = 991 이고, b ⊕ a = 919 입니다. 둘 중 더 큰 값은 991 이므로 991을 return 합니다.  a ⊕ b = 898 이고, b ⊕ a = 889 입니다. 둘 중 더 큰 값은 898 이므로 898을 return 합니다. solution.js 분석 정수 a,b를 “(백틱)을 이용해 문자열로 합친 결과를 result1, result2 에 저장한다. result1이 result2 …","fields":{"slug":"/Algorithm/problem기초(3-4)/"},"frontmatter":{"categories":"Algorithm","title":"프로그래머스 더 크게 합치기 Js","date":"February 05, 2024"}},"next":{"fields":{"slug":"/Algorithm/problem기초(2-3)/"}},"previous":{"fields":{"slug":"/Algorithm/problem기초(3-5)/"}}},{"node":{"id":"0fac1b4c-1922-577d-bfc6-b664aa328a25","excerpt":"문제설명 문자열 str이 주어집니다. 문자열을 시계방향으로 90도 돌려서 아래 입출력 예와 같이 출력하는 코드를 작성해 보세요. 제한사항 1 ≤ str의 길이 ≤ 10 입출력 예   solution.js 분석 str을 전개구문을 이용해 [ ‘a’, ‘b’, ‘c’, ‘d’, ‘e’ ]의 배열을 만든다. forEach 구문을 통해 각 배열에 있는 값을 console.log( )를 통해 출력한다. 문제설명 제한사항 입출력 예 solution.js 분석","fields":{"slug":"/Algorithm/problem기초(2-3)/"},"frontmatter":{"categories":"Algorithm","title":"프로그래머스 문자열 돌리기 Js","date":"February 05, 2024"}},"next":{"fields":{"slug":"/Algorithm/problem기초(3-3)/"}},"previous":{"fields":{"slug":"/Algorithm/problem기초(3-4)/"}}},{"node":{"id":"e5157302-5393-5ad8-93b0-eeb7004616a6","excerpt":"문제 설명 문자열 my_string과 정수 k가 주어질 때, my_string을 k번 반복한 문자열을 return 하는 solution 함수를 작성해 주세요. 제한사항 1 ≤ my_string의 길이 ≤ 100 my_string은 영소문자로만 이루어져 있습니다. 1 ≤ k ≤ 100 입출력 예 my_string k result “string” 3 “stringstringstring” “love” 10” “lovelovelovelovelovelovelovelovelovelove” 입출력 예 설명  예제 1번의 my_string은 “string”이고 이를 3번 반복한 문자열은 “stringstringstring”이므로 이를 return 합니다.  예제 2번의 my_string은 “love”이고 이를 10번 반복한 문자열은    “lovelovelovelovelovelovelovelovelovelove”이므로 이를 return 합니다. solution.js 분석 repeat을 이용해 m…","fields":{"slug":"/Algorithm/problem기초(3-3)/"},"frontmatter":{"categories":"Algorithm","title":"프로그래머스 문자열 곱하기 Js","date":"February 05, 2024"}},"next":{"fields":{"slug":"/Algorithm/problem기초(2-2)/"}},"previous":{"fields":{"slug":"/Algorithm/problem기초(2-3)/"}}},{"node":{"id":"751714f3-4eaa-5a57-9412-79c87facaf83","excerpt":"문제 설명 두 개의 문자열 str1, str2가 공백으로 구분되어 입력으로 주어집니다. 입출력 예와 같이 str1과 str2을 이어서 출력하는 코드를 작성해 보세요. 제한사항 1 ≤ str1, str2의 길이 ≤ 10 입출력 예     solution.js 분석 join(’ ‘)을 이용해 띄어진 두 문자열을 합쳐 출력한다. 문제 설명 제한사항 입출력 예 solution.js 분석","fields":{"slug":"/Algorithm/problem기초(2-2)/"},"frontmatter":{"categories":"Algorithm","title":"프로그래머스 문자열 붙여서 출력하기 Js","date":"February 05, 2024"}},"next":{"fields":{"slug":"/Algorithm/problem기초(2-1)/"}},"previous":{"fields":{"slug":"/Algorithm/problem기초(3-3)/"}}},{"node":{"id":"04ba6c92-3736-5775-a949-1519a3f46e2f","excerpt":"문제 설명 두 정수 a, b가 주어질 때 다음과 같은 형태의 계산식을 출력하는 코드를 작성해 보세요 제한사항 입출력 예   solution.js 분석 한줄로 입력 받은 값을 한글자씩 구분해 input 변수에 저장한다. 제한사항 입출력 예 solution.js 분석","fields":{"slug":"/Algorithm/problem기초(2-1)/"},"frontmatter":{"categories":"Algorithm","title":"프로그래머스 덧셈식 출력하기 Js","date":"January 22, 2024"}},"next":{"fields":{"slug":"/Algorithm/problem기초(1-5)/"}},"previous":{"fields":{"slug":"/Algorithm/problem기초(2-2)/"}}},{"node":{"id":"6f7b62ff-56df-5d01-b1ac-0ce6ea4f32c9","excerpt":"문제 설명 다음과 같이 출력하도록 코드를 작성해 주세요. 출력 예시 solution.js 분석 자바스크립트 내에서는 특수문자를 처리하기 위해서는 백슬러시를 이용한 특수문자 표기 방법(=escape)이 있다. speacial_str에서는 문자열 표현을 위해 기존 따옴표에서 백틱(`)을 사용했다. \\’ escape 문자로 인해 사라지게 될 백슬래시를 보충하기 위해 escape 문자 앞에 백슬래시(\\)를 하나 더 추가하여 해결하였다. eascape 문자 특수문자 출력 형태 및 설명 영문표기 \\’ ’ single quote \\” ” double quote \\\\ \\ backslash \\n 커서를 다음 줄로 이동 new line \\r 커서를 해당 줄 처음으로 이동 carriage return \\t 커서를 탭 만큼 이동 tab \\b 백스페이스(←)와 동일하게 작동 backspace \\f 커서를 다음 페이지로 이동 (용지 넘김 문자) form feed 문제 설명 출력 예시 solution.js …","fields":{"slug":"/Algorithm/problem기초(1-5)/"},"frontmatter":{"categories":"Algorithm","title":"프로그래머스 특수문자 출력하기 Js","date":"January 22, 2024"}},"next":{"fields":{"slug":"/Algorithm/problem기초(1-4)/"}},"previous":{"fields":{"slug":"/Algorithm/problem기초(2-1)/"}}},{"node":{"id":"5f46b734-8d9c-5fda-8c9e-03723932eb08","excerpt":"문제 설명 영어 알파벳으로 이루어진 문자열 str이 주어집니다. 각 알파벳을 대문자는 소문자로 소문자는 대문자로 변환해서 출력하는 코드를 작성해 보세요. 제한 사항 1 ≤ str의 길이 ≤ 20 str은 알파벳으로 이루어진 문자열입니다. 입출력 예   solution.js 분석 str의 첫번째 인덱스값을 한글자씩 분리해서 str = [a,B,c,D,e,F,g]로 만들었다 forEach 반복문을 사용해 각 인덱스의 값이 대문자인지 소문자인지 구분한다. toUpperCase()를 사용해 해당 값이 대문자이면 toLowerCase()를 사용해 소문자로 변환한다. toLowerCase()를 사용해 해당 값이 소문자이면 toUpperCase()를 사용해 대문자로 변환한다. 변환된 글자들은 str 배열에 저장되어 있고 str.join(”)을 이용해 각 인덱스에 저장된 글자를 한번에 합쳐서 출력한다. 문제 설명 제한 사항 입출력 예 solution.js 분석","fields":{"slug":"/Algorithm/problem기초(1-4)/"},"frontmatter":{"categories":"Algorithm","title":"프로그래머스 대소문자 바꿔서 출력하기 JS","date":"January 22, 2024"}},"next":{"fields":{"slug":"/Algorithm/problem기초(1-3)/"}},"previous":{"fields":{"slug":"/Algorithm/problem기초(1-5)/"}}},{"node":{"id":"83fdef0c-9a07-5008-94f6-48d832ed4fa4","excerpt":"문제설명 문자열 str과 정수 n이 주어집니다. str이 n번 반복된 문자열을 만들어 출력하는 코드를 작성해 보세요. 제한사항 1 ≤ str의 길이 ≤ 10 1 ≤ n ≤ 5 입출력 예 입력 #1 출력 #1 solution.js  한줄씩 입력받은 값을 공백을 기준으로 구분해서 input 배열에 선언한다.  input의 인덱스 0에 있는 문자열은 str 변수에 선언하고 인덱스 1에 있는 문자열은 Number를 통해 숫자형으로 변환후 n 변수에 선언한다.\n2) repeat() 메서드 사용 repeat() 메서드는 문자열을 주어진 횟수 만큼 반복해 붙이 문자열을 반환한다. str에 저장된 문자열을 repeat() 메서는들 사용해 n만큼 반복하면 된다. 문제설명 제한사항 입출력 예 solution.js","fields":{"slug":"/Algorithm/problem기초(1-3)/"},"frontmatter":{"categories":"Algorithm","title":"프로그래머스 문자열 반복해서 출력하기 Js","date":"January 17, 2024"}},"next":{"fields":{"slug":"/Algorithm/problem기초(1-2)/"}},"previous":{"fields":{"slug":"/Algorithm/problem기초(1-4)/"}}},{"node":{"id":"0a9ed690-a588-53b3-9a57-75da21122b22","excerpt":"문제설명 정수 와 가 주어집니다. 각 수를 입력받아 입출력 예와 같은 형식으로 출력하는 코드를 작성해 보세요. 제한사항 -100,000 ≤ a, b ≤ 100,000 입출력 예 입력 # 1 출력 #1 solution.js  한줄씩 입력받은 값을 공백을 기준으로 구분해서 input 배열에 선언한다.  백틱을 사용해 문자열과 input 배열에 담겨있는 각 인덱스의 값을 한번에 출력한다 문제설명 제한사항 입출력 예 solution.js","fields":{"slug":"/Algorithm/problem기초(1-2)/"},"frontmatter":{"categories":"Algorithm","title":"프로그래머스 a와 b 출력하기 Js","date":"January 17, 2024"}},"next":{"fields":{"slug":"/Algorithm/problem기초(1-1)/"}},"previous":{"fields":{"slug":"/Algorithm/problem기초(1-3)/"}}},{"node":{"id":"e9888508-6611-5c9b-9371-73fe9404c475","excerpt":"문제설명 문자열 이 주어질 때, 을 출력하는 코드를 작성해 보세요. 제한사항 1 ≤ str의 길이 ≤ 1,000,000 str에는 공백이 없으며, 첫째 줄에 한 줄로만 주어집니다. 입출력 예 입력 #1 출력 #1 solution.js readline 모듈 readline 모듈은 JavaScript에 내장된 모듈 자바스크립트에서는 readline 모듈을 이용하면 콘솔을 통해 값을 입력받을 수 있다. readline모듈은 사용자의 입력을 console.log로 출력할 수 있도록 해주는 역할을 한다. 모듈 불러오기 readline 모듈을 이용해 입출력을 위한 인터페이스 객체 만들기 정의한 변수를 이용해 readline 인터페이스 객체를 하나 만들어줍니다. readline interface 객체를 이용해 콘솔에서 표준 입출력을 처리할 수 있습니다. creacteInterface()메서드를 이용해 객체를 만들고, rl 변수에 저장해줍니다. on 메소드 생성한 변수 rl 객체로 입출력과 관련…","fields":{"slug":"/Algorithm/problem기초(1-1)/"},"frontmatter":{"categories":"Algorithm","title":"프로그래머스 문자열 출력하기 Js","date":"January 16, 2024"}},"next":{"fields":{"slug":"/React/React (4)/"}},"previous":{"fields":{"slug":"/Algorithm/problem기초(1-2)/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}