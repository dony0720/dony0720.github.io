{"componentChunkName":"component---src-templates-category-template-js","path":"/posts","result":{"pageContext":{"currentCategory":"All","edges":[{"node":{"id":"bf61c6f7-589c-513c-bd5e-c0f62ff796cf","excerpt":"a와 b 출력하기 문제설명 정수 와 가 주어집니다. 각 수를 입력받아 입출력 예와 같은 형식으로 출력하는 코드를 작성해 보세요. 제한사항 -100,000 ≤ a, b ≤ 100,000 입출력 예 입력 # 1 출력 #1 solution.js  한줄씩 입력받은 값을 공백을 기준으로 구분해서 input 배열에 선언한다.  백틱을 사용해 문자열과 input 배열에 담겨있는 각 인덱스의 값을 한번에 출력한다 문제설명 제한사항 입출력 예 solution.js","fields":{"slug":"/CodingTest/problem(2)/"},"frontmatter":{"categories":"Algorithm","title":"프로그래머스 코테 연습문제 (2)","date":"January 17, 2024"}},"next":{"fields":{"slug":"/CodingTest/problem(1)/"}},"previous":null},{"node":{"id":"fc3c7a52-3479-5806-ad6b-76876a84a2e9","excerpt":"문자열 출력하기 문제설명 문자열 이 주어질 때, 을 출력하는 코드를 작성해 보세요. 제한사항 1 ≤ str의 길이 ≤ 1,000,000 str에는 공백이 없으며, 첫째 줄에 한 줄로만 주어집니다. 입출력 예 입력 #1 출력 #1 solution.js readline 모듈 readline 모듈은 JavaScript에 내장된 모듈 자바스크립트에서는 readline 모듈을 이용하면 콘솔을 통해 값을 입력받을 수 있다. readline모듈은 사용자의 입력을 console.log로 출력할 수 있도록 해주는 역할을 한다. 모듈 불러오기 readline 모듈을 이용해 입출력을 위한 인터페이스 객체 만들기 정의한 변수를 이용해 readline 인터페이스 객체를 하나 만들어줍니다. readline interface 객체를 이용해 콘솔에서 표준 입출력을 처리할 수 있습니다. creacteInterface()메서드를 이용해 객체를 만들고, rl 변수에 저장해줍니다. on 메소드 생성한 변수 rl 객체…","fields":{"slug":"/CodingTest/problem(1)/"},"frontmatter":{"categories":"Algorithm","title":"프로그래머스 코테 연습문제 (1)","date":"January 16, 2024"}},"next":{"fields":{"slug":"/React/React (4)/"}},"previous":{"fields":{"slug":"/CodingTest/problem(2)/"}}},{"node":{"id":"a2aa1e7b-f166-5e20-87a7-a5eaf85ecc71","excerpt":"Create React App Create React App은 단일 페이지의 React 앱을 만들 위한 방법입니다. 프로젝트 생성을 위한 조건 프로젝트를 생성하기 위해서는 Node.js가 설치되어 있어야 한다. 버전은 각 os에 맞는 recommand 버전을 다운 받으면 된다. 터미널을 열고 아래와 같이 명령어를 입력해 설치된 Node.js의 버전을 확인한다. 프로젝트 생성 과정 터미널을 열고 아래 명령어를 입력 하면 react-test라는 폴더가 생성된다.  아래 명령어를 입력해 vscode에서 폴더 열기 vscode에서 터미널을 열어 아래 명령어를 입력하면 localhost 3000; 이라는 내 컴퓨터의 포트 번호 3000번 서버에서 리액트 앱이 실행된다. 프로젝트 진행 프로젝트를 진행하기 전에 src폴더에는 App.js와 index.js를 제외한 나머지 파일들을 삭제하고 시작한다. App.js useEffect useEffect 함수는 리액트 컴포넌트 렌더링 될때마다 특정 작…","fields":{"slug":"/React/React (4)/"},"frontmatter":{"categories":"React","title":"React (4)","date":"December 28, 2023"}},"next":{"fields":{"slug":"/React/React (3)/"}},"previous":{"fields":{"slug":"/CodingTest/problem(1)/"}}},{"node":{"id":"120882d4-3847-51ed-801c-e56789d8bf2e","excerpt":"Props란? 부모 컴포넌트로부터 자식 컴포넌트에게 데이터를 보내주는 방법 객체이다. 어떤 prop들을 받는지 검사하게끔 도와주는 역할을 한다. Btn 컴포넌트 함수 props는 객체이기 때문에 { }열어 원하는 속성을 바로 받을 수 있음 { }를 사용하지 않게 되면 props.text, props.fontSize의 방식으로 값에 접근해야한다. text prop은 string 형태의 데이터, fontSize는 number 형태의 데이터가 아닐시 동작은 되지만 콘솔 창에 올바른 형태의 데이터가 아니라고 경고를 알려준다. App 컴포넌트 함수 어떠한 것들을 컴포넌트 안에 넣든간에 HTML안에 영향을 주지 않고 prop이 된다. 컴포넌트 함수에 해당 prop을 등록하고 작성해야만 한다. 전달된 prop들은 하나의 오브젝트로 받게된다. prop을 전달할때의 이름과 받아서 사용할때의 이름은 동일해야한다. props와 stata의 차이점 props: 함수의 매개변수처럼 컴포넌트에 전달된다. …","fields":{"slug":"/React/React (3)/"},"frontmatter":{"categories":"React","title":"React (3)","date":"December 26, 2023"}},"next":{"fields":{"slug":"/React/React (2)/"}},"previous":{"fields":{"slug":"/React/React (4)/"}}},{"node":{"id":"864008bc-04cb-5274-8623-07c1c58d4185","excerpt":"MinutesToHours 컴포넌트 함수 배열 비구조화 할당 amount는 React.useState(0)을 사용해 초기값을 0으로 설정, flipped는 React.useState(false) 초기값을 false로 설정 하게된다. setAmount, setFliped 함수는 amount와 flipped의 값을 업데이트 할때 사용된다. setFliped(counter + 1)로 로직을 만들 경우 counter는 state를 할당한 값만 참조한다. 즉, setFliped를 여러번 호출하게 되면 값이 항상 2가 된다. 하지만 setFliped((current) => !current)로 로직을 만들 경우 current에는 useStete의 state자체를 참조한다. 여러번 함수를 호출하게 되면 값을 업데이트해서 반영한다. React에서는 Jsx문법을 Javascript로 변환하기 때문에 따로 Javascript를 쓰기 위해서는 {}를 사용해 주어야 한다. App 컴포넌트 함수 Minut…","fields":{"slug":"/React/React (2)/"},"frontmatter":{"categories":"React","title":"React (2)","date":"December 26, 2023"}},"next":{"fields":{"slug":"/React/React (1)/"}},"previous":{"fields":{"slug":"/React/React (3)/"}}},{"node":{"id":"4d0ff5b6-2577-59a5-b2ae-2329e8015164","excerpt":"React Js란? React JS는 기본적으로 Facebook에서 구축하고 유지 관리하는 JavaScript 라이브러리입니다. 또한 웹 애플리케이션의 간단하고 빠르며 확장 가능한 프런트엔드를 구축하기 위한 효율적이고 선언적이며 유연한 오픈 소스 JavaScript 라이브러리입니다. Jxs란? JavaScript에 XML을 추가하여 확장한 문법이다. React Js 필요한 스크립트 태크 React Js를 설치하기 위한 JavaScript 코드 Jsx 문법을 브라우저가 이해할 수 있는 형태로 변환하기 위해 필요하다 컴포넌트 작성 함수형 컴포넌트 선언 렌더링 Container에 Title과 Button을 포함시키기 위해서는 function으로 만들어주어야 함 선언한 컴포넌트를 불러오기 위해서는  형태로 작성해주면 된다. 작성한 jsx를 화면에 렌더링하기 위한 함수 컴포넌트를 페이지에 렌더링하는 역할을 하며, react-dom 모듈을 불러와야 사용가능하다. 는 Jsx로 작성된 컴포넌트를…","fields":{"slug":"/React/React (1)/"},"frontmatter":{"categories":"React","title":"React","date":"November 02, 2023"}},"next":{"fields":{"slug":"/Git/git_commitMessage/"}},"previous":{"fields":{"slug":"/React/React (2)/"}}},{"node":{"id":"48692518-edfd-5930-99ee-82e2f71732f8","excerpt":"Git 커밋 메시지는 왜 중요할까 잘 만든 커밋 메시지는 다른 개발자에게 변경 사항을 전달하는\r\n가장 쉽고 간편한 방법이기 때문입니다. 그래서 기업의 대규모 프로젝트는\r\n당연하고 협력의 비중이 낮은 소규모의 사이드 프로젝트에서도\r\n커밋 컨벤션을 따로 만들어서 규칙을 지키기도 합니다. 커밋 컨벤션이란? git 커밋 메시지 컨벤션(Git Commit Message Convention)이란\r\n프로젝트 참여자들이 일관된 형식의 커밋 메시지를 작성하기 위한 규칙을 말합니다.\r\n현재 여러 개발자 사이에서 관습적으로 통용되는 가이드라인이 있지만,\r\n각 프로젝트에 따라서 별도의 규칙을 만들어 적용하기도 한다고 합니다. 커밋 메시지를 왜 사용할까요? git에서 변경 사항을 저장하기 전에 수많은 변경 사항을 적용했을 수 있으므로\r\n저장할 변경 사항을 git에 알려야 합니다. 가장 좋은 방법은 커밋 메시지를 추가하여\r\n변경 사항을 식별하는 것이기 때문에 커밋 메시지를 사용합니다. 커밋 메시지를 잘 작…","fields":{"slug":"/Git/git_commitMessage/"},"frontmatter":{"categories":"Git","title":"Git 커밋 메시지의 중요성","date":"June 09, 2023"}},"next":{"fields":{"slug":"/Js/nullish/"}},"previous":{"fields":{"slug":"/React/React (1)/"}}},{"node":{"id":"eb6588d5-d49b-544a-aab2-f30747ffc954","excerpt":"Nullish란 nullish 병합 연산자 (??) 는 왼쪽 피연산자가  또는 일 때 오른쪽 피연산자를 반환하고, 그렇지 않으면 왼쪽 피연산자를 반환하는 논리 연산자이다. a ?? b의 평가 결과는 다음과 같습니다. a가 null도 아니고 undefined도 아니면 a 그 외의 경우는 b nullish 병합 연산자 ??없이 x = a ?? b와 동일한 동작을 하는 코드를 작성하면 다음과 같습니다. 다른 예시를 보겠습니다!! 지금은 firstName, lastName 이  이기 때문에 nickName을 반환합니다. 하지만 nickName까지 null 또는 undefined면 “익명의 사용자”가 반환되겠죠? ”??“와 ”||“의 차이 height || 100 결과 height에 0을 할당했지만 0을 falsy 한 값으로 취급했기 때문에 null이나 undefined를 할당한 것과 동일하게 처리합니다. 따라서 height || 100의 평가 결과는 100입니다. height ?? 100…","fields":{"slug":"/Js/nullish/"},"frontmatter":{"categories":"Js","title":"Nullish 병합 연산자 (??)","date":"June 09, 2023"}},"next":{"fields":{"slug":"/Book/Js_ch3_4_5/"}},"previous":{"fields":{"slug":"/Git/git_commitMessage/"}}},{"node":{"id":"62dd5126-3f85-526c-bb99-3662192a0689","excerpt":"큰 정수 자바스크립트의 큰 단점 중 하나는 64비트 정수가 없다는 것입니다. int64형은 최대 923372036854775807까지의 정수를 담을 수 있는데 이것은 자바스크립트의 Number.MAX SAFE INTEGER 범위인 90071992547409에\r\n벗어납니다. 숫자형 추가의 문제점 그렇다면 다른 언어들이 여러개의 숫자형을 가지고 있는 것처럼 자바스크립트에도 추가하는 생각이 들 수 있겠지만 문제가 있습니다. 그 이유는 단순성을 잃게 되고, 잠재적을 다른 버그를 초래할 가능성이 커지게 되기 때문입니다. 모든 자료형 선언과 자료형 변환은 잠재적인 오류입니다. 이 책에서는 큰 정수를 언어에 내장하는것 대신에 라이브러리 형태로 제공했어야 한다고 말합니다. 언어를 사용하는 대부분의 사용자는 큰 정수를 사용하지 않고 큰 정수는 현재의 숫자형으로 풀 수 없는 가장 큰 문제를 해결해 주지도 못하기 때문입니다. 큰 부동소수점 부동소수점 시스템은 세 가지\t숫자,즉 계수(coefHCient…","fields":{"slug":"/Book/Js_ch3_4_5/"},"frontmatter":{"categories":"Book","title":"자바스크립트는 왜 그 모양일까 3","date":"June 05, 2023"}},"next":{"fields":{"slug":"/Book/Js_ch2/"}},"previous":{"fields":{"slug":"/Js/nullish/"}}},{"node":{"id":"523c0212-fde0-5aed-afff-33e84747c659","excerpt":"number 자바스크립트는 라고 하는 하나의 숫자형을 가지고 있습니다. number는 인텔의 iAPX-432 프로세서를 위해 처음 개발된 IEEE 부동소수점 연산 표준 (IEEE 754)을 차용했습니다. 자바스크립트는 숫자형이 하나뿐 이라는 단점을 가지고 있다고 비판 받았지만 오히려 개발자의 생산성을 증가시키게 되었습니다. 왜냐하면 비슷한 여러가지 타입 중 잘못된 타입을 사용할까 봐 고민하며 시간을 낭비하지 않아도 되기 때문입니다. 숫자 0 자바스크립트에는 0으로 표시되지만 0이 아닌 값이 있습니다다. IEEE 754 표준에는 0과 -0 이라는 두 개의 0이 존재하고 다음 경우를 제외하고는 -0의 존재를 무시해도 됩니다. 숫자 리터럴 숫자 리터럴은 각 리터럴의 값과 가장 잘 맛는 숫자 객체에 대한 참조를 생성합니다 어떤경우네는 딱 맞는 값이고 어떤 경우에는 실제 값과 미세한 차이가 나기도 합니다. NaN 은 숫자가 아닌 숫자를 나타내는 값 입니다. 은 를 의미하고 typeof 연산…","fields":{"slug":"/Book/Js_ch2/"},"frontmatter":{"categories":"Book","title":"자바스크립트는 왜 그 모양일까 2","date":"June 05, 2023"}},"next":{"fields":{"slug":"/Mission/mission1-5/"}},"previous":{"fields":{"slug":"/Book/Js_ch3_4_5/"}}},{"node":{"id":"a7560005-5fbe-558c-bc13-23ed00529bfa","excerpt":"필수 구현 사항 js TodoList 함수에 setState(nextData)라는 함수를 만듭니다 이 함수는 해당 컴포넌트 초기 생성 시 넘겼던 data 파라메터를 nextData로 대체하고 컴포넌트를 다시 렌더링합니다. 해당 함수를 추가한 뒤, new TodoList(…) 하는 코드 이후에 해당 컴포넌트의 인스턴스에 todoList.setState(새로운 배열) 형태로 데이터만 다시 넣었을 때 컴포넌트가 다시 렌더링 되도록 작성해주세요. setState 함수 호출 후 다시 todoList.render()를 호출하는 것이 아니라, setState 함수 내에서 화면을 다시 렌더링하는 것까지 처리해야 합니다. 소스코드 js render 함수 insertAdjacentHTML을 적용해 += 복합연산자를 사용하지 않는다. setState 함수 TodoList 함수는 data를 매개변수로 받고 있기 때문에 data = nextdata로 설정해 render 함수가 문제 없이 동작하게 한다 외…","fields":{"slug":"/Mission/mission1-5/"},"frontmatter":{"categories":"Mission","title":"Js_mission - setState() 함수","date":"May 22, 2023"}},"next":{"fields":{"slug":"/Git/git_Rebase/"}},"previous":{"fields":{"slug":"/Book/Js_ch2/"}}},{"node":{"id":"b7833f51-4b85-5e05-a094-020cf75780d4","excerpt":"Git Rebase란? Git Rebase 란 말 그대로 base를 재설정한다는 의미로, 하나의 브랜치가 다른 브랜치에서 파생되서 나온 경우, 다른 브랜치에서 진행된 커밋을 다시 가져와서 base를 재설정하는 것입니다. Rebase 진행 과정 \r\n위 예제는 아래와 같은 명령으로 Rebase 한다. experiment 브랜치로 이동해 master를 base삼아 Rebase 하겠다는 의미입니다. 그러면 내부에서는 master가 base가 되고, C3과 C4의 차이를 임시 저장하는 공간에 저장합니다. 이 임시저장 공간을 라고 합니다. 그리고 base가 되는 master에 Patch들이 적용됩니다 위 내용을 정리해보면 공통 커밋(C2)에서 시작해서 현재 체크아웃한 experiment 브랜치가 가리키는 커밋까지 diff를 차례대로 만들어 Patch에 저장 experiment브랜치가 master브랜치를 가리키게 함 C3에 Patch를 순서대로 적용  마지막으로 아래 명령어로 master 브랜…","fields":{"slug":"/Git/git_Rebase/"},"frontmatter":{"categories":"Git","title":"Git Rebase에 대해서","date":"May 19, 2023"}},"next":{"fields":{"slug":"/Mission/mission1-3/"}},"previous":{"fields":{"slug":"/Mission/mission1-5/"}}},{"node":{"id":"96863b36-3811-5647-9f5a-d911aa49b151","excerpt":"필수 구현 사항 html  외의 다른 div를 두 개 더 html 코드에 만듭니다. 의 는 적당한 이름으로 지어주세요. js  외에 todo를 담고 있는 array data를 두 개 더 만듭니다. todo의 내용은 본인의 현재 todo를 담아서 넣으면 더 좋겠죠?  컴포넌트를 총 세 개 만듭니다. 첫 번째 컴포넌트에는 제가 넣어둔 data와 #todo-list에 렌더링하고, 나머지 두 개는 여러분이 추가하신 div + data를 활용해서 만들어주세요. 소스코드 html js TodoList에 id 매개변수 추가 함수에 id 매개변수를 추가해서 document.querySelector를 통해 해당 id 값을 가진 div태그에 접근한다. 각 컴포넌트에 해당되는 data가 출력이 되는걸 볼 수 있다 결과  html js 소스코드 html js TodoList에 id 매개변수 추가 결과","fields":{"slug":"/Mission/mission1-3/"},"frontmatter":{"categories":"Mission","title":"Js_mission - 다중 컴포넌트","date":"May 16, 2023"}},"next":{"fields":{"slug":"/Mission/mission1-4/"}},"previous":{"fields":{"slug":"/Git/git_Rebase/"}}},{"node":{"id":"a69ff8e1-ebdf-50b3-9a6f-5fbea858fcbb","excerpt":"필수 구현 사항 js data의 각 object에 외에  라는 필드를 추가합니다. 해당 값은 true, 혹은 false 값을 지정해주세요.  컴포넌트 내에 text 렌더링 시, isCompleted 값이 true인 경우  태그를 이용해 삭선처리를 해주는 걸 추가합니다. 소스코드 js render 함수의 isCompleted 값에 따른 삭선 추가 item.isCompleted 를 통해 true or false 값에 접근한다. if 문을 사용해 isCompleted 값이 true면  태그가 추가된다. 반대로 isCompleted 값이 false면  태그 없이 생성된다. 결과  js 소스코드 js render 함수의 isCompleted 값에 따른 삭선 추가 결과","fields":{"slug":"/Mission/mission1-4/"},"frontmatter":{"categories":"Mission","title":"Js_mission - isCompleted 추가","date":"May 16, 2023"}},"next":{"fields":{"slug":"/Mission/mission1-2/"}},"previous":{"fields":{"slug":"/Mission/mission1-3/"}}},{"node":{"id":"e84db99b-8d64-56ea-8078-3e76de87820b","excerpt":"필수 구현 사항 null 혹은 undefined의 데이터가 넘어올때의 데이터 체크 인스턴스 확인하기 배열 확인하기 소스코드 html js 인스턴스 확인 new.target은 new 연산자를 사용했는지 여부를 감지하는 것이다. new 연산자와 함께 생성자 함수로서 호출되면 함수 내부의 new.target은 함수 자신을 가리킨다. new 연산자 없이 일반 함수로서 호출된 함수 내부의 new.target은 undefined다. null or undefined 확인 data가 null or undefined가 넘어오게 되면 false로 취급하기 때문에 Not 연산자와 만나 true가 되어 if문을 실행한다. 배열 확인 파라미터로 입력받은 data가 배열인지의 여부를 boolean 값으로 리턴한다. typeof를 사용해 배열을 검사하면, typeof는 ‘object’를 리턴한다. 왜냐하면 배열은 object의 특수한 한 형태이기 때문이다. 배열이 아닐경우에 false를 리턴하고 Not 연산…","fields":{"slug":"/Mission/mission1-2/"},"frontmatter":{"categories":"Mission","title":"Js_mission - 에러 체크 하기","date":"May 15, 2023"}},"next":{"fields":{"slug":"/Mission/mission1-1/"}},"previous":{"fields":{"slug":"/Mission/mission1-4/"}}},{"node":{"id":"7a3aa6bd-d1a3-5687-b06a-130905d3f70a","excerpt":"필수 구현 사항 function style의 문법을 사용해주세요. new 키워드를 통해 생성해서 사용됩니다. 파라메터로 아래와 같은 형태의 data를 넘겨받습니다. 와 같은 형태로 파라메터를 넘기고, 생성해서 사용합니다. 해당 컴포넌트에 render 함수를 작성합니다. 이 함수는 파라메터로 넘겨받은 data를 순회하며 각 배열첨자의 text를 html string으로 만든 뒤, todo-list라는 id를 가진 div에 innerHTML을 이용해 렌더링 되도록 합니다. 이 함수는 별도의 파라메터 없이 todoList.render() 형태로 실행되도록 만듭니다. 소스코드 html js render 함수 data 객체에서 값의 순회를 위해 forEach 문을 사용하였다. data 객체 각각의 요소를 매개변수로 받아 진행한다. 위 코드에서는 2개의 변수를 받고 반복문을 2번 진행한다. item 변수는 객체 각각의 요소를 받기위한 변수로 원하는대로 지정해줘도 좋지만 일반적으로 item이라…","fields":{"slug":"/Mission/mission1-1/"},"frontmatter":{"categories":"Mission","title":"Js_mission","date":"May 15, 2023"}},"next":{"fields":{"slug":"/Book/Js_ch1/"}},"previous":{"fields":{"slug":"/Mission/mission1-2/"}}},{"node":{"id":"29f014c5-9e84-5ea1-a27d-89eba81bcaf4","excerpt":"시작! 개발자는 변수의 이름을 보고 무엇을 하는 것인지 짐작할 수 있게 만들어야 한다. 왜냐하면 코드를 읽기만 해도 프로그램을 설명할 수 있어야 하기 때문이다. 이름 설정 주의점! 모든 변수의 이름은 문자로 시작해서 문자로 끝내야 한다. 이 책에서 자바스크립트는 해서는 안 될 여러 가지를 허용한다고 쓰여 있다. 첫째로 _(밑줄)이다. 로 시작하거나 끝나는 이름들은 일반적으로 public 속성이나 전역 변수를 의미한다. 결국 변수의 앞이나 뒤에 밑줄을 쓰는 것을 개발자의 무능함을 나타내는 지표기에 우리는 절대 앞이나 뒤에 밑줄을 쓰는 일이 없도록 해야한다!! 둘째로 $(달러)기호이다. 는 코드 생성기나 트랜스파일러, 그리고 매크로 처리기에서 사용할 목적으로 추가되었다. 그래서 우리는 코드 생성기 같은 프로그램이 아닌 이상 $(달러) 기호를 사용하지 않는 것이 좋다. 셋째로 숫자가 포함된 변수이다. 순서를 나타내는 서수형 변수는  같이 이름을 짓고 양을 나타내는 기수형 변수는 와 같이…","fields":{"slug":"/Book/Js_ch1/"},"frontmatter":{"categories":"Book","title":"자바스크립트는 왜 그 모양일까 1","date":"April 18, 2023"}},"next":{"fields":{"slug":"/DOM/DOM/"}},"previous":{"fields":{"slug":"/Mission/mission1-1/"}}},{"node":{"id":"ba026110-7af8-53ce-bc77-4590d13a50bd","excerpt":"JS의 탄생 🍰 초창기 웹은 HTML,CSS만으로 이루어졌고 앵커태그를 이용해 문서 이동만 가능한 웹 문서였다. 웹과 이용자가 서로 상호작용하기 위해 HTML 요소를 조작할 수 있는 언어가 필요했다. 그래서 넷스케이프사에서 개발한 Netscape Navigator라는(LiveScript언어를 해석 할 수 있는 엔진을 탑재) 브라우저에서 동작할 수 있는\r\nLiveScript언어를 개발했고 이후 당시에 유명한 자바 프로그래밍의 이름을 따서 JavaScript 라고 이름을 변경했다.\r\n또 마이크로소프트에서는 J스크립트라는 언어와 우리가 잘 알고 있는 internet Explorer라는 브라우저를 출시했다. JavaScript와 J스크립트는 엄연히 다른 언어이기 때문에 개발자들은 각각의 브라우저에 맞게 개발을 진행해야하는 귀찮음을 마주했다.\r\n그래서 넷스케이프사는 웹 페이지에서 동작하는 언어를 표준화하기 위해 자바스크립트 기술 규격을 Ecma 인터내셔널 이라는 단체에 제출했고\r\n표준명세인…","fields":{"slug":"/DOM/DOM/"},"frontmatter":{"categories":"Js","title":"DOM에 관하여","date":"March 31, 2023"}},"next":{"fields":{"slug":"/Canvas/Canvas(2)/"}},"previous":{"fields":{"slug":"/Book/Js_ch1/"}}},{"node":{"id":"2ce2ee68-29b1-5202-ac87-803eefd25ed0","excerpt":"색상과 선 굵기 바꾸기 Html style.css app.js colorOptions  를 배열로 바꾼것은 를 사용해\r\n각각의  의  에  를 주기 위함이다.  를 사용하지 않게 되면  는 의 함수가 아니다 라는 로그를 볼 수 있을 것이다. 즉  를 사용하기위해  의 객체인\r\n 을 배열로 바꿔주어야 한다. onColorClick() 함수  통해 한 target의 색상을  로 지정  사용해 선의 색상을 지정해준다.  사용해 도형을 채우는 색상을 지정해준다.  사용해 현재 선택한 색상으로 바꿔준다. onColorOptionClick() 함수 우리가 html에서  에  를 설정한걸 기억할 것입니다.  를 통해서 우리가 click한 target의 data-color 값을 colorValue로 지정해 주었습니다. colorOptions onColorClick() 함수 onColorOptionClick() 함수","fields":{"slug":"/Canvas/Canvas(2)/"},"frontmatter":{"categories":"Js","title":"Canvas (2)","date":"March 30, 2023"}},"next":{"fields":{"slug":"/Canvas/Canvas(4)/"}},"previous":{"fields":{"slug":"/DOM/DOM/"}}},{"node":{"id":"e30fe8f5-d874-5369-b5b4-39770d2316b7","excerpt":"이미지 선택하기 Html  선택을 할때 비디오 영상인 아닌 image만 선택하기 위해서 를 사용했다. app.js onFileSelect() 함수  을 가리키는  을  으로 반환한다.  image 객체를 생성해 속성들을 추가할 수 있다.  함수 내의 명령은 웹브라우저 내의 모든 요소가 준비된 후 실행이 되도록 힌다..  라는 객체가 이미지를 불러온 후에 함수를 실행한다. Html","fields":{"slug":"/Canvas/Canvas(4)/"},"frontmatter":{"categories":"Js","title":"Canvas (4)","date":"March 30, 2023"}},"next":{"fields":{"slug":"/Canvas/Canvas(3)/"}},"previous":{"fields":{"slug":"/Canvas/Canvas(2)/"}}},{"node":{"id":"99be2776-2c76-5ea5-885e-5298e443519f","excerpt":"Fill, Draw 모드 HTML - Fill, Draw 모드 app.js btnMode() 함수 먼저 Fill 모드와 Draw 모드를 한 버튼 안에서 실행하기 위해서 버튼의 텍스트를 바꾸는 작업을 해야한다.  변수를 선언하고  를 할당한다. 버튼을 클릭할때 Fill -> Draw로 바껴야 하기 때문에 함수의 부분에  을 할당하고  을  로 바꾸어 줘야 동적인 함수가 된다. 코드를 실행해보면 버튼을 클릭할때마다 글씨가 바뀌는걸 볼 수 있을 것이다. FrillDraw() 함수  일 때는 버튼의 글씨가 인 상태이다. 그래서 우리는 이 때 그림판을 클릭했을때 지정된 색으로 그림판을 채워주면 된다. if문을 사용해서  일때 ctx.fillRect(0, 0, 800, 800)를 사용해 그림판을 채운다 Erase, Reset 모드 HTML - Erase, Reset 모드 app.js Erase 모드는 그림판을 하얀색 선으로 Draw모드를 하는 것과 같다. ctx.strokeStyle = “w…","fields":{"slug":"/Canvas/Canvas(3)/"},"frontmatter":{"categories":"Js","title":"Canvas (3)","date":"March 30, 2023"}},"next":{"fields":{"slug":"/Canvas/Canvas(1)/"}},"previous":{"fields":{"slug":"/Canvas/Canvas(4)/"}}},{"node":{"id":"d0255e0e-44f4-5225-9610-48f15aaf98b0","excerpt":"Canvas를 이용한 그림판 Html 구조 소스코드 style.css app.js (1) onMove() 함수 이 될때 를 통해 \r\nonMove함수의 참 부분이 실행된다. 함수의 event인자는 현재 click 되어지고있는 지점이다. click = mousedown 후에 mouseup이 되어야한다. mousedown = 마우스버튼 내리기 mouseup = 마우스버튼 올리기  를 통해 다음지점으로 선을 연결시킨다.  통해 연결한 선을 채운다.  이 진행될때  되서 if문의 거짓 부분을 실행해\r\n마우스가 움직이는 위치를 시작점으로 바꾼다. 오류발생 그림을 그리는 중에  을 유지한채 그림판 밖을 나갔다 들어온후에  이 됐음에도 불구하고 마우스를 움직이는 것만으로도 그림을 그릴 수 있다. 오류 해결 오류를 해결하기위해 위의 코드를 추가해주자. 이제 마우스가 그림판 밖을 벗어날때도  함수가 실행돼 오류가 해결되는걸 확인할 수 있을 것이다. Html 구조 소스코드 onMove() 함수","fields":{"slug":"/Canvas/Canvas(1)/"},"frontmatter":{"categories":"Js","title":"Canvas (1)","date":"March 30, 2023"}},"next":{"fields":{"slug":"/Git/git2/"}},"previous":{"fields":{"slug":"/Canvas/Canvas(3)/"}}},{"node":{"id":"adda7d15-e4c1-5102-874d-f6d729d1a35f","excerpt":"Branch merge 현재 작업하고 있는 branch 내용이 다른 branch에서도 필요할때 사용된다.  : 병합하기 이전의 서로 다른 branch의 공통의 부모  : 서로 다른 branch를 병합한 새로운 버전 다른 파일을 병합하는 경우 같은  파일에서 다른 부분을 병합하는 경우 원하는 내용을 원하는 branch에 병합하기 위해서 아래와 같이 진행해야 한다. 을 사용해 HEAD를 원하는 branch로 이동시켜야한다. git merge (병합할 내용의 branch명) 같은 파일에서 같은 부분을 병합하는 경우-> 충돌 위와 같은 방법으로 merge를 시도하면 conflict(충돌)가 발생한다\r\n그래서 우리는 충돌이 일어난 부분만 수동으로 수정해주면\r\n가 되는 것는 것을 확인할 수 있다. 2way merge 서로 다른 2개의 branch를 병합할때 같은 부분의 내용이 서로 다르면 충돌이 일어나게 된다. here there 설명 a a 2개의 내용이 같이 a로 병합한다 b s 충돌이 …","fields":{"slug":"/Git/git2/"},"frontmatter":{"categories":"Git","title":"Git에 대해서 (2)","date":"March 30, 2023"}},"next":{"fields":{"slug":"/Git/git/"}},"previous":{"fields":{"slug":"/Canvas/Canvas(1)/"}}},{"node":{"id":"c388d67d-9737-53ee-8980-3a16f6073053","excerpt":"버전관리 버전 생성 : 파일을 수정하는 곳 : 곧 커밋할 파일에 대한 정보를 저장하는 곳 : 만들어진 버전을 저장하는 곳이다. 즉, 우리가 저장소라가고 불리는 곳이다. : 한번도 버전 관리하지 않은 파일 : 버전을 만들기 위해 파일을 Staging Area 올린다.  -m 은 메세지의 약자이고, 뒤에 \"\"안에 공유할 메시지 내용을 적어주시면 됩니다. 파일이 Repository로 가게 된다. 즉, 버전을 생성한다.  add 되야하는 파일이 있거나 delete 된 파일이 있는 상태 일때, 알아서 add 가 진행된 후 commit 이 된다. 단 최초 한번의 add가 되어있어야 사용할 수  있다.  에서 적고자하는 메시지를 넣는걸 추가한 것이다. 와 똑같이 add가 진행된 후에 자동으로 commit이 된다.  과 git 의 차이점 은 지역저장소(local Repository)에 변경사항을 기록한다. 는 커밋된 변경사항을 원격저장소(remote Repository)에 업로드한다. 즉 은 지…","fields":{"slug":"/Git/git/"},"frontmatter":{"categories":"Git","title":"Git에 대해서 (1)","date":"March 30, 2023"}},"next":{"fields":{"slug":"/Todolist/todoCss/"}},"previous":{"fields":{"slug":"/Git/git2/"}}},{"node":{"id":"21944df0-5909-5199-a883-d05a4ef25344","excerpt":"style 마무리 소스코드 login.css \r\nred, blue, green, opcity 순으로 값을 주어 배경 색 지정 \r\n배경색을 투명하게 지정 music.css volume.css  또는  속성을 통해\r\n기본 CSS 스타일을 사용하지 않겠다고 선언해야만 위와 같은 CSS 스타일링을 반영할 수 있습니다.\r\n그렇지 않으면 맨 기본적인  처럼 보이게 됩니다. clock.css todo.css backGround.css quote.css 소스코드 login.css music.css volume.css clock.css todo.css backGround.css quote.css","fields":{"slug":"/Todolist/todoCss/"},"frontmatter":{"categories":"Js CSS","title":"TodoList (11) - style.css 마무리","date":"March 29, 2023"}},"next":{"fields":{"slug":"/Todolist/quote/"}},"previous":{"fields":{"slug":"/Git/git/"}}},{"node":{"id":"c74124b9-04a3-5dce-93a6-1d9b10738d9b","excerpt":"Quote 생성 소스코드 changeQuoute 함수 const todaysQuote = quotes[Math.floor(Math.random() * quotes.length)] 0~1사이에 난수를 생성는 Math.random을 사용 발생한 난수를 quotes 배열의 길이 만큼 곱해 0 ~ quotes.length 사이에 난수를 생성 Math.floor를 사용해 소수점 뒷자리를 반올림해 정수를 생성 소스코드 changeQuoute 함수","fields":{"slug":"/Todolist/quote/"},"frontmatter":{"categories":"Js","title":"TodoList (10) - Quote 자동 생성기","date":"March 29, 2023"}},"next":{"fields":{"slug":"/Position/position/"}},"previous":{"fields":{"slug":"/Todolist/todoCss/"}}},{"node":{"id":"aed8f6e5-4324-55e6-994e-1cf206507dea","excerpt":"position 속성 CSS에서  속성은 HTML 문서 상에서 요소가 배치되는 방식을 결정한다.  속성은 요소의 정확한 위치 지정을 위해서 , , ,  속성과 함께 사용된다 position: static position 속성을 별도로 지정해주지 않으면 기본값인 static이 적용된다 요소들이 HTML에 작성된 순서대로 브라우저 화면에 표시가 된다. 따라서 , , ,  속성값은  속성이 ****일 때는 무시된다.  위 결과를 보면 작성된 순서대로 배치 되는걸 볼 수 있다. position: relative position 속성을 relative로 설정하게 되면, 요소를 원래 위치에서 벗어나게 배치할 수 있게 된다. 요소의 위치 지정은 , , ,  속성을 이용해서 요소가 원래 위치에 있을 때의 상하좌우로 부터 얼마나 떨어지게 할지를 지정할 수 있다.  position: absolute  속성이  일 때 해당 요소는 배치 기준을 자신이 아닌 상위 요소에서 찾는다. 부모 요소(가장 가까운…","fields":{"slug":"/Position/position/"},"frontmatter":{"categories":"CSS","title":"CSS-Position","date":"March 29, 2023"}},"next":{"fields":{"slug":"/Todolist/list/"}},"previous":{"fields":{"slug":"/Todolist/quote/"}}},{"node":{"id":"8d0618df-a0bb-59b5-8be9-bc7d0bb86b6a","excerpt":"List 작성하기 구현 소스코드 handleToDoSubmit(event) 함수  javascript가 발생한 event를 함수의 첫번째 인자로 주게된다.  event의 기본 동작을 막는다 newToDo에 input의 값을 저장하고 엔터를 누를때 input을 비우기 위해  사용 newTodoObj 객체를 생성하고 text 에는 newToDo를 각 리스트의 분별력을 주기 위해서 id 값을  리스트가 작성된 시간으로 반영 할당된 객체는 toDos 배열에 채워넣는다 paintToDo()함수  li 태그 생성  생성된 li 태그의 id 값을 newTodoObj의 id로 할당 도 와 동일한 원리로 할당 휴지통 아이콘을 클릭할때 마다 해당 list를 제거하기 위해서 를 사용  를 head에 작성 \r\n-> span 태그를 생성 \r\n-> 생성된 span2의 class명을 할당 \r\n-> 생성된 span2의 Text 값을 할당  이 의 자식으로 들어가진다   이 먼저 선언되었으므로 li의 첫번째 후…","fields":{"slug":"/Todolist/list/"},"frontmatter":{"categories":"Js","title":"TodoList (9)  - List 작성","date":"March 28, 2023"}},"next":{"fields":{"slug":"/Todolist/calendar(1)/"}},"previous":{"fields":{"slug":"/Position/position/"}}},{"node":{"id":"28daca66-34d7-5c5a-af9a-26afa1bf13e1","excerpt":"Calendar 기능 구현(1)  위 사진은 바로 우리가 만들 달력의 결과물입니다. 위와 같은 달력을 만들기 위해서 처음부터 천천히 진행해 봅시다!!! 소스 코드 renderCalendar 함수 날짜 구하기  연도를 가져오는 변수 설정  월을 가져오는 변수 설정 document.querySelector(“.year-month”).textContent =  dt.getMonth는 반환 값이 현지 시간 기준 월을 나타내는 0 에서 11 사이의 정수를 반환한다 0은 1월, 1은 2월 2은 3월…을 나타내므로 해당 월 출력하기 위해서 +1을 해줘야한다 매달 마지막 요일 날짜 수가 다르기 때문에 해당되는 월의 마지막 날짜와 요일을 얻는 코드를 작성해야 합니다  다음달 마지막 날짜  이번달 마지막 날짜 지난달 날짜의 일부분과 이번달 날짜를 출력하기 위해 변수 설정 새로운 Date객체를 생성할 때, date 파라미터에 0을 전달하게 되면 지난달의 마지막 날의 Date 객체가 생성됩니다 같은 원…","fields":{"slug":"/Todolist/calendar(1)/"},"frontmatter":{"categories":"Js","title":"TodoList (6) - Calendar 기능 구현(1)","date":"March 28, 2023"}},"next":{"fields":{"slug":"/Todolist/calendar(2)/"}},"previous":{"fields":{"slug":"/Todolist/list/"}}},{"node":{"id":"c3dacda7-bf77-5c04-926d-b4f61c1e4d47","excerpt":"를 선택해 전체적인 태그들의 **margin과 padding을 없애준다 달력을 가운데 정렬하기위해서  좌우 가운데 정령을 위해  위아래 가운데 정렬을 위해서  캘린더의 크기를 설정 해 줍니다 header안에 있는 날짜와 버튼을 좌우 양쪽 정렬과 상하 가운데 정렬을 해주기 위해서  와 를 사용 그리고 버튼을 한줄로 정렬하기 위해서  사용  사용해 버튼의 선을 제거  사용해 배경색을 지정하지 않음 days 클래스에 있는 요일들을 한줄로 정렬하기 위해 사용 margin : 위 좌우 아래; 속성을 이용해서 margin 값을 줌 요일은 7개이므로 각 요일의 너비를 같게 하기위해서 100%/7의 값을 너비값으로 줌 각 날짜들의 정렬을 위해서  를 사용 아이템들의 자연스러운 줄바꿈을 위해서 을 사용 height를 고정할시 아이템의 갯수에 상관없이 주어진 픽셀에 맞춰 자연스운 줄 바꿈을 할 수 있다. 날짜도 한줄에 7개가 있어야 하므로 100%/7의 값을 너비값으로 줌  토요일과 일요일 colo…","fields":{"slug":"/Todolist/calendar(2)/"},"frontmatter":{"categories":"Js","title":"TodoList (7) - Calendar 스타일 입히기","date":"March 28, 2023"}},"next":{"fields":{"slug":"/Todolist/calendar(3)/"}},"previous":{"fields":{"slug":"/Todolist/calendar(1)/"}}},{"node":{"id":"cb54d9fe-6777-5afd-9e39-c5b96a84c900","excerpt":"Calendar 버튼 기능 구현 소스코드 preMonth() 함수 ’<’ 버튼을 누를때 이전달로 넘어가야 하기 때문에  를 이용해 현재 달에 -1 값으로 설정 재할당된 dt.setMonth를 가지고 renderCalendar() 호출 nextMonth() 함수 ’>‘버튼을 누를때 다음달로 넘어가야 하기 때문에  를 이용해 현재 달에 +1 값으로 설정 재할당된 를 가지고  호출 todaybtn() 함수 Today 버튼을 누를때 다시 현재 날짜로 돌아오기 위해 dt의 값을 로 할당해야기 때문에 초반에 dt 를 가 아닌 으로 설정한이유 소스코드 preMonth() 함수 nextMonth() 함수 todaybtn() 함수","fields":{"slug":"/Todolist/calendar(3)/"},"frontmatter":{"categories":"Js","title":"TodoList (8) - Calendar 기능 구현(2)","date":"March 28, 2023"}},"next":{"fields":{"slug":"/Boxmodel/boxmodel(1)/"}},"previous":{"fields":{"slug":"/Todolist/calendar(2)/"}}},{"node":{"id":"0b3fa8f5-d601-54ca-8cbc-1a01da72bb89","excerpt":"css box-model (1) box-model 이란? 모든 HTML의 요소는 box 모양으로 구성되어 있습니다. 박스모델은 content, padding, border, margin으로 구성되어 있습니다. 구성요소  : 텍스트나 이미지를 포함하는 실질적인 내용을 포함하는 부분  : content(내용)과 border(테두리) 사이에 위치하는 내부 여백 부분  : padding(패딩)과 margin(마진) 사이에 위치하는 테두리 부분  : 가장 바깥쪽에 위치한 외부 여백 부분 width와 height 속성 css에서 width와 height 속성을 설정할때에 가르키는 부분은 content(내용) 부분만을 가르킨다. 다른 부분인 padding, border, margin은 포함되지 않는다. width 속성 위의 코드를 실행해 보면 div태그의 길이가 body 전체의 길이를 갖는걸 볼 수 있다. width에 50%의 값을 할당하게 되면 div 태그의 길이가 절반이 되는걸 볼 수 있다…","fields":{"slug":"/Boxmodel/boxmodel(1)/"},"frontmatter":{"categories":"CSS","title":"Box model(1) - content,padding","date":"March 28, 2023"}},"next":{"fields":{"slug":"/Boxmodel/boxmodel(2)/"}},"previous":{"fields":{"slug":"/Todolist/calendar(3)/"}}},{"node":{"id":"e214294c-4b74-5ae0-8049-46747e36c789","excerpt":"border 속성 css에서 border에 제공하는 속성은 다음과 같습니다 dotted: 테두리를 점선으로 설정합니다. dashed: 테두리를 약간 긴 점선으로 설정합니다. solid: 테두리를 실선으로 설정합니다. double: 테두리를 이중선으로 설정합니다. groove: 테두리를 3차원인 입체적인 선으로 border-color에 영향을 받습니다. ridge: 테두리를 3차원인 능선효과가 있는 선으로 설정하며 border-color에 영향을 받습니다. inset: 테두리를 3차원인 내지로 끼운 선으로 설정하며 border-color에 영향을 받습니다. outset: 테두리를 3차원인 외지로 끼운 선으로 설정하며 border-color에 영향을 받습니다. none: 테투리를 없앱니다. hidden: 테투리는 존재하지만 보이지 표현하지 않습니다. border-width 속성 테두리의 두께를 설정합니다 px, em, cm등과 같은 css 크기 단위를 이용해 두께를 직접 설정 할 수 …","fields":{"slug":"/Boxmodel/boxmodel(2)/"},"frontmatter":{"categories":"CSS","title":"Box model(2) - border","date":"March 28, 2023"}},"next":{"fields":{"slug":"/Boxmodel/boxmodel(3)/"}},"previous":{"fields":{"slug":"/Boxmodel/boxmodel(1)/"}}},{"node":{"id":"15f1470d-c908-58cd-b30b-d6e54ab72550","excerpt":"margin 속성 에 대해서 은 (테두리)와 이웃하는 요소 사이의 간격인 마진 영역의 크기를 결정한다 은 과 달리 속성으로 설정하는 배경색의 영향을 받지 않는다  를 사용해 영역의 크기를 방향별로 지정할 수 있다. 에서 제공하는 속성은 다음과 같습니다.      의 값을 음수로 지정해 해당 요소를 다른 요소의 위에 겹치게 할 수 있습니다. 위에 코드를 실행하게 되면 에 을 할당해서 서로 겹치는걸 볼 수 있다 inherit 속성 에  속성을 적용해 부모인 의 margin-left 속성을 물려받는다. margin의 개별 설정 속성이 4개일때 위 코드의 적용순서와 의미는 다음과 같다 margin-top: 10px margin-right: 20px margin-bottom: 30px margint-left: 40px 속성이 3개일때 위 코드의 적용순서와 의미는 다음과 같다 margin-top: 10px margin-right: 20px margin-bottom: 30px margint-l…","fields":{"slug":"/Boxmodel/boxmodel(3)/"},"frontmatter":{"categories":"CSS","title":"Box model(3) - margin","date":"March 28, 2023"}},"next":{"fields":{"slug":"/Todolist/weather/"}},"previous":{"fields":{"slug":"/Boxmodel/boxmodel(2)/"}}},{"node":{"id":"6c1853c7-be96-54a8-9360-711e4f2e2d6a","excerpt":"API를 이용해 날씨 정보 가져오기 소스코드  장치의 현재 위치를 가져오게 됩니다 위치를 얻는데 성공하면 onGeok() 함수를 실행하고 실패시 onGeoError() 함수를 실행 API 이용 google에 openWeather -> API -> Current weather data에 접속 로그인 진행 후 영문이름을 클릭하게 되면 MY API KEYS를 통해서 Key값을 확인 onGeoOk 함수 onGeoOk() 함수의 인자는 GeolocationPosition 객체를 가져온다 GeolocationPosition 객체의 position.coords 부분을 보게 되면 위도와 경도를 확인할 수 있다 API 호출 예시를 보게 되면 https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY} 되어 있다  부분을 추가하게 되면 섭씨로된 온도를 확인할 수 있다 fetch(url) 을 통해 반환받은 …","fields":{"slug":"/Todolist/weather/"},"frontmatter":{"categories":"Js","title":"TodoList (5) -날씨 정보 가져오기","date":"March 28, 2023"}},"next":{"fields":{"slug":"/Todolist/background/"}},"previous":{"fields":{"slug":"/Boxmodel/boxmodel(3)/"}}},{"node":{"id":"7fa52e84-a261-59d3-875b-d8d962edee41","excerpt":"배경화면 바꾸기 기능 구현 소스코드 배경이미지 랜덤 생성 이미지 태그를 생성하기 위해 document.createElement(“img”) 를 사용함 createElement()에 생성하고자 하는 태그를 입력 const chosenImage = images[Math.floor(Math.random() * images.length)] 배경 선택을 랜덤으로 하기 위해서 0~1사이에 난수를 생성는 Math.random을 사용 발생한 난수를 images 배열의 길이 만큼 곱해 0 ~ images.length 사이에 난수를 생성 Math.floor를 사용해 소수점 뒷자리를 반올림해 정수를 생성 암호학적으로 안전한 난수를 발생시키지 않아 보안과 관련해서는 사용하지 말아야 한다 그 대신 Web Crypto API의 window.crypto.getRandomValues() 메소드를 이용하여야 한다. bgImage.src = img/${chosenImage} 생성된 img태그의 src를 지정 do…","fields":{"slug":"/Todolist/background/"},"frontmatter":{"categories":"Js","title":"TodoList (4)  - 배경화면 바꾸기 기능 구현","date":"March 28, 2023"}},"next":{"fields":{"slug":"/Todolist/html/"}},"previous":{"fields":{"slug":"/Todolist/weather/"}}},{"node":{"id":"dd17b795-0d17-55e6-a30d-1fdb74fdb358","excerpt":"아래에는 제가 보고 clone한 todolist 페이지 입니다!!\r\n모멘떰 HTML구조 작성 소스코드 login login_form input의 유효성을 검사하기 위해서 form 태그를 사용 clock calendar dates  js로 날짜를 대입하기 위해서 만들어 둠 style.css 기본구조 작성 box-sizing: border-box  box-sizing 에 대한 설명  높이는 100vh를 너비는 100vw를 할당 ->  는 부모 태그와는 상관없이 보이는 Viewport Height의 100%를 다 쓰겠다는 의미입니다.  ->  는 부모 태그와는 상관없이 보이는 Viewport width의 100%를 다 쓰겠다는 의미입니다. 테두리된 영역을 좌우, 상하 가운데 정렬하기 위해  를 적용하고  와  사용 main의 영역을 보면  와  두개의 역역을 나눠진다.  와  영역을 보면  의 축이 column로 되어있다.\r\n 를 적용하고  를 사용해  축을  으로 설정 body의 영역…","fields":{"slug":"/Todolist/html/"},"frontmatter":{"categories":"Js","title":"TodoList (1) - HTML 구조 및 스타일","date":"March 28, 2023"}},"next":{"fields":{"slug":"/Todolist/login/"}},"previous":{"fields":{"slug":"/Todolist/background/"}}},{"node":{"id":"bd4dc3bd-59ef-51c1-8655-a370a1c7d36e","excerpt":"login 기능 구현 소스코드 JavaScript style.css document는 js가 html에 접근하기 위해서 사용되어짐 HTML 요소의 선택은 다음과 같습니다 document.getElementsByTagName(태그이름): \r\n-> 해당 태그 이름의 요소를 모두 선택함. document.getElementById(아이디): \r\n-> 해당 아이디의 요소를 선택함. document.getElementsByClassName(클래스이름): \r\n-> 해당 클래스에 속한 요소를 모두 선택함. document.getElementsByName(name속성값): \r\n-> 해당 name 속성값을 가지는 요소를 모두 선택함.. document.querySelectorAll(선택자): \r\n-> 해당 선택자로 선택되는 요소를 모두 선택함. onLogin 함수 event.preventDefault()\r\nlogin_input.value의 값을 가져오기 위해서 \r\nform태그의 자동으로 submi…","fields":{"slug":"/Todolist/login/"},"frontmatter":{"categories":"Js","title":"TodoList (2) - Login 기능 구현","date":"March 28, 2023"}},"next":{"fields":{"slug":"/Todolist/music/"}},"previous":{"fields":{"slug":"/Todolist/html/"}}},{"node":{"id":"3abf6f40-a238-575a-bc3c-053538c53633","excerpt":"mp3 player 기능 소스코드 play 함수 mp3.loop = true : 오디오를 반복 재생함 mp3.volume = soundBtn.value 음량은 0.0 ~ 1.0 사이 값으로 지정할 수 있고, 1.0이 가장 큰 음량 자주 쓰이는 Audio 객체의 속성  audio가 load 될 때 자동재생됨  audio의 재생시점을 5초로 설정함  audio의 길이를 초(seconds) 단위로 반환  audio를 반복 재생함  audio의 경로를 지정함(URL)  audio의 음량을 0.2로 지정함\r\n음량은 0.0 ~ 1.0 사이 값으로 지정할 수 있고, 1.0이 가장 큰 음량 자주 쓰이는 Audio 객체의 메소드  오디오를 재생시킴  오디오를 일시정지함  audio를 다시 load함\r\n주로 audio의 src나 설정이 바뀌었을 경우에 사용 소스코드 play 함수 자주 쓰이는 Audio 객체의 속성 자주 쓰이는 Audio 객체의 메소드","fields":{"slug":"/Todolist/music/"},"frontmatter":{"categories":"Js","title":"TodoList (3) - MP3 기능 구현","date":"March 28, 2023"}},"next":null,"previous":{"fields":{"slug":"/Todolist/login/"}}}],"categories":["All","Algorithm","React","Git","Js","Book","Mission","CSS"]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}