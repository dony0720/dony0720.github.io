{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/Mission","result":{"pageContext":{"currentCategory":"Mission","categories":["All","Mission","Js","Book","DOM","Canvas","Git","TodoList","CSS","Box-model"],"edges":[{"node":{"id":"96863b36-3811-5647-9f5a-d911aa49b151","excerpt":"필수 구현 사항 html  외의 다른 div를 두 개 더 html 코드에 만듭니다. 의 는 적당한 이름으로 지어주세요. js  외에 todo를 담고 있는 array data를 두 개 더 만듭니다. todo의 내용은 본인의 현재 todo를 담아서 넣으면 더 좋겠죠?  컴포넌트를 총 세 개 만듭니다. 첫 번째 컴포넌트에는 제가 넣어둔 data와 #todo-list에 렌더링하고, 나머지 두 개는 여러분이 추가하신 div + data를 활용해서 만들어주세요. 소스코드 html js TodoList에 id 매개변수 추가 함수에 id 매개변수를 추가해서 document.querySelector를 통해 해당 id 값을 가진 div태그에 접근한다. 각 컴포넌트에 해당되는 data가 출력이 되는걸 볼 수 있다 결과  html js 소스코드 html js TodoList에 id 매개변수 추가 결과","fields":{"slug":"/Mission/mission1-3/"},"frontmatter":{"categories":"Mission","title":"Js_mission - 다중 컴포넌트","date":"May 16, 2023"}},"next":{"fields":{"slug":"/Mission/mission1-2/"}},"previous":null},{"node":{"id":"e84db99b-8d64-56ea-8078-3e76de87820b","excerpt":"필수 구현 사항 null 혹은 undefined의 데이터가 넘어올때의 데이터 체크 인스턴스 확인하기 배열 확인하기 소스코드 html js 인스턴스 확인 new.target은 new 연산자를 사용했는지 여부를 감지하는 것이다. new 연산자와 함께 생성자 함수로서 호출되면 함수 내부의 new.target은 함수 자신을 가리킨다. new 연산자 없이 일반 함수로서 호출된 함수 내부의 new.target은 undefined다. null or undefined 확인 data가 null or undefined가 넘어오게 되면 false로 취급하기 때문에 Not 연산자와 만나 true가 되어 if문을 실행한다. 배열 확인 파라미터로 입력받은 data가 배열인지의 여부를 boolean 값으로 리턴한다. typeof를 사용해 배열을 검사하면, typeof는 ‘object’를 리턴한다. 왜냐하면 배열은 object의 특수한 한 형태이기 때문이다. 배열이 아닐경우에 false를 리턴하고 Not 연산…","fields":{"slug":"/Mission/mission1-2/"},"frontmatter":{"categories":"Mission","title":"Js_mission - 에러 체크 하기","date":"May 15, 2023"}},"next":{"fields":{"slug":"/Mission/mission1-1/"}},"previous":{"fields":{"slug":"/Mission/mission1-3/"}}},{"node":{"id":"7a3aa6bd-d1a3-5687-b06a-130905d3f70a","excerpt":"필수 구현 사항 function style의 문법을 사용해주세요. new 키워드를 통해 생성해서 사용됩니다. 파라메터로 아래와 같은 형태의 data를 넘겨받습니다. 와 같은 형태로 파라메터를 넘기고, 생성해서 사용합니다. 해당 컴포넌트에 render 함수를 작성합니다. 이 함수는 파라메터로 넘겨받은 data를 순회하며 각 배열첨자의 text를 html string으로 만든 뒤, todo-list라는 id를 가진 div에 innerHTML을 이용해 렌더링 되도록 합니다. 이 함수는 별도의 파라메터 없이 todoList.render() 형태로 실행되도록 만듭니다. 소스코드 html js render 함수 data 객체에서 값의 순회를 위해 forEach 문을 사용하였다. data 객체 각각의 요소를 매개변수로 받아 진행한다. 위 코드에서는 2개의 변수를 받고 반복문을 2번 진행한다. item 변수는 객체 각각의 요소를 받기위한 변수로 원하는대로 지정해줘도 좋지만 일반적으로 item이라…","fields":{"slug":"/Mission/mission1-1/"},"frontmatter":{"categories":"Mission","title":"Js_mission","date":"May 15, 2023"}},"next":{"fields":{"slug":"/Book/Js_ch1/"}},"previous":{"fields":{"slug":"/Mission/mission1-2/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}