{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/React","result":{"pageContext":{"currentCategory":"React","categories":["All","프로그래머스","Algorithm","Git","React","Js","Book","Mission","CSS"],"edges":[{"node":{"id":"50b96a3d-78a9-51e5-be4c-695f651a578c","excerpt":"MUI란? Material-UI (mui)는 웹 애플리케이션을 빌드하기 위한 리액트 기반의 UI 프레임워크이다. Google이 2014년 안드로이드 스마트폰에 적용하면서 알려졌으며, Material Design을 기반으로하였기에 시각적으로 훌륭하고 사용하기 쉽다. 때문에 개발자들도 스타일리쉬한 쉬운 사용자 인터페이스를 개발을 손쉽게 할 수 있다. 이러한 Material-UI는 컴포넌트 기반 아키텍처를 사용하여 재사용 가능하고 일관된 디자인 요소를 구축하도록 한다. 특징 1. CSS-in-JS 다른 UI 라이브러리들과 마찬가지로, js에서 css를 관리하는 방식으로 스타일링한다. 이는 컴포넌트별로 스타일을 정의하고 적용하는데 유용하다. 2. 컴포넌트 기반 mui는 다양한 UI 요소를 컴포넌트 형태로 제공하며, 이러한 컴포넌트를 조합하여 원하는 인터페이스를 구성할 수 있다. 3. 반응형 디자인 mui 컴포넌트는 다양한 화면 크기와 장치에 맞게 반응한다. 모바일 기기부터 데스크톱까지 일…","fields":{"slug":"/React/Mui/"},"frontmatter":{"categories":"React","title":"MUI에 대해서","date":"March 26, 2024"}},"next":{"fields":{"slug":"/Algorithm/problem기초(4-5)/"}},"previous":{"fields":{"slug":"/Git/git_checkout-t/"}}},{"node":{"id":"9d0cf539-e739-51f6-ad04-da22b6de0d35","excerpt":"Create React App Create React App은 단일 페이지의 React 앱을 만들 위한 방법입니다. 프로젝트 생성을 위한 조건 프로젝트를 생성하기 위해서는 Node.js가 설치되어 있어야 한다. 버전은 각 os에 맞는 recommand 버전을 다운 받으면 된다. 터미널을 열고 아래와 같이 명령어를 입력해 설치된 Node.js의 버전을 확인한다. 프로젝트 생성 과정 터미널을 열고 아래 명령어를 입력 하면 react-test라는 폴더가 생성된다.  아래 명령어를 입력해 vscode에서 폴더 열기 vscode에서 터미널을 열어 아래 명령어를 입력하면 localhost 3000; 이라는 내 컴퓨터의 포트 번호 3000번 서버에서 리액트 앱이 실행된다. 프로젝트 진행 프로젝트를 진행하기 전에 src폴더에는 App.js와 index.js를 제외한 나머지 파일들을 삭제하고 시작한다. App.js useEffect useEffect 함수는 리액트 컴포넌트 렌더링 될때마다 특정 작…","fields":{"slug":"/React/React (4)/"},"frontmatter":{"categories":"React","title":"React (4)","date":"December 28, 2023"}},"next":{"fields":{"slug":"/React/React (3)/"}},"previous":{"fields":{"slug":"/Algorithm/problem기초(1-1)/"}}},{"node":{"id":"df3fe557-b530-571c-8c21-6768a19839df","excerpt":"Props란? 부모 컴포넌트로부터 자식 컴포넌트에게 데이터를 보내주는 방법 객체이다. 어떤 prop들을 받는지 검사하게끔 도와주는 역할을 한다. Btn 컴포넌트 함수 props는 객체이기 때문에 { }열어 원하는 속성을 바로 받을 수 있음 { }를 사용하지 않게 되면 props.text, props.fontSize의 방식으로 값에 접근해야한다. text prop은 string 형태의 데이터, fontSize는 number 형태의 데이터가 아닐시 동작은 되지만 콘솔 창에 올바른 형태의 데이터가 아니라고 경고를 알려준다. App 컴포넌트 함수 어떠한 것들을 컴포넌트 안에 넣든간에 HTML안에 영향을 주지 않고 prop이 된다. 컴포넌트 함수에 해당 prop을 등록하고 작성해야만 한다. 전달된 prop들은 하나의 오브젝트로 받게된다. prop을 전달할때의 이름과 받아서 사용할때의 이름은 동일해야한다. props와 stata의 차이점 props: 함수의 매개변수처럼 컴포넌트에 전달된다. …","fields":{"slug":"/React/React (3)/"},"frontmatter":{"categories":"React","title":"React (3)","date":"December 26, 2023"}},"next":{"fields":{"slug":"/React/React (2)/"}},"previous":{"fields":{"slug":"/React/React (4)/"}}},{"node":{"id":"f7270129-4e87-5562-9ee6-cc5bd1d9c387","excerpt":"MinutesToHours 컴포넌트 함수 배열 비구조화 할당 amount는 React.useState(0)을 사용해 초기값을 0으로 설정, flipped는 React.useState(false) 초기값을 false로 설정 하게된다. setAmount, setFliped 함수는 amount와 flipped의 값을 업데이트 할때 사용된다. setFliped(counter + 1)로 로직을 만들 경우 counter는 state를 할당한 값만 참조한다. 즉, setFliped를 여러번 호출하게 되면 값이 항상 2가 된다. 하지만 setFliped((current) => !current)로 로직을 만들 경우 current에는 useStete의 state자체를 참조한다. 여러번 함수를 호출하게 되면 값을 업데이트해서 반영한다. React에서는 Jsx문법을 Javascript로 변환하기 때문에 따로 Javascript를 쓰기 위해서는 {}를 사용해 주어야 한다. App 컴포넌트 함수 Minut…","fields":{"slug":"/React/React (2)/"},"frontmatter":{"categories":"React","title":"React (2)","date":"December 26, 2023"}},"next":{"fields":{"slug":"/React/React (1)/"}},"previous":{"fields":{"slug":"/React/React (3)/"}}},{"node":{"id":"72f8fe2e-0564-554e-bc0e-605eaa6ab934","excerpt":"React Js란? React JS는 기본적으로 Facebook에서 구축하고 유지 관리하는 JavaScript 라이브러리입니다. 또한 웹 애플리케이션의 간단하고 빠르며 확장 가능한 프런트엔드를 구축하기 위한 효율적이고 선언적이며 유연한 오픈 소스 JavaScript 라이브러리입니다. Jxs란? JavaScript에 XML을 추가하여 확장한 문법이다. React Js 필요한 스크립트 태크 React Js를 설치하기 위한 JavaScript 코드 Jsx 문법을 브라우저가 이해할 수 있는 형태로 변환하기 위해 필요하다 컴포넌트 작성 함수형 컴포넌트 선언 렌더링 Container에 Title과 Button을 포함시키기 위해서는 function으로 만들어주어야 함 선언한 컴포넌트를 불러오기 위해서는  형태로 작성해주면 된다. 작성한 jsx를 화면에 렌더링하기 위한 함수 컴포넌트를 페이지에 렌더링하는 역할을 하며, react-dom 모듈을 불러와야 사용가능하다. 는 Jsx로 작성된 컴포넌트를…","fields":{"slug":"/React/React (1)/"},"frontmatter":{"categories":"React","title":"React (1)","date":"November 02, 2023"}},"next":{"fields":{"slug":"/Git/git_commitMessage/"}},"previous":{"fields":{"slug":"/React/React (2)/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}