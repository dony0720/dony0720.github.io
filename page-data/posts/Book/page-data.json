{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/Book","result":{"pageContext":{"currentCategory":"Book","categories":["All","Git","React","Algorithm","Js","Book","Mission","CSS"],"edges":[{"node":{"id":"523c0212-fde0-5aed-afff-33e84747c659","excerpt":"number 자바스크립트는 라고 하는 하나의 숫자형을 가지고 있습니다. number는 인텔의 iAPX-432 프로세서를 위해 처음 개발된 IEEE 부동소수점 연산 표준 (IEEE 754)을 차용했습니다. 자바스크립트는 숫자형이 하나뿐 이라는 단점을 가지고 있다고 비판 받았지만 오히려 개발자의 생산성을 증가시키게 되었습니다. 왜냐하면 비슷한 여러가지 타입 중 잘못된 타입을 사용할까 봐 고민하며 시간을 낭비하지 않아도 되기 때문입니다. 숫자 0 자바스크립트에는 0으로 표시되지만 0이 아닌 값이 있습니다다. IEEE 754 표준에는 0과 -0 이라는 두 개의 0이 존재하고 다음 경우를 제외하고는 -0의 존재를 무시해도 됩니다. 숫자 리터럴 숫자 리터럴은 각 리터럴의 값과 가장 잘 맛는 숫자 객체에 대한 참조를 생성합니다 어떤경우네는 딱 맞는 값이고 어떤 경우에는 실제 값과 미세한 차이가 나기도 합니다. NaN 은 숫자가 아닌 숫자를 나타내는 값 입니다. 은 를 의미하고 typeof 연산…","fields":{"slug":"/Book/Js_ch2/"},"frontmatter":{"categories":"Book","title":"자바스크립트는 왜 그 모양일까 2","date":"June 05, 2023"}},"next":{"fields":{"slug":"/Book/Js_ch3_4_5/"}},"previous":{"fields":{"slug":"/Js/nullish/"}}},{"node":{"id":"62dd5126-3f85-526c-bb99-3662192a0689","excerpt":"큰 정수 자바스크립트의 큰 단점 중 하나는 64비트 정수가 없다는 것입니다. int64형은 최대 923372036854775807까지의 정수를 담을 수 있는데 이것은 자바스크립트의 Number.MAX SAFE INTEGER 범위인 90071992547409에\r\n벗어납니다. 숫자형 추가의 문제점 그렇다면 다른 언어들이 여러개의 숫자형을 가지고 있는 것처럼 자바스크립트에도 추가하는 생각이 들 수 있겠지만 문제가 있습니다. 그 이유는 단순성을 잃게 되고, 잠재적을 다른 버그를 초래할 가능성이 커지게 되기 때문입니다. 모든 자료형 선언과 자료형 변환은 잠재적인 오류입니다. 이 책에서는 큰 정수를 언어에 내장하는것 대신에 라이브러리 형태로 제공했어야 한다고 말합니다. 언어를 사용하는 대부분의 사용자는 큰 정수를 사용하지 않고 큰 정수는 현재의 숫자형으로 풀 수 없는 가장 큰 문제를 해결해 주지도 못하기 때문입니다. 큰 부동소수점 부동소수점 시스템은 세 가지\t숫자,즉 계수(coefHCient…","fields":{"slug":"/Book/Js_ch3_4_5/"},"frontmatter":{"categories":"Book","title":"자바스크립트는 왜 그 모양일까 3","date":"June 05, 2023"}},"next":{"fields":{"slug":"/Mission/mission1-5/"}},"previous":{"fields":{"slug":"/Book/Js_ch2/"}}},{"node":{"id":"29f014c5-9e84-5ea1-a27d-89eba81bcaf4","excerpt":"시작! 개발자는 변수의 이름을 보고 무엇을 하는 것인지 짐작할 수 있게 만들어야 한다. 왜냐하면 코드를 읽기만 해도 프로그램을 설명할 수 있어야 하기 때문이다. 이름 설정 주의점! 모든 변수의 이름은 문자로 시작해서 문자로 끝내야 한다. 이 책에서 자바스크립트는 해서는 안 될 여러 가지를 허용한다고 쓰여 있다. 첫째로 _(밑줄)이다. 로 시작하거나 끝나는 이름들은 일반적으로 public 속성이나 전역 변수를 의미한다. 결국 변수의 앞이나 뒤에 밑줄을 쓰는 것을 개발자의 무능함을 나타내는 지표기에 우리는 절대 앞이나 뒤에 밑줄을 쓰는 일이 없도록 해야한다!! 둘째로 $(달러)기호이다. 는 코드 생성기나 트랜스파일러, 그리고 매크로 처리기에서 사용할 목적으로 추가되었다. 그래서 우리는 코드 생성기 같은 프로그램이 아닌 이상 $(달러) 기호를 사용하지 않는 것이 좋다. 셋째로 숫자가 포함된 변수이다. 순서를 나타내는 서수형 변수는  같이 이름을 짓고 양을 나타내는 기수형 변수는 와 같이…","fields":{"slug":"/Book/Js_ch1/"},"frontmatter":{"categories":"Book","title":"자바스크립트는 왜 그 모양일까 1","date":"April 18, 2023"}},"next":{"fields":{"slug":"/DOM/DOM/"}},"previous":{"fields":{"slug":"/Mission/mission1-1/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}