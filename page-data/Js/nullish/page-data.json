{"componentChunkName":"component---src-templates-blog-template-js","path":"/Js/nullish/","result":{"data":{"cur":{"id":"eb6588d5-d49b-544a-aab2-f30747ffc954","html":"<h1 id=\"nullish란\" style=\"position:relative;\"><a href=\"#nullish%EB%9E%80\" aria-label=\"nullish란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Nullish란</h1>\n<p>nullish 병합 연산자 (??) 는 왼쪽 피연산자가 <code class=\"language-text\">null</code> 또는 <code class=\"language-text\">undefined</code>일 때 오른쪽 피연산자를 반환하고,<br>\n그렇지 않으면 왼쪽 피연산자를 반환하는 논리 연산자이다.</p>\n<p>a ?? b의 평가 결과는 다음과 같습니다.</p>\n<ul>\n<li>a가 null도 아니고 undefined도 아니면 a</li>\n<li>그 외의 경우는 b</li>\n</ul>\n<p>nullish 병합 연산자 ??없이 x = a ?? b와 동일한 동작을 하는 코드를 작성하면 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">x = (a !== null &amp;&amp; a !== undefined) ? a : b;</code></pre></div>\n<p>다른 예시를 보겠습니다!!</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">let firstName = null;\r\nlet lastName = null;\r\nlet nickName = \"바이올렛\";\r\n\r\n// null이나 undefined가 아닌 첫 번째 피연산자를 출력한다\r\nconsole.log(firstName ?? lastName ?? nickName ?? \"익명의 사용자\"); // 바이올렛</code></pre></div>\n<p>지금은 firstName, lastName 이 <code class=\"language-text\">null</code> 이기 때문에 nickName을 반환합니다.<br>\n하지만 nickName까지 null 또는 undefined면 “익명의 사용자”가 반환되겠죠?</p>\n<h2 id=\"와-의-차이\" style=\"position:relative;\"><a href=\"#%EC%99%80-%EC%9D%98-%EC%B0%A8%EC%9D%B4\" aria-label=\"와 의 차이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>”??“와 ”||“의 차이</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">let height = 0;\r\n\r\nconsole.log(height || 100); // 100\r\nconsole.log(height ?? 100); // 0 \r\n</code></pre></div>\n<h3 id=\"height--100-결과\" style=\"position:relative;\"><a href=\"#height--100-%EA%B2%B0%EA%B3%BC\" aria-label=\"height  100 결과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>height || 100 결과</h3>\n<p>height에 0을 할당했지만 0을 falsy 한 값으로 취급했기 때문에 null이나 undefined를<br>\n할당한 것과 동일하게 처리합니다. 따라서 height || 100의 평가 결과는 100입니다.</p>\n<h3 id=\"height--100-결과-1\" style=\"position:relative;\"><a href=\"#height--100-%EA%B2%B0%EA%B3%BC-1\" aria-label=\"height  100 결과 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>height ?? 100 결과</h3>\n<p>height가 정확하게 null이나 undefined일 경우에만 100이 됩니다.<br>\n예시에선 height에 0이라는 값을 할당했기 때문에 콘솔창에 0이 출력됩니다.</p>\n<p>이런 특징 때문에 높이처럼 0이 할당될 수 있는 변수를 사용해서 기능을 개발할 땐<br>\n||보다 ??가 적합합니다.</p>\n<h2 id=\"연산자-우선순위\" style=\"position:relative;\"><a href=\"#%EC%97%B0%EC%82%B0%EC%9E%90-%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84\" aria-label=\"연산자 우선순위 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>연산자 우선순위</h2>\n<p>??의 연산자 우선순위는 5로 꽤 낮습니다.</p>\n<p>따라서 ??는 =와 ? 보다는 먼저, 대부분의 연산자보다는 나중에 평가됩니다.</p>\n<p>그렇기 때문에 복잡한 표현식 안에서 ??를 사용해 값을 하나 선택할 땐<br>\n괄호를 추가하는 게 좋습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">let height = null;\r\nlet width = null;\r\n\r\n// 괄호를 추가!\r\nlet area = (height ?? 100) * (width ?? 50);\r\n\r\nalert(area); </code></pre></div>\n<p>그렇지 않으면 *가 ??보다 우선순위가 높기 때문에 *가 먼저 실행 아래와 같게 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">let area = height ?? (100 * width) ?? 50;</code></pre></div>\n<h2 id=\"no-chaining-with-and-or-or-operators\" style=\"position:relative;\"><a href=\"#no-chaining-with-and-or-or-operators\" aria-label=\"no chaining with and or or operators permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>No chaining with AND or OR operators</h2>\n<p>AND (&#x26;&#x26;) 와 OR 연산자 (||)를 ??와 직접적으로 결합하여 사용하는 것은 불가능하다.<br>\n이 경우 <code class=\"language-text\">SyntaxError</code>가 발생된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">null || undefined ?? \"foo\"; // SyntaxError 발생\r\ntrue || undefined ?? \"foo\"; // SyntaxError 발생</code></pre></div>\n<p>위와 같은 상황을 해결하고 위해서 우선 순위를 명시적으로 나타내 괄호를 사용하면 된다</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(null || undefined ) ?? \"foo\"; // \"foo\" 반환 </code></pre></div>\n<p>참고 : <a href=\"https://ko.javascript.info/nullish-coalescing-operator\">https://ko.javascript.info/nullish-coalescing-operator</a><br>\n참고 : <a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing\">https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing</a></p>","excerpt":"Nullish란 nullish 병합 연산자 (??) 는 왼쪽 피연산자가  또는 일 때 오른쪽 피연산자를 반환하고, 그렇지 않으면 왼쪽 피연산자를 반환하는 논리 연산자이다. a ?? b의 평가 결과는 다음과 같습니다. a가 null도 아니고 undefined도 아니면 a 그 외의 경우는 b nullish 병합 연산자 ??없이 x = a ?? b와 동일한 동작을 하는 코드를 작성하면 다음과 같습니다. 다른 예시를 보겠습니다!! 지금은 firstName, lastName 이  이기 때문에 nickName을 반환합니다. 하지만 nickName까지 null 또는 undefined면 “익명의 사용자”가 반환되겠죠? ”??“와 ”||“의 차이 height || 100 결과 height에 0을 할당했지만 0을 falsy 한 값으로 취급했기 때문에 null이나 undefined를 할당한 것과 동일하게 처리합니다. 따라서 height || 100의 평가 결과는 100입니다. height ?? 100…","frontmatter":{"date":"June 09, 2023","title":"Nullish 병합 연산자 (??)","categories":"Js","author":"Js","emoji":"📝"},"fields":{"slug":"/Js/nullish/"}},"next":{"id":"523c0212-fde0-5aed-afff-33e84747c659","html":"<h1 id=\"number\" style=\"position:relative;\"><a href=\"#number\" aria-label=\"number permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>number</h1>\n<p>자바스크립트는 <code class=\"language-text\">number</code>라고 하는 하나의 숫자형을 가지고 있습니다.<br>\nnumber는 인텔의 iAPX-432 프로세서를 위해 처음 개발된 IEEE 부동소수점<br>\n연산 표준 (IEEE 754)을 차용했습니다. 자바스크립트는 숫자형이 하나뿐 이라는 단점을<br>\n가지고 있다고 비판 받았지만 오히려 개발자의 생산성을 증가시키게 되었습니다.<br>\n왜냐하면 비슷한 여러가지 타입 중 잘못된 타입을 사용할까 봐 고민하며<br>\n시간을 낭비하지 않아도 되기 때문입니다.</p>\n<h2 id=\"숫자-0\" style=\"position:relative;\"><a href=\"#%EC%88%AB%EC%9E%90-0\" aria-label=\"숫자 0 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>숫자 0</h2>\n<p>자바스크립트에는 0으로 표시되지만 0이 아닌 값이 있습니다다.<br>\nIEEE 754 표준에는 0과 -0 이라는 두 개의 0이 존재하고<br>\n다음 경우를 제외하고는 -0의 존재를 무시해도 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(1 / 0) === (1 / -0) // false   \r\nObject.is(0 , -0) // false  </code></pre></div>\n<h2 id=\"숫자-리터럴\" style=\"position:relative;\"><a href=\"#%EC%88%AB%EC%9E%90-%EB%A6%AC%ED%84%B0%EB%9F%B4\" aria-label=\"숫자 리터럴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>숫자 리터럴</h2>\n<p>숫자 리터럴은 각 리터럴의 값과 가장 잘 맛는 숫자 객체에 대한 참조를 생성합니다<br>\n어떤경우네는 딱 맞는 값이고 어떤 경우에는 실제 값과 미세한 차이가 나기도 합니다.</p>\n<h2 id=\"nan\" style=\"position:relative;\"><a href=\"#nan\" aria-label=\"nan permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NaN</h2>\n<p><code class=\"language-text\">NaN</code>은 숫자가 아닌 숫자를 나타내는 값 입니다.<br>\n<code class=\"language-text\">NaN</code>은 <code class=\"language-text\">\"Not a Number\"</code>를 의미하고 typeof 연산자는<br>\n<code class=\"language-text\">NaN</code>을 <code class=\"language-text\">\"number\"</code> 형으로 표시되어 매우 헷갈린다.</p>\n<p><code class=\"language-text\">NaN</code>은 문자열을 숫자로 변환하려고 했으나 실패했을 때 결과값을 반환될 수 있다.<br>\n변환에 실패한 경우 오류가 발생하거나 프로그램이 멈추는 대시 <code class=\"language-text\">NaN</code>이 반환된다.<br>\n산술 연산자 입력 중에도 <code class=\"language-text\">NaN</code>이 있어도 결과값으로 <code class=\"language-text\">NaN</code>을 반환한다.</p>\n<p><code class=\"language-text\">NaN</code>은 자바스크립트가 숨기지 않은 IEEE 754의 단점인 부분이다.<br>\n<code class=\"language-text\">NaN</code> 과 <code class=\"language-text\">NaN</code>을 동등 연산자로 비교해 보면 서로 다른 결과를 보여주기 때문이다.<br>\n테스트의 기댓값이 <code class=\"language-text\">NaN</code>이고 실제 값이 <code class=\"language-text\">NaN</code>이라고 해도 항상 실패하게 된다.<br>\n그래서 값이 <code class=\"language-text\">NaN</code>인지 아닌지를 확인하기 위해서는 <code class=\"language-text\">Number.isNaN(value)</code>을 사용해 보면 된다.</p>\n<h2 id=\"number-1\" style=\"position:relative;\"><a href=\"#number-1\" aria-label=\"number 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Number</h2>\n<p><code class=\"language-text\">Number</code>는 숫자를 만드는 함수입니다. 여기서 주의할 점은 수에 대한 <code class=\"language-text\">typeof</code> 연사자는<br>\n<code class=\"language-text\">\"number\"</code>를 반환하는데 이 둘은 엄연히 다르고 헷갈리시면 안됩니다!</p>\n<p>NUMBER.MAX_SAFE_INTEGER는 약 9천조입니다. 자바스크립트의 숫자형은<br>\nNumber.MAX_SAFE_INTEGER까지의 모든 정수형을 표현할 수 있어 다른 정수형\r\n타입이 필요 없다.</p>\n<p>Number.MAX_SAFE_INTEGER보다 큰 수에 1을 더하는 것은 0을 더하는 것이나 같다.\r\n-Number.MAX_SAFE_INTEGER와 Number.MAX_SAFE_INTEGER 사이의<br>\n정수 값인 경우에만 올바른 정수 연산을 할 수 있습니다.<br>\n이 범위 내에서는 일반적인 수학적 연산, 결합법칙, 분배법칙이 적용 된다.<br>\n만약 이 범위를 벗어나는 경우에는 더하는 순서에 따라 값이 바뀔 수도 있다.</p>","frontmatter":{"date":"June 05, 2023","title":"자바스크립트는 왜 그 모양일까 Chapter(2) 숫자","categories":"Js Book","author":"Js","emoji":"📚"},"fields":{"slug":"/Book/Js_ch2/"}},"prev":{"id":"48692518-edfd-5930-99ee-82e2f71732f8","html":"<h1 id=\"git-커밋-메시지는-왜-중요할까\" style=\"position:relative;\"><a href=\"#git-%EC%BB%A4%EB%B0%8B-%EB%A9%94%EC%8B%9C%EC%A7%80%EB%8A%94-%EC%99%9C-%EC%A4%91%EC%9A%94%ED%95%A0%EA%B9%8C\" aria-label=\"git 커밋 메시지는 왜 중요할까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Git 커밋 메시지는 왜 중요할까</h1>\n<p>잘 만든 커밋 메시지는 다른 개발자에게 변경 사항을 전달하는\r\n가장 쉽고 간편한 방법이기 때문입니다. 그래서 기업의 대규모 프로젝트는\r\n당연하고 협력의 비중이 낮은 소규모의 사이드 프로젝트에서도\r\n커밋 컨벤션을 따로 만들어서 규칙을 지키기도 합니다.</p>\n<h2 id=\"커밋-컨벤션이란\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%B0%8B-%EC%BB%A8%EB%B2%A4%EC%85%98%EC%9D%B4%EB%9E%80\" aria-label=\"커밋 컨벤션이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커밋 컨벤션이란?</h2>\n<p>git 커밋 메시지 컨벤션(Git Commit Message Convention)이란\r\n프로젝트 참여자들이 일관된 형식의 커밋 메시지를 작성하기 위한 규칙을 말합니다.\r\n현재 여러 개발자 사이에서 관습적으로 통용되는 가이드라인이 있지만,\r\n각 프로젝트에 따라서 별도의 규칙을 만들어 적용하기도 한다고 합니다.</p>\n<h2 id=\"커밋-메시지를-왜-사용할까요\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%B0%8B-%EB%A9%94%EC%8B%9C%EC%A7%80%EB%A5%BC-%EC%99%9C-%EC%82%AC%EC%9A%A9%ED%95%A0%EA%B9%8C%EC%9A%94\" aria-label=\"커밋 메시지를 왜 사용할까요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커밋 메시지를 왜 사용할까요?</h2>\n<p>git에서 변경 사항을 저장하기 전에 수많은 변경 사항을 적용했을 수 있으므로\r\n저장할 변경 사항을 git에 알려야 합니다. 가장 좋은 방법은 커밋 메시지를 추가하여\r\n변경 사항을 식별하는 것이기 때문에 커밋 메시지를 사용합니다.</p>\n<h2 id=\"커밋-메시지를-잘-작성해야-하는-이유는-무엇인가요\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%B0%8B-%EB%A9%94%EC%8B%9C%EC%A7%80%EB%A5%BC-%EC%9E%98-%EC%9E%91%EC%84%B1%ED%95%B4%EC%95%BC-%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\" aria-label=\"커밋 메시지를 잘 작성해야 하는 이유는 무엇인가요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커밋 메시지를 잘 작성해야 하는 이유는 무엇인가요?</h2>\n<ol>\n<li>커뮤니케이션의 효율성 증대</li>\n</ol>\n<ul>\n<li>일관적이고 명확한 커밋 메시지는 다른 개발자가 더 쉽게 이해하도록 돕기 때문에<br>\n서로의 작업에 대한 이해도를 높이고 프로젝트 관리와 협업에 중요한 역할을 합니다.</li>\n</ul>\n<ol start=\"2\">\n<li>문제 해결 속도 향상</li>\n</ol>\n<ul>\n<li>시간이 지남에 따라 코드베이스는 매우 복잡해질 수 있습니다.<br>\n적절한 커밋 메시지 규칙은 메인테이너가 코드를 이해하는 데 도움이 되며<br>\n향후 변경 사항을 더 쉽게 만들 수 있습니다. 또 문제를 더 쉽게 디버깅할 수 있고 문제가 발견되면<br>\n개발자는 커밋 메시지를 사용하여 언제 어디서 문제가 발생했는지 식별할 수 있다는 장점이 있습니다.</li>\n</ul>\n<ol start=\"3\">\n<li>문서화의 기능</li>\n</ol>\n<ul>\n<li>적절한 커밋 메시지 규칙은 코드베이스 변경 내역을 제공하는 문서 역할을 할 수 있습니다.<br>\n잘 만든 git 커밋 메시지는 해당 프로젝트에서 작업하는 다른 개발자와 미래의 자신에게<br>\n변경 사항을 전달하는 가장 좋은 방법입니다.</li>\n</ul>\n<h2 id=\"커밋-메세지-작성법\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%B0%8B-%EB%A9%94%EC%84%B8%EC%A7%80-%EC%9E%91%EC%84%B1%EB%B2%95\" aria-label=\"커밋 메세지 작성법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커밋 메세지 작성법</h2>\n<ol>\n<li>앞단에 어떤 내용을 담은 커밋인지 커밋 유형을 지정합니다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- Feat: 특정 애플리케이션에 추가하는 새로운 기능\r\n\r\n- Fix : 버그 수정\r\n\r\n- Style : 코드 포맷팅, 코드 오타, 함수명 수정 등 스타일 수정\r\n\r\n- Refactor : 코드 리팩토링(똑같은 기능인데 코드만 개선)\r\n\r\n- Comment: 주석 수정 및 삭제\r\n\r\n- Docs : 문서와 관련된 모든 것\r\n\r\n- Chore : 정기적인 코드 유지 관리</code></pre></div>\n<ol start=\"2\">\n<li>다른 사람을 배려하기 위해서 자세하게 커밋 메시지를 작성합니다.</li>\n</ol>\n<p>이때 commit body를 사용하면 세부적인 내용을 적을 수 있습니다.<br>\n이는 동료 개발자가 변경 사항을 더 잘 이해하는데 도움됩니다.</p>\n<ol start=\"3\">\n<li>\n<p>커밋 메세지는 명령하거나 요청하는 어조를 사용합니다.</p>\n</li>\n<li>\n<p>불필요한 구두점 제거합니다.</p>\n</li>\n<li>\n<p>팀에서 정의한 ‘커밋 컨벤션’을 따릅니다.</p>\n</li>\n</ol>\n<p>참고 : <a href=\"https://insight.infograb.net/blog/2023/04/21/why-commit-convention-is-important/#%EC%BB%A4%EB%B0%8B-%EB%A9%94%EC%8B%9C%EC%A7%80%EB%A5%BC-%EC%9E%98-%EC%9E%91%EC%84%B1%ED%95%B4%EC%95%BC-%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\">https://insight.infograb.net/blog/2023/04/21/why-commit-convention-is-important/#%EC%BB%A4%EB%B0%8B-%EB%A9%94%EC%8B%9C%EC%A7%80%EB%A5%BC-%EC%9E%98-%EC%9E%91%EC%84%B1%ED%95%B4%EC%95%BC-%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94</a></p>","frontmatter":{"date":"June 09, 2023","title":"Git 커밋 메시지의 중요성","categories":"Git","author":"Js","emoji":"📝"},"fields":{"slug":"/Git/git_commitMessage/"}},"site":{"siteMetadata":{"siteUrl":"https://github.com/dony0720","comments":{"utterances":{"repo":"dony0720/dony0720.github.io"}}}}},"pageContext":{"slug":"/Js/nullish/","nextSlug":"/Book/Js_ch2/","prevSlug":"/Git/git_commitMessage/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}