{"componentChunkName":"component---src-templates-blog-template-js","path":"/Todolist/background/","result":{"data":{"cur":{"id":"7fa52e84-a261-59d3-875b-d8d962edee41","html":"<h1 id=\"배경화면-바꾸기-기능-구현\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EA%B2%BD%ED%99%94%EB%A9%B4-%EB%B0%94%EA%BE%B8%EA%B8%B0-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84\" aria-label=\"배경화면 바꾸기 기능 구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배경화면 바꾸기 기능 구현</h1>\n<h2 id=\"소스코드\" style=\"position:relative;\"><a href=\"#%EC%86%8C%EC%8A%A4%EC%BD%94%EB%93%9C\" aria-label=\"소스코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소스코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> images <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"1.jpg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"2.jpg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"3.jpg\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"4.jpg\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"5.jpg\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> bgImage <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"img\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//img 태그 생성 </span>\r\n<span class=\"token keyword\">const</span> changeBtn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".changeBackgroud\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\nchangeBtn<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> changeBackgroud<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> chosenImage <span class=\"token operator\">=</span> images<span class=\"token punctuation\">[</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> images<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\nbgImage<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">img/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>chosenImage<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\r\ndocument<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>bgImage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">changeBackgroud</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> chosenImage <span class=\"token operator\">=</span> images<span class=\"token punctuation\">[</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> images<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token comment\">/*\r\n    Math.floor 반올림, Math.random -> 0~1 범위 내에서 무작위 난수를 발생\r\n    암호학적으로 안전한 난수를 발생시키지 않아 보안과 관련해서는 사용하지 말아야 한다 \r\n    그 대신 Web Crypto API의 window.crypto.getRandomValues() 메소드를 이용하여야 한다.\r\n    */</span>\r\n    bgImage<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">img/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>chosenImage<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//img의 src를 생성</span>\r\n    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>bgImage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//bdImage를 body에 자식 요소로 추가한다 </span>\r\n\r\n<span class=\"token punctuation\">}</span>\r\n</code></pre></div>\n<br>\r\n<br>\n<h1 id=\"배경이미지-랜덤-생성\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EA%B2%BD%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%9E%9C%EB%8D%A4-%EC%83%9D%EC%84%B1\" aria-label=\"배경이미지 랜덤 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배경이미지 랜덤 생성</h1>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> images <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"1.jpg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"2.jpg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"3.jpg\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"4.jpg\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"5.jpg\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> bgImage <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"img\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> changeBtn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".changeBackgroud\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\nchangeBtn<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> changeBackgroud<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> chosenImage <span class=\"token operator\">=</span> images<span class=\"token punctuation\">[</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> images<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\nbgImage<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">img/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>chosenImage<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\r\ndocument<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>bgImage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol>\n<li>\n<p>이미지 태그를 생성하기 위해 <strong>document.createElement(“img”)</strong> 를 사용함</p>\n<ul>\n<li>createElement()에 생성하고자 하는 태그를 입력</li>\n</ul>\n</li>\n<li>\n<p><strong>const chosenImage = images[Math.floor(Math.random() * images.length)]</strong></p>\n<ul>\n<li>\n<p>배경 선택을 랜덤으로 하기 위해서 0~1사이에 난수를 생성는 <strong>Math.random</strong>을 사용</p>\n</li>\n<li>\n<p>발생한 난수를 images 배열의 길이 만큼 곱해 0 ~ images.length 사이에 난수를 생성</p>\n</li>\n<li>\n<p>Math.floor를 사용해 소수점 뒷자리를 반올림해 정수를 생성</p>\n</li>\n<li>\n<p>암호학적으로 안전한 난수를 발생시키지 않아 보안과 관련해서는 사용하지<br>\n말아야 한다 그 대신 Web Crypto API의 window.crypto.getRandomValues()<br>\n메소드를 이용하여야 한다.</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>bgImage.src = img/${chosenImage}</strong></p>\n<ul>\n<li>생성된 img태그의 src를 지정</li>\n</ul>\n</li>\n<li>\n<p><strong>document.body.appendChild(bgImage)</strong></p>\n<ul>\n<li>createElement(“img”)와 bgImage.src = <strong>img/${chosenImage}</strong> 를 사용해 생성된</li>\n</ul>\n<p><code class=\"language-text\">img src = \"chosenImage</code> 가  body의 자식으로 들어간다</p>\n</li>\n</ol>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EC%86%8C%EC%8A%A4%EC%BD%94%EB%93%9C\">소스코드</a></li>\n</ul>\n</div>","excerpt":"배경화면 바꾸기 기능 구현 소스코드 배경이미지 랜덤 생성 이미지 태그를 생성하기 위해 document.createElement(“img”) 를 사용함 createElement()에 생성하고자 하는 태그를 입력 const chosenImage = images[Math.floor(Math.random() * images.length)] 배경 선택을 랜덤으로 하기 위해서 0~1사이에 난수를 생성는 Math.random을 사용 발생한 난수를 images 배열의 길이 만큼 곱해 0 ~ images.length 사이에 난수를 생성 Math.floor를 사용해 소수점 뒷자리를 반올림해 정수를 생성 암호학적으로 안전한 난수를 발생시키지 않아 보안과 관련해서는 사용하지 말아야 한다 그 대신 Web Crypto API의 window.crypto.getRandomValues() 메소드를 이용하여야 한다. bgImage.src = img/${chosenImage} 생성된 img태그의 src를 지정 do…","frontmatter":{"date":"March 28, 2023","title":"TodoList (4)  - 배경화면 바꾸기 기능 구현","categories":"TodoList Js","author":"Js","emoji":"🧢"},"fields":{"slug":"/Todolist/background/"}},"next":{"id":"bd4dc3bd-59ef-51c1-8655-a370a1c7d36e","html":"<h1 id=\"login-기능-구현\" style=\"position:relative;\"><a href=\"#login-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84\" aria-label=\"login 기능 구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>login 기능 구현</h1>\n<h2 id=\"소스코드\" style=\"position:relative;\"><a href=\"#%EC%86%8C%EC%8A%A4%EC%BD%94%EB%93%9C\" aria-label=\"소스코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소스코드</h2>\n<h3 id=\"javascript\" style=\"position:relative;\"><a href=\"#javascript\" aria-label=\"javascript permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JavaScript</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> login_form <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#login_form\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> login_input <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#login_form #name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> login_button <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#login_form #submit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> greeting <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#greeting\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> hidden <span class=\"token operator\">=</span> <span class=\"token string\">\"hidden\"</span>\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">onLogin</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">const</span> username <span class=\"token operator\">=</span> login_input<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\r\n    login_form<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>hidden<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">,</span> username<span class=\"token punctuation\">)</span>\r\n    <span class=\"token function\">paintGreetings</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">paintGreetings</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">username</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    greeting<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>username<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\r\n    greeting<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>hidden<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">const</span> savedUsername <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>savedUsername <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    login_form<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>hidden<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    login_form<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"submit\"</span><span class=\"token punctuation\">,</span> onLogin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token function\">paintGreetings</span><span class=\"token punctuation\">(</span>savedUsername<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"stylecss\" style=\"position:relative;\"><a href=\"#stylecss\" aria-label=\"stylecss permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>style.css</h3>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.hidden</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> login_form <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#login_form\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> login_input <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#login_form #name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> login_button <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#login_form #submit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> greeting <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#greeting\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol>\n<li>\n<p><strong>document는 js가 html에 접근하기 위해서 사용되어짐</strong></p>\n</li>\n<li>\n<p><strong>HTML 요소의 선택은 다음과 같습니다</strong></p>\n<ul>\n<li>\n<p><strong>document.getElementsByTagName(태그이름):</strong> <br>\r\n-> 해당 태그 이름의 요소를 모두 선택함.</p>\n</li>\n<li>\n<p><strong>document.getElementById(아이디):</strong> <br>\r\n-> 해당 아이디의 요소를 선택함.</p>\n</li>\n<li>\n<p><strong>document.getElementsByClassName(클래스이름):</strong> <br>\r\n-> 해당 클래스에 속한 요소를 모두 선택함.</p>\n</li>\n<li>\n<p><strong>document.getElementsByName(name속성값):</strong> <br>\r\n-> 해당 name 속성값을 가지는 요소를 모두 선택함..</p>\n</li>\n<li>\n<p><strong>document.querySelectorAll(선택자):</strong> <br>\r\n-> 해당 선택자로 선택되는 요소를 모두 선택함.</p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"onlogin-함수\" style=\"position:relative;\"><a href=\"#onlogin-%ED%95%A8%EC%88%98\" aria-label=\"onlogin 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>onLogin 함수</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">onLogin</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">const</span> username <span class=\"token operator\">=</span> login_input<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\r\n    login_form<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>hidden<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">,</span> username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">paintGreetings</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol>\n<li>\n<p><strong>event.preventDefault()</strong>\r\nlogin_input.value의 값을 가져오기 위해서 <br>\r\n<strong>form태그의 자동으로 submit되고 페이지를 재시작하는 event의 기본동작을 막는다</strong> <br></p>\n</li>\n<li>\n<p>login 되었을때 login_form 부분은 보이지 않게 하기위해 <strong>classList를 사용해</strong> <br>\r\n기존 클래스명을 유지한채 ‘hidden’ 클래스명을 추가</p>\n</li>\n<li>\n<p>input에 넣은 값을 저장하기위해 **localStorage.setItem(“username”, username)**을<br>\n사용함 개발자 도구에서 <strong>Application 메뉴</strong>로 이동해 <strong>Local Storage</strong> 항목을 선택해<br>\n확인할 수 있다.</p>\n</li>\n</ol>\n<h2 id=\"paintgreetings-함수\" style=\"position:relative;\"><a href=\"#paintgreetings-%ED%95%A8%EC%88%98\" aria-label=\"paintgreetings 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>paintGreetings 함수</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">paintGreetings</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">username</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    greeting<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>username<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\r\n    greeting<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>hidden<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol>\n<li><strong>innerText를 사용해</strong> id 값이 greeting인 h1 태그 안에 <strong><code class=\"language-text\">Hello ${username}</code>를 출력</strong></li>\n</ol>\n<br>\r\n<br>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> savedUsername <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>savedUsername <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    login_form<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>hidden<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    login_form<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"submit\"</span><span class=\"token punctuation\">,</span> onLogin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token function\">paintGreetings</span><span class=\"token punctuation\">(</span>savedUsername<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol>\n<li>\n<p>Local Storage에 저장된 username의 값이 없다면 login 부분의 class =“hidden”을 한다.</p>\n</li>\n<li>\n<p><strong>login_form.addEventListener(“submit”, onLogin)</strong> <br></p>\n<ul>\n<li>login_form에서 <strong>submit</strong> 이벤트를 감지할때 <strong>onLogin</strong> 함수를 실행</li>\n</ul>\n</li>\n</ol>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EC%86%8C%EC%8A%A4%EC%BD%94%EB%93%9C\">소스코드</a></p>\n<ul>\n<li><a href=\"#javascript\">JavaScript</a></li>\n<li><a href=\"#stylecss\">style.css</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#onlogin-%ED%95%A8%EC%88%98\">onLogin 함수</a></p>\n</li>\n<li>\n<p><a href=\"#paintgreetings-%ED%95%A8%EC%88%98\">paintGreetings 함수</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"March 28, 2023","title":"TodoList (2) - Login 기능 구현","categories":"TodoList Js","author":"Js","emoji":"🧢"},"fields":{"slug":"/Todolist/login/"}},"prev":{"id":"6c1853c7-be96-54a8-9360-711e4f2e2d6a","html":"<h1 id=\"api를-이용해-날씨-정보-가져오기\" style=\"position:relative;\"><a href=\"#api%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%B4-%EB%82%A0%EC%94%A8-%EC%A0%95%EB%B3%B4-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0\" aria-label=\"api를 이용해 날씨 정보 가져오기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>API를 이용해 날씨 정보 가져오기</h1>\n<h2 id=\"소스코드\" style=\"position:relative;\"><a href=\"#%EC%86%8C%EC%8A%A4%EC%BD%94%EB%93%9C\" aria-label=\"소스코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소스코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> weather <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#weather\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> <span class=\"token constant\">API_KEY</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"4dd7add724570dbc3c2270897dd5257b\"</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">onGeoOk</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">position</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> lat <span class=\"token operator\">=</span> position<span class=\"token punctuation\">.</span>coords<span class=\"token punctuation\">.</span>latitude<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">const</span> lon <span class=\"token operator\">=</span> position<span class=\"token punctuation\">.</span>coords<span class=\"token punctuation\">.</span>longitude<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://api.openweathermap.org/data/2.5/weather?lat=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>lat<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;lon=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>lon<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;appid=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">API_KEY</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;units=metric</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n            weather<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>data<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> / </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>data<span class=\"token punctuation\">.</span>weather<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>main<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> / </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>data<span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">.</span>temp<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">onGeoError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Can't find you. No weather for you.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\nnavigator<span class=\"token punctuation\">.</span>geolocation<span class=\"token punctuation\">.</span><span class=\"token function\">getCurrentPosition</span><span class=\"token punctuation\">(</span>onGeoOk<span class=\"token punctuation\">,</span> onGeoError<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token comment\">// 장치의 현재 위치를 가져옴, 위치를 얻는데 성공지 onGeok 실행 실패시 onGeoError 실행  </span></code></pre></div>\n<ul>\n<li>\n<p><strong><code class=\"language-text\">navigator.geolocation.getCurrentPosition(onGeoOk, onGeoError)</code></strong></p>\n<ul>\n<li>\n<p>장치의 현재 위치를 가져오게 됩니다</p>\n</li>\n<li>\n<p>위치를 얻는데 성공하면 <strong>onGeok()</strong> 함수를 실행하고 실패시<br>\n<strong>onGeoError()</strong> 함수를 실행</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"api-이용\" style=\"position:relative;\"><a href=\"#api-%EC%9D%B4%EC%9A%A9\" aria-label=\"api 이용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>API 이용</h2>\n<ul>\n<li>\n<p>google에 openWeather -> API -> Current weather data에 접속</p>\n</li>\n<li>\n<p>로그인 진행 후 영문이름을 클릭하게 되면 MY API KEYS를 통해서 Key값을 확인</p>\n</li>\n</ul>\n<h2 id=\"ongeook-함수\" style=\"position:relative;\"><a href=\"#ongeook-%ED%95%A8%EC%88%98\" aria-label=\"ongeook 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>onGeoOk 함수</h2>\n<ul>\n<li>\n<p><strong>onGeoOk()</strong> 함수의 인자는 <strong>GeolocationPosition</strong> 객체를 가져온다</p>\n</li>\n<li>\n<p><strong>GeolocationPosition</strong> 객체의 <strong>position.coords</strong> 부분을 보게 되면<br>\n위도와 경도를 확인할 수 있다</p>\n</li>\n<li>\n<p>API 호출 예시를 보게 되면 <strong><a href=\"https://api.openweathermap.org/data/2.5/weather?lat=$%7Blat%7D&#x26;lon=$%7Blon%7D&#x26;appid=$%7BAPI_KEY%7D\">https://api.openweathermap.org/data/2.5/weather?lat=${lat}&#x26;lon=${lon}&#x26;appid=${API_KEY}</a></strong> 되어 있다</p>\n</li>\n<li>\n<p><code class=\"language-text\">&amp;units=metric</code> 부분을 추가하게 되면 섭씨로된 온도를 확인할 수 있다</p>\n</li>\n<li>\n<p><strong>fetch(url)</strong> 을 통해 반환받은 요청 (response)은 then 메서드 콜백인자로 들어가게 된다.</p>\n</li>\n<li>\n<p><strong>.then((response) => response.json())</strong></p>\n<ol>\n<li>\n<p>response의 json() 메서드를 호출해 JSON 데이터를 javascript 객체로 변환한다.</p>\n</li>\n<li>\n<p>변환된 객체는 다음 then의 콜백인자로 넘겨준다.</p>\n</li>\n</ol>\n</li>\n<li>\n<p>JSON() 이란?</p>\n<ol>\n<li>\n<p>서버에서 클라이언트로 데이터를 보낼 때 사용하는 양식이다.</p>\n</li>\n<li>\n<p>클라이언트가 사용하는 언어에 상관없이 통일된 데이터를 주고 받을 수 있도록 만들어진 텍스트 기반의 데이터 교환 표준이다.</p>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>.then((data) =></strong>  -> 을 통해 넘겨받은 값을 통해 필요한 정보를 추출한다.</p>\n</li>\n</ul>\n<h2 id=\"ongeoerror-함수\" style=\"position:relative;\"><a href=\"#ongeoerror-%ED%95%A8%EC%88%98\" aria-label=\"ongeoerror 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>onGeoError 함수</h2>\n<ul>\n<li>\n<p>장치의 현재 위치를 가져오는데 실패시 <strong>onGeoError</strong> 함수 실행</p>\n</li>\n<li>\n<p>Can’t find you. No weather for you. 라는 메시지의 경고창이 뜸</p>\n</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EC%86%8C%EC%8A%A4%EC%BD%94%EB%93%9C\">소스코드</a></li>\n<li><a href=\"#api-%EC%9D%B4%EC%9A%A9\">API 이용</a></li>\n<li><a href=\"#ongeook-%ED%95%A8%EC%88%98\">onGeoOk 함수</a></li>\n<li><a href=\"#ongeoerror-%ED%95%A8%EC%88%98\">onGeoError 함수</a></li>\n</ul>\n</div>","frontmatter":{"date":"March 28, 2023","title":"TodoList (5) -날씨 정보 가져오기","categories":"TodoList Js","author":"Js","emoji":"🧢"},"fields":{"slug":"/Todolist/weather/"}},"site":{"siteMetadata":{"siteUrl":"https://github.com/dony0720","comments":{"utterances":{"repo":"dony0720/dony0720.github.io"}}}}},"pageContext":{"slug":"/Todolist/background/","nextSlug":"/Todolist/login/","prevSlug":"/Todolist/weather/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}