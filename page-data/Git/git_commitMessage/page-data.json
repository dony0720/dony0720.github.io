{"componentChunkName":"component---src-templates-blog-template-js","path":"/Git/git_commitMessage/","result":{"data":{"cur":{"id":"48692518-edfd-5930-99ee-82e2f71732f8","html":"<h1 id=\"git-커밋-메시지는-왜-중요할까\" style=\"position:relative;\"><a href=\"#git-%EC%BB%A4%EB%B0%8B-%EB%A9%94%EC%8B%9C%EC%A7%80%EB%8A%94-%EC%99%9C-%EC%A4%91%EC%9A%94%ED%95%A0%EA%B9%8C\" aria-label=\"git 커밋 메시지는 왜 중요할까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Git 커밋 메시지는 왜 중요할까</h1>\n<p>잘 만든 커밋 메시지는 다른 개발자에게 변경 사항을 전달하는\r\n가장 쉽고 간편한 방법이기 때문입니다. 그래서 기업의 대규모 프로젝트는\r\n당연하고 협력의 비중이 낮은 소규모의 사이드 프로젝트에서도\r\n커밋 컨벤션을 따로 만들어서 규칙을 지키기도 합니다.</p>\n<h2 id=\"커밋-컨벤션이란\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%B0%8B-%EC%BB%A8%EB%B2%A4%EC%85%98%EC%9D%B4%EB%9E%80\" aria-label=\"커밋 컨벤션이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커밋 컨벤션이란?</h2>\n<p>git 커밋 메시지 컨벤션(Git Commit Message Convention)이란\r\n프로젝트 참여자들이 일관된 형식의 커밋 메시지를 작성하기 위한 규칙을 말합니다.\r\n현재 여러 개발자 사이에서 관습적으로 통용되는 가이드라인이 있지만,\r\n각 프로젝트에 따라서 별도의 규칙을 만들어 적용하기도 한다고 합니다.</p>\n<h2 id=\"커밋-메시지를-왜-사용할까요\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%B0%8B-%EB%A9%94%EC%8B%9C%EC%A7%80%EB%A5%BC-%EC%99%9C-%EC%82%AC%EC%9A%A9%ED%95%A0%EA%B9%8C%EC%9A%94\" aria-label=\"커밋 메시지를 왜 사용할까요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커밋 메시지를 왜 사용할까요?</h2>\n<p>git에서 변경 사항을 저장하기 전에 수많은 변경 사항을 적용했을 수 있으므로\r\n저장할 변경 사항을 git에 알려야 합니다. 가장 좋은 방법은 커밋 메시지를 추가하여\r\n변경 사항을 식별하는 것이기 때문에 커밋 메시지를 사용합니다.</p>\n<h2 id=\"커밋-메시지를-잘-작성해야-하는-이유는-무엇인가요\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%B0%8B-%EB%A9%94%EC%8B%9C%EC%A7%80%EB%A5%BC-%EC%9E%98-%EC%9E%91%EC%84%B1%ED%95%B4%EC%95%BC-%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\" aria-label=\"커밋 메시지를 잘 작성해야 하는 이유는 무엇인가요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커밋 메시지를 잘 작성해야 하는 이유는 무엇인가요?</h2>\n<ol>\n<li>커뮤니케이션의 효율성 증대</li>\n</ol>\n<ul>\n<li>일관적이고 명확한 커밋 메시지는 다른 개발자가 더 쉽게 이해하도록 돕기 때문에<br>\n서로의 작업에 대한 이해도를 높이고 프로젝트 관리와 협업에 중요한 역할을 합니다.</li>\n</ul>\n<ol start=\"2\">\n<li>문제 해결 속도 향상</li>\n</ol>\n<ul>\n<li>시간이 지남에 따라 코드베이스는 매우 복잡해질 수 있습니다.<br>\n적절한 커밋 메시지 규칙은 메인테이너가 코드를 이해하는 데 도움이 되며<br>\n향후 변경 사항을 더 쉽게 만들 수 있습니다. 또 문제를 더 쉽게 디버깅할 수 있고 문제가 발견되면<br>\n개발자는 커밋 메시지를 사용하여 언제 어디서 문제가 발생했는지 식별할 수 있다는 장점이 있습니다.</li>\n</ul>\n<ol start=\"3\">\n<li>문서화의 기능</li>\n</ol>\n<ul>\n<li>적절한 커밋 메시지 규칙은 코드베이스 변경 내역을 제공하는 문서 역할을 할 수 있습니다.<br>\n잘 만든 git 커밋 메시지는 해당 프로젝트에서 작업하는 다른 개발자와 미래의 자신에게<br>\n변경 사항을 전달하는 가장 좋은 방법입니다.</li>\n</ul>\n<h2 id=\"커밋-메세지-작성법\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%B0%8B-%EB%A9%94%EC%84%B8%EC%A7%80-%EC%9E%91%EC%84%B1%EB%B2%95\" aria-label=\"커밋 메세지 작성법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커밋 메세지 작성법</h2>\n<ol>\n<li>앞단에 어떤 내용을 담은 커밋인지 커밋 유형을 지정합니다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- Feat: 특정 애플리케이션에 추가하는 새로운 기능\r\n\r\n- Fix : 버그 수정\r\n\r\n- Style : 코드 포맷팅, 코드 오타, 함수명 수정 등 스타일 수정\r\n\r\n- Refactor : 코드 리팩토링(똑같은 기능인데 코드만 개선)\r\n\r\n- Comment: 주석 수정 및 삭제\r\n\r\n- Docs : 문서와 관련된 모든 것\r\n\r\n- Chore : 정기적인 코드 유지 관리</code></pre></div>\n<ol start=\"2\">\n<li>\n<p>다른 사람을 배려하기 위해서 자세하게 커밋 메시지를 작성합니다. 이는 동료 개발자가 변경 사항을 더 잘 이해하는데 도움됩니다.</p>\n</li>\n<li>\n<p>커밋 메세지는 명령하거나 요청하는 어조를 사용합니다.</p>\n</li>\n<li>\n<p>불필요한 구두점 제거합니다.</p>\n</li>\n<li>\n<p>팀에서 정의한 ‘커밋 컨벤션’을 따릅니다.</p>\n</li>\n</ol>\n<p>참고 : <a href=\"https://insight.infograb.net/blog/2023/04/21/why-commit-convention-is-important/#%EC%BB%A4%EB%B0%8B-%EB%A9%94%EC%8B%9C%EC%A7%80%EB%A5%BC-%EC%9E%98-%EC%9E%91%EC%84%B1%ED%95%B4%EC%95%BC-%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\">https://insight.infograb.net/blog/2023/04/21/why-commit-convention-is-important/#%EC%BB%A4%EB%B0%8B-%EB%A9%94%EC%8B%9C%EC%A7%80%EB%A5%BC-%EC%9E%98-%EC%9E%91%EC%84%B1%ED%95%B4%EC%95%BC-%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94</a></p>","excerpt":"Git 커밋 메시지는 왜 중요할까 잘 만든 커밋 메시지는 다른 개발자에게 변경 사항을 전달하는\r\n가장 쉽고 간편한 방법이기 때문입니다. 그래서 기업의 대규모 프로젝트는\r\n당연하고 협력의 비중이 낮은 소규모의 사이드 프로젝트에서도\r\n커밋 컨벤션을 따로 만들어서 규칙을 지키기도 합니다. 커밋 컨벤션이란? git 커밋 메시지 컨벤션(Git Commit Message Convention)이란\r\n프로젝트 참여자들이 일관된 형식의 커밋 메시지를 작성하기 위한 규칙을 말합니다.\r\n현재 여러 개발자 사이에서 관습적으로 통용되는 가이드라인이 있지만,\r\n각 프로젝트에 따라서 별도의 규칙을 만들어 적용하기도 한다고 합니다. 커밋 메시지를 왜 사용할까요? git에서 변경 사항을 저장하기 전에 수많은 변경 사항을 적용했을 수 있으므로\r\n저장할 변경 사항을 git에 알려야 합니다. 가장 좋은 방법은 커밋 메시지를 추가하여\r\n변경 사항을 식별하는 것이기 때문에 커밋 메시지를 사용합니다. 커밋 메시지를 잘 작…","frontmatter":{"date":"June 09, 2023","title":"Git 커밋 메시지의 중요성","categories":"Git","author":"중석","emoji":"📝"},"fields":{"slug":"/Git/git_commitMessage/"}},"next":{"id":"eb6588d5-d49b-544a-aab2-f30747ffc954","html":"<h1 id=\"nullish란\" style=\"position:relative;\"><a href=\"#nullish%EB%9E%80\" aria-label=\"nullish란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Nullish란</h1>\n<p>nullish 병합 연산자 (??) 는 왼쪽 피연산자가 <code class=\"language-text\">null</code> 또는 <code class=\"language-text\">undefined</code>일 때 오른쪽 피연산자를 반환하고,<br>\n그렇지 않으면 왼쪽 피연산자를 반환하는 논리 연산자이다.</p>\n<p>a ?? b의 평가 결과는 다음과 같습니다.</p>\n<ul>\n<li>a가 null도 아니고 undefined도 아니면 a</li>\n<li>그 외의 경우는 b</li>\n</ul>\n<p>nullish 병합 연산자 ??없이 x = a ?? b와 동일한 동작을 하는 코드를 작성하면 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">x = (a !== null &amp;&amp; a !== undefined) ? a : b;</code></pre></div>\n<p>다른 예시를 보겠습니다!!</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">let firstName = null;\r\nlet lastName = null;\r\nlet nickName = \"바이올렛\";\r\n\r\n// null이나 undefined가 아닌 첫 번째 피연산자를 출력한다\r\nconsole.log(firstName ?? lastName ?? nickName ?? \"익명의 사용자\"); // 바이올렛</code></pre></div>\n<p>지금은 firstName, lastName 이 <code class=\"language-text\">null</code> 이기 때문에 nickName을 반환합니다.<br>\n하지만 nickName까지 null 또는 undefined면 “익명의 사용자”가 반환되겠죠?</p>\n<h2 id=\"와-의-차이\" style=\"position:relative;\"><a href=\"#%EC%99%80-%EC%9D%98-%EC%B0%A8%EC%9D%B4\" aria-label=\"와 의 차이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>”??“와 ”||“의 차이</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">let height = 0;\r\n\r\nconsole.log(height || 100); // 100\r\nconsole.log(height ?? 100); // 0 </code></pre></div>\n<h3 id=\"height--100-결과\" style=\"position:relative;\"><a href=\"#height--100-%EA%B2%B0%EA%B3%BC\" aria-label=\"height  100 결과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>height || 100 결과</h3>\n<p>height에 0을 할당했지만 0을 falsy 한 값으로 취급했기 때문에 null이나 undefined를<br>\n할당한 것과 동일하게 처리합니다. 따라서 height || 100의 평가 결과는 100입니다.</p>\n<h3 id=\"height--100-결과-1\" style=\"position:relative;\"><a href=\"#height--100-%EA%B2%B0%EA%B3%BC-1\" aria-label=\"height  100 결과 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>height ?? 100 결과</h3>\n<p>height가 정확하게 null이나 undefined일 경우에만 100이 됩니다.<br>\n예시에선 height에 0이라는 값을 할당했기 때문에 콘솔창에 0이 출력됩니다.</p>\n<p>이런 특징 때문에 높이처럼 0이 할당될 수 있는 변수를 사용해서 기능을 개발할 땐<br>\n||보다 ??가 적합합니다.</p>\n<h2 id=\"연산자-우선순위\" style=\"position:relative;\"><a href=\"#%EC%97%B0%EC%82%B0%EC%9E%90-%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84\" aria-label=\"연산자 우선순위 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>연산자 우선순위</h2>\n<p>??의 연산자 우선순위는 5로 꽤 낮습니다.</p>\n<p>따라서 ??는 =와 ? 보다는 먼저, 대부분의 연산자보다는 나중에 평가됩니다.</p>\n<p>그렇기 때문에 복잡한 표현식 안에서 ??를 사용해 값을 하나 선택할 땐<br>\n괄호를 추가하는 게 좋습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">let height = null;\r\nlet width = null;\r\n\r\n// 괄호를 추가!\r\nlet area = (height ?? 100) * (width ?? 50);\r\n\r\nalert(area); </code></pre></div>\n<p>그렇지 않으면 *가 ??보다 우선순위가 높기 때문에 *가 먼저 실행 아래와 같게 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">let area = height ?? (100 * width) ?? 50;</code></pre></div>\n<h2 id=\"no-chaining-with-and-or-or-operators\" style=\"position:relative;\"><a href=\"#no-chaining-with-and-or-or-operators\" aria-label=\"no chaining with and or or operators permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>No chaining with AND or OR operators</h2>\n<p>AND (&#x26;&#x26;) 와 OR 연산자 (||)를 ??와 직접적으로 결합하여 사용하는 것은 불가능하다.<br>\n이 경우 <code class=\"language-text\">SyntaxError</code>가 발생된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">null || undefined ?? \"foo\"; // SyntaxError 발생\r\ntrue || undefined ?? \"foo\"; // SyntaxError 발생</code></pre></div>\n<p>위와 같은 상황을 해결하고 위해서 우선 순위를 명시적으로 나타내 괄호를 사용하면 된다</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(null || undefined ) ?? \"foo\"; // \"foo\" 반환 </code></pre></div>\n<p>참고 : <a href=\"https://ko.javascript.info/nullish-coalescing-operator\">https://ko.javascript.info/nullish-coalescing-operator</a><br>\n참고 : <a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing\">https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing</a></p>","frontmatter":{"date":"June 09, 2023","title":"Nullish 병합 연산자 (??)","categories":"Js","author":"중석","emoji":"📝"},"fields":{"slug":"/Js/nullish/"}},"prev":{"id":"4d0ff5b6-2577-59a5-b2ae-2329e8015164","html":"<h1 id=\"react-js란\" style=\"position:relative;\"><a href=\"#react-js%EB%9E%80\" aria-label=\"react js란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React Js란?</h1>\n<p>React JS는 기본적으로 Facebook에서 구축하고 유지 관리하는 JavaScript 라이브러리입니다.<br>\n또한 웹 애플리케이션의 간단하고 빠르며 확장 가능한 프런트엔드를 구축하기 위한 효율적이고<br>\n선언적이며 유연한 오픈 소스 JavaScript 라이브러리입니다.</p>\n<h1 id=\"jxs란\" style=\"position:relative;\"><a href=\"#jxs%EB%9E%80\" aria-label=\"jxs란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Jxs란?</h1>\n<ul>\n<li>JavaScript에 XML을 추가하여 확장한 문법이다.</li>\n</ul>\n<h2 id=\"react-js-필요한-스크립트-태크\" style=\"position:relative;\"><a href=\"#react-js-%ED%95%84%EC%9A%94%ED%95%9C-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%ED%83%9C%ED%81%AC\" aria-label=\"react js 필요한 스크립트 태크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React Js 필요한 스크립트 태크</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token operator\">&lt;</span>body<span class=\"token operator\">></span>   \r\n    <span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"root\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>   \r\n    <span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"https://unpkg.com/react@17.0.2/umd/react.production.min.js\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span> \r\n    <span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"https://unpkg.com/react-dom@17.0.2/umd/react-dom.production.min.js\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre></div>\n<p>React Js를 설치하기 위한 JavaScript 코드</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">    <span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"https://unpkg.com/@babel/standalone/babel.min.js\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span>script type<span class=\"token operator\">=</span><span class=\"token string\">\"text/babel\"</span><span class=\"token operator\">></span></code></pre></div>\n<p>Jsx 문법을 브라우저가 이해할 수 있는 형태로 변환하기 위해 필요하다</p>\n<h2 id=\"컴포넌트-작성\" style=\"position:relative;\"><a href=\"#%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%9E%91%EC%84%B1\" aria-label=\"컴포넌트 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컴포넌트 작성</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Title</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\r\n    <span class=\"token operator\">&lt;</span>h3 id<span class=\"token operator\">=</span><span class=\"token string\">\"title\"</span> onMouseEnter<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mouse enter\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\r\n        Hello <span class=\"token constant\">I</span>'m a title\r\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h3<span class=\"token operator\">></span>\r\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Button</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\r\n    <span class=\"token operator\">&lt;</span>button\r\n        style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\r\n            <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> <span class=\"token string\">\"tomato\"</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\r\n        onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"im clicked\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\r\n    <span class=\"token operator\">></span>\r\n        Click me\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\r\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n</code></pre></div>\n<h3 id=\"함수형-컴포넌트-선언\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98%ED%98%95-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%84%A0%EC%96%B8\" aria-label=\"함수형 컴포넌트 선언 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수형 컴포넌트 선언</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1. 컴포넌트 작성시 무조건 대문자로 시작! \r\n2. 함수형 컴포넌트 선언 방법 \r\n  1) const Title = () => () , 화살표 뒤에 ()로 감싸는 경우는 return을 전제로 한다. \r\n  2) function = () => {return()}, 화살표 뒤에 {}로 감싸는 경우는    \r\n     return을 안한다는걸 전제로 하기 때문에 따로 return을 해주어야한다. \r\n\r\n3. 선언된 컴포넌트 안에는 html과 같이 태그안에 속성, 이벤트, 내용을 적어주면 된다.</code></pre></div>\n<h2 id=\"렌더링\" style=\"position:relative;\"><a href=\"#%EB%A0%8C%EB%8D%94%EB%A7%81\" aria-label=\"렌더링 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>렌더링</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Container</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\r\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\r\n        <span class=\"token operator\">&lt;</span>Title <span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n        <span class=\"token operator\">&lt;</span>Button <span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\r\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol>\n<li>Container에 Title과 Button을 포함시키기 위해서는 function으로 만들어주어야 함</li>\n<li>선언한 컴포넌트를 불러오기 위해서는 <code class=\"language-text\">&lt;컴포넌트 이름></code> 형태로 작성해주면 된다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>Container <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> root<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol>\n<li>작성한 jsx를 화면에 렌더링하기 위한 함수</li>\n<li>컴포넌트를 페이지에 렌더링하는 역할을 하며, react-dom 모듈을 불러와야 사용가능하다.</li>\n<li><code class=\"language-text\">&lt;Container /></code>는 Jsx로 작성된 컴포넌트를 의미, <code class=\"language-text\">root</code>는 작성된 Container 컴포넌트를 렌더링해서 보여줄 DOM 안의 위치를 의미한다</li>\n<li><code class=\"language-text\">&lt;Container /></code>를 render 시키기 위해서는 Container 컴포넌트도 함수로 만들어줘야함</li>\n</ol>\n<h2 id=\"react-js와-vanilla-javascript의-노드-변경-차이점\" style=\"position:relative;\"><a href=\"#react-js%EC%99%80-vanilla-javascript%EC%9D%98-%EB%85%B8%EB%93%9C-%EB%B3%80%EA%B2%BD-%EC%B0%A8%EC%9D%B4%EC%A0%90\" aria-label=\"react js와 vanilla javascript의 노드 변경 차이점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React JS와 Vanilla JavaScript의 노드 변경 차이점</h2>\n<h3 id=\"vanilla-javascript\" style=\"position:relative;\"><a href=\"#vanilla-javascript\" aria-label=\"vanilla javascript permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vanilla JavaScript</h3>\n<p>Vanilla JavaScript에서는 DOM 변경을 직접 처리한다.<br>\n즉, 필요한 DOM 요소를 직접 선택하고, 요소의 속성을 변경하거나<br>\n새로운 요소를 추가하거나 기존 요소를 제거하는 등의 작업을 직접 수행하게 된다.<br>\nDOM 변경이 발생하면, 브라우저는 변경된 DOM 트리를 다시 계산하고,<br>\n렌더 트리를 다시 생성한 후 화면에 그린다.<br>\n이 과정은 비용이 많이 드는 연산으로, 자주 발생하게 되면 성능을 저하시킬 수 있다고 한다.</p>\n<h3 id=\"react-js\" style=\"position:relative;\"><a href=\"#react-js\" aria-label=\"react js permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React JS</h3>\n<p>ReactJS는 DOM 변경을 처리하기 위해 가상 DOM(Virtual DOM)이라는 개념을 도입한다.<br>\nReactJS에서는 먼저 메모리에 가상 DOM 트리를 생성한다.<br>\n이 트리는 실제 DOM 트리의 사본으로서, 실제 DOM 트리와 별도로 존재한다.<br>\nReactJS는 상태 변경이 발생할 때마다 새로운 가상 DOM 트리를 생성하고,<br>\n이전의 가상 DOM 트리와 비교하여 변경된 부분을 파악한다.<br>\n이렇게 파악된 변경 사항만 실제 DOM에 반영하는 방식을 사용한다.<br>\n이 과정을 ‘재조정(Reconciliation)’ 또는 ‘Diffing’이라고 부른다.<br>\n가상 DOM을 사용함으로써, 변경이 필요한 최소한의 요소만 실제 DOM에 반영되기 때문에<br>\n불필요한 연산을 줄이고 성능을 향상시킬 수 있다고 한다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#react-js-%ED%95%84%EC%9A%94%ED%95%9C-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%ED%83%9C%ED%81%AC\">React Js 필요한 스크립트 태크</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%9E%91%EC%84%B1\">컴포넌트 작성</a></p>\n<ul>\n<li><a href=\"#%ED%95%A8%EC%88%98%ED%98%95-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%84%A0%EC%96%B8\">함수형 컴포넌트 선언</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%A0%8C%EB%8D%94%EB%A7%81\">렌더링</a></p>\n</li>\n<li>\n<p><a href=\"#react-js%EC%99%80-vanilla-javascript%EC%9D%98-%EB%85%B8%EB%93%9C-%EB%B3%80%EA%B2%BD-%EC%B0%A8%EC%9D%B4%EC%A0%90\">React JS와 Vanilla JavaScript의 노드 변경 차이점</a></p>\n<ul>\n<li><a href=\"#vanilla-javascript\">Vanilla JavaScript</a></li>\n<li><a href=\"#react-js\">React JS</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"November 02, 2023","title":"React","categories":"React","author":"중석","emoji":"📝"},"fields":{"slug":"/React/React (1)/"}},"site":{"siteMetadata":{"siteUrl":"https://github.com/dony0720","comments":{"utterances":{"repo":"dony0720/dony0720.github.io"}}}}},"pageContext":{"slug":"/Git/git_commitMessage/","nextSlug":"/Js/nullish/","prevSlug":"/React/React (1)/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}